[
  {
    "objectID": "08-Bab8.html",
    "href": "08-Bab8.html",
    "title": "8  ANCOVA",
    "section": "",
    "text": "Terkadang, ada sumber variasi dalam percobaan yang dapat diamati secara kuantitatif, tetapi tidak dapat dikendalikan. Sumber variasi tersebut merupakan peubah konkomitan. Pada saat pengaruh sumber variasi tersebut diperhitungkan dalam analisis, kemungkinan:"
  },
  {
    "objectID": "08-Bab8.html#data",
    "href": "08-Bab8.html#data",
    "title": "8  ANCOVA",
    "section": "8.1 Data",
    "text": "8.1 Data\nUntuk melihat pelaksanaan ANCOVA, akan digunakan studi kasus tersebut:\n\nSuatu percobaan di bidang industri ingin mempelajari pengaruh mesin terhadap respons kekuatan serat yang dihasilkan yang dipergunakan dalam industri tekstil. Terdapat tiga perlakuan mesin yang dirancang dengan RAL, masing-masing diulang 5 kali. Telah diketahui bahwa kekuatan serat yang dihasilkan juga tergantung pada diameter serat tersebut. Untuk itu, dalam percobaan ini digunakan peubah penyerta (X) yaitu diameter serat yang dihasilkan. Respon kekuatan serat yang dihasilkan (Y) diukur dalam satuan tertentu. Diameter serat (X) diukur dalam 10^{-3} cm .\n\nSemua analisis dimulai dengan membaca data. Sintaks pipa dari dplyr akan digunakan untuk memperjelas kode.\n\nlibrary(dplyr)\n\nurl<- \"https://docs.google.com/spreadsheets/d/1YdRTf455ajZAc7--MdwYTqbCpGKmMkdmxIZcUXcwS3I/edit?usp=sharing\"\n\ngooglesheets4::read_sheet(url) %>%\n  knitr::kable()\n\n\n\n\nUlangan\nY_Mesin1\nX_Mesin1\nY_Mesin2\nX_Mesin2\nY_Mesin3\nX_Mesin3\n\n\n\n\n1\n36\n20\n40\n22\n35\n21\n\n\n2\n41\n25\n48\n28\n37\n23\n\n\n3\n39\n24\n39\n22\n42\n26\n\n\n4\n42\n25\n45\n30\n34\n21\n\n\n5\n49\n32\n44\n28\n32\n15\n\n\n\n\n\nDari output tabel, dapat dilihat suatu masalah di tabulasi data. Kita ingin tabel akhir memiliki 4 kolom, yaitu ulangan, mesin, X, dan Y. Beda dengan reshaping biasa yang menggabungkan beberapa kolom menjadi satu, kita harus menggabungkan kolom itu menjadi sejumlah kolom. tidyr memiliki metode reshaping yang lebih komprehensif dari reshape2, jadi akan dipakai library tersebut.\nFungsi pivot_longer mengubah data dari wide ke long. Dalam kasus ini, tiap kolom di data awal memiliki format X/Y_Mesin. Terlihat bahwa kolom tersebut dapat dipisah menjadi “X” atau “Y” dan “Mesin” menggunakan underscore. Tentu, yang kita inginkan adalah komputer menyadari kolom yang diawali “X” lalu dimasukkan ke kolom X di tabel akhir, begitu juga untuk Y. Argumen names_sep akan memisahkan X atau Y dengan keterangan mesin di underscore (_).\nLalu, satu kolom yang telah dipisahkan tersebut harus dimasukkan ke kolom baru. names_to menunjukkan kolom baru yang akan dimunculkan. Argumen .value memberi keterangan bahwa bagian pertama dari nama kolom data asli memberi keterangan kolom (X atau Y).\n\ndat2 <- googlesheets4::read_sheet(url) %>%\n  tidyr::pivot_longer( \n             !Ulangan,\n             names_to = c(\".value\", \"Mesin\"), \n             names_sep = \"_\") %>%\n  mutate(Mesin=stringr::str_sub(Mesin, -1))\n\n✓ Reading from \"ANCOVA - P11\".\n\n\n✓ Range 'Sheet1'.\n\n\nData sudah benar."
  },
  {
    "objectID": "08-Bab8.html#visualisasi-ancova",
    "href": "08-Bab8.html#visualisasi-ancova",
    "title": "8  ANCOVA",
    "section": "8.2 Visualisasi ANCOVA",
    "text": "8.2 Visualisasi ANCOVA\nSebelum melakukan perhitungan, kita dapat coba untuk memvisualisasi proses ANOVA dan ANCOVA. Pertama, mulai dengan data peubah respon saja, tanpa perlakuan ataupun peubah konkomitan. Buat scatterplot (geom_point). Penduga untuk tiap observasi yang logis adalah rerata, yang dimunculkan dari stat_summary(fun=\"mean\").\n\nlibrary(ggplot2)\n\nggplot(data=dat2, aes(x=\"\", y=Y))+\n  geom_point(fill=\"#FFFFFF\", shape=21)+  \n  stat_summary(fun=mean, size=1)+\n  theme_bw()+\n  xlab(\"\")+ylab(\"\")+\n  ggtitle(\"Kekuatan Serat\")\n\nWarning: Removed 1 rows containing missing values (geom_segment).\n\n\n\n\n\nBeberapa argumen di akhir kosmetik saja. theme_bw() membuat plot hitam-putih yang lebih rapih. Sekarang, tambahkan perlakuan. Tentu sekarang penduga logis bagi observasi di tiap perlakuan adalah rerata perlakuannya.\n\nlibrary(tayloRswift)\n\nggplot(data=dat2, aes(x=NA, y=Y, group=Mesin, colour=Mesin))+\n  geom_point(fill=\"#FFFFFF\", shape=21)+  \n  stat_summary(fun=mean, size=1)+\n  theme_bw()+\n  scale_color_taylor(palette=\"taylor1989\")+\n  xlab(\"\")+ylab(\"\")+\n  ggtitle(\"Produksi per Mesin\")\n\nWarning: Removed 3 rows containing missing values (geom_segment)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Modul Praktikum Perancangan Percobaan",
    "section": "",
    "text": "misal, Bab 5 dari buku ini akan membahas pertemuan 5.↩︎"
  },
  {
    "objectID": "01-Bab1.html",
    "href": "01-Bab1.html",
    "title": "1  Konsep Dasar Perancangan Percobaan",
    "section": "",
    "text": "Di bab ini, kita akan membedakan suatu percobaan dengan penelitian observasional dan prinsip dari percobaan tersebut, mengilustrasikan istilah-istilah dalam percobaan, menjelaskan konsep perancangan percobaan, dan mencoba beberapa metode penghitungan ukuran sampel."
  },
  {
    "objectID": "01-Bab1.html#percobaan",
    "href": "01-Bab1.html#percobaan",
    "title": "1  Konsep Dasar Perancangan Percobaan",
    "section": "1.1 Percobaan",
    "text": "1.1 Percobaan\n\n1.1.1 Observasi terkadang tidak cukup\nSebuah penelitian mungkin dimulai dengan mengamati dunia sekitar, atau observasi. Mungkin kalian mengamati bahwa pedagang dengan harga murah memiliki lebih banyak pelanggan, atau kalian mengamati bahwa mahasiswa yang lebih banyak belajar memiliki nilai yang lebih tinggi. Namun, kadang hubungan yang ditemukan dalam suatu observasi lebih kompleks dari yang kita amati.\n\n\n\n\n\nKapal layar dan nahkodanya. Foto dari Ludomil Sawicki (Unsplash).\n\n\n\n\nBayangkan ada seorang nahkoda1. Kapal yang dikendalikan oleh nahkoda tersebut berada di tengah angin yang membelokkan kapal tersebut ke kanan dan kiri. Anggap bahwa nahkoda tersebut ingin kapal berlayar lurus, dan nahkoda ini sudah sangat berpengalaman sehingga dia dapat membelokkan kapalnya dengan tepat. Seorang pengamat akan melihat nahkoda tersebut membelokkan kemudi kapalnya ke kanan dan ke kiri, tetapi kapal tetap lurus. Pengamat yang tidak memiliki pengetahuan tentang kapal mungkin menyimpulkan bahwa kemudi tidak berpengaruh pada laju kapal!\nKasus ini merupakan contoh galat sistematis. Kita ingin mengetahui pengaruh arah belok kapal ke arah laju kapal, tetapi Nahkoda tidak membelokkan kapal secara acak, melainkan sesuai dengan kondisi angin agar kapal tetap melaju lurus.\n\n\n1.1.2 Prinsip-prinsip percobaan\nLalu, bagaimana kita dapat mengetahui hubungan antara kemudi kapal dan laju kapal?\nPertama, mungkin kita dapat menyuruh nahkoda untuk membelokkkan kemudinya secara acak. Sebuah koin dapat dilempar, dan sisi yang muncul2 menentukan pembelokan kapal. Ini adalah pengacakan - sebelumnya, jika terjadi angin tertentu, nahkoda pasti membelokkan kapal berkebalikan dengan pengaruh angin tersebut. Peluang kemudi diputar ke kanan dan kiri tidak seimbang. Sekarang, peluang tersebut sama, apapun kondisinya.\nKedua, mungkin ada hal-hal lain yang menyebabkan berubahnya hubungan kemudi dengan laju kapal. Mungkin kapal yang berbeda memiliki sistem kemudi yang berbeda, atau nahkoda berbeda memiliki kemampuan mengemudi berbeda. Oleh karena itu, kita ingin mengendalikan lingkungan: kapal homogen, nahkoda homogen. Atau, kita dapat mengulangi percobaan tersebut di kombinasi kapal dan nahkoda berbeda. Rancangan ini dapat disebut Rancangan Bujur Sangkar Latin, yang mengendalikan keragaman dari dua arah. Rancangan Acak Kelompok Lengkap mengendalikan keragaman dari satu arah, dan rancangan pengendalian lingkungan lainnya yang lebih kompleks dapat mengendalikan keragaman dari berbagai arah3. Namun, rancangan pengendalian lingkungan tersebut tidak perlu dipakai jika kondisi unit percobaaan sudah homogen - tidak ada sumber keragaman dari arah manapun.\nKetiga, ada variabilitas di percobaan ini. Kita tidak dapat mengobservasi semua sumber keragaman. Teori-teori yang dimiliki tentang cara dunia bekerja selalu berubah - beberapa waktu lalu, orang menganggap penyakit disebabkan oleh cairan tubuh (misal, darah) yang tidak seimbang, bukan jasad-jasad seperti bakteri dan virus. Kemungkinan bahwa teori yang paling mutakhir sekalipun belum dapat mengidentifikasi semua sumber keragaman sangat mungkin benar. Bahkan jika ada faktor yang dapat kita observasi, belum tentu semua faktor tersebut dapat dikendalikan. Mungkin, misal, tiba-tiba muncul ikan besar yang menabrak kapal saat belok, sehingga lajunya berubah4. OLeh karena itu, laju kapal pasti tetap beragam.\nAgar keragaman tersebut dapat diukur, perlu lebih dari satu pengamatan. Kalau hanya ada satu pengamatan, simpangan baku akan menjadi nol. Selain itu, makin banyak ulangan, makin kecil ragam sebaran contoh rata-rata5.\nIni adalah inti percobaan: kita mengumpulkan respon (laju kapal) dari individu yang dikondisikan tertentu (nahkoda yang disuruh belok kanan atau kiri). Kita melakukan pengacakan, kontrol lingkungan, dan ulangan.\n\n\n1.1.3 Aplikasikan konsep-konsep tersebut!\nSetelah mengetahui perbedaan observasi dan prinsip dari percobaan, coba pikirkan:\n\nMasalah apa yang mungkin muncul jika kita lakukan observasi dalam kasus harga dagangan dan waktu belajar mahasiswa? Mengapa masalah itu terjadi? Bagaimana Anda akan membuat percobaan untuk mengatasi masalah tersebut?\nAmbil satu hal yang dapat diteliti di sekitar Anda. Apa yang Anda dapat simpulkan dari observasi? Apa yang Anda tidak dapat simpulkan dari observasi? Mengapa? Bagaimana Anda akan membuat percobaan untuk meneliti hal tersebut.\nBuat cause and effects diagram dari kasus yang Anda ambil."
  },
  {
    "objectID": "01-Bab1.html#istilah-dalam-percobaan",
    "href": "01-Bab1.html#istilah-dalam-percobaan",
    "title": "1  Konsep Dasar Perancangan Percobaan",
    "section": "1.2 Istilah dalam percobaan",
    "text": "1.2 Istilah dalam percobaan\nUntuk memperkuat pengertian mengenai istilah percobaan yang Anda miliki, perhatikan contoh tersebut:\n\nSeorang peneliti agronomi melakukan percobaan pada tanaman jagung varietas Arjuna. Jarak tanam di tiap petak diatur berebda-beda, yaitu 20 x 30 \\(\\text{cm}^2\\), 30 x 30 \\(\\text{cm}^2\\), dan 30 x 40 \\(\\text{cm}^2\\). Jenis pupuk yang diberi selama penelitian adalah pupuk campuran NPK dengan dosis 100, 200, 300, dan 400 kg/ha. Untuk semua unit percobaan dilakukan penyiangan sebanyak 2 kali yaitu pada umur 3 dan 5 minggu setelah tanam.\n— Mattjik dan Sumertajaya (2002)\n\n\n1.2.1 Satuan percobaan, respons, dan pengamatan\nSatuan percobaan dalam kasus ini adalah petak. Ingat bahwa satuan percobaan adalah unit terkecil yang diberi perlakuan. Tentu, jarak tanam hanya dapat ditentukan jika ada beberapa tanaman yang disusun di suatu petak; jika hanya ada satu tanaman, tidak mungkin dihitung jarak tanam. Dengan logika yang sama, sangat susah untuk melakukan pemupukan pada satu tanaman tertentu. Pupuk mungkin terbawa ke tanaman lain di petak yang sama oleh angin, air, atau faktor alam lain. Oleh karena itu, unit terkecil yang diberi perlakuan adalah petak.\nSatuan pengamatan tergatung tujuan dari apa yang ingin diamati. Perubahan apa yang kita ingin amati? Misal respons kita adalah produktivitas. Produktivitas mungkin diukur dengan membandingkan berat jagung yang dihasilkan oleh petak tertentu - misal dengan satuan kg/ha. Maka, satuan pengamatan adalah petak, karena respons diukur di petak. Namun, jika kita ingin mengamati tinggi tanaman, maka yang diukur adalah tanaman, sehingga satuan pengamatan adalah tanaman.\n\n\n1.2.2 Faktor, taraf, perlakuan, dan interaksi\nFaktor dalam kasus ini adalah jarak tanam dan pupuk. Varietas dan penyiangan bukan faktor. Mengapa? Jarak tanam dan pupuk berbeda di tiap petak (satuan percobaan), tetapi semua petak ditanam varietas sama dan diberi penyiangan sama. Dalam menentukan faktor, pertanyaan yang penting adalah apa yang akan berbeda di tiap satuan percobaan.\nTaraf adalah nilai dari faktor yang dicobakan. Dalam kasus ini, ada tiga jarak tanam berbeda (20 x 30 \\(\\text{cm}^2\\), 30 x 30 \\(\\text{cm}^2\\), 30 x 40 \\(\\text{cm}^2\\)) yang merupakan taraf dari faktor jarak tanam. Ada empat dosis pupuk berbeda (100 kg/ha, 200 kg/ha, 300 kg/ha, 400 kg/ha) yang menjadi taraf faktor dosis pupuk.\nPerlakuan adalah suatu prosedur atau metode yang diterapkan pada satuan percobaan. Asumsikan bahwa peneliti ingin menerapkan semua kombinasi taraf faktor pada satuan percobaan. Anggap \\(d_{i}\\) adalah jarak tanam ke-i dan \\(p_{j}\\) adalah dosis pupuk ke-j (misal \\(p_{j=1}\\) adalah 100 kg/ha, \\(p_{j=2}\\) adalah 200 kg/ha, dan seterusnya). Oleh karena itu, kita dapat menyusun (di LaTeX):\n$$\n\\begin{bmatrix}\nd_{1}p_{1} & d_{2}p_{1} & d_{3}p_{1}\\\\\nd_{1}p_{2} & d_{2}p_{2} & d_{3}p_{2}\\\\\nd_{1}p_{3} & d_{2}p_{3} & d_{3}p_{3}\\\\\nd_{1}p_{4} & d_{2}p_{4} & d_{3}p_{4}\n\\end{bmatrix}\n$$\n\n\n\\[\n\\begin{bmatrix}\nd_{1}p_{1} & d_{2}p_{1} & d_{3}p_{1}\\\\\nd_{1}p_{2} & d_{2}p_{2} & d_{3}p_{2}\\\\\nd_{1}p_{3} & d_{2}p_{3} & d_{3}p_{3}\\\\\nd_{1}p_{4} & d_{2}p_{4} & d_{3}p_{4}\n\\end{bmatrix}\n\\]\nKita temukan bahwa jumlah perlakuan adalah \\(3\\cdot 4=12\\), dan tiap perlakuan diberikan dalam matriks tersebut. Jika kita mengetahui ulangan, kita dapat menghitung jumlah unit percobaan dengan mengalikan perlakuan dan ulangan.\nAnggap kita temukan bahwa pengaruh dosis pupuk selalu sama di tiap jarak tanam yang berbeda. Situasi ini berarti tidak ada interaksi. Namun, mungkin pengaruh dosis pupuk akan berbeda di jarak tanam yang berbeda - mungkin pengaruh pupuk lebih kecil di jarak tanam yang kecil karena tanaman berkompetisi mencari nutrisi. Kasus ini disebut interaksi, di mana pengaruh suatu level dari faktor berbeda jika level faktor lain berbeda.\n\n\n1.2.3 Model tetap, acak, dan campuran (aplikasi teori)\nAnggap Anda bertanya ke peneliti mengenai cara dia memilih taraf dari dosis pupuk dan jarak tanam. Model apa yang tepat berdasarkan jawaban peneliti?\n\nDosis pupuk dan jarak tanam dipilih oleh peneliti secara langsung6.\nPeneliti melakukan proses pengacakan dari semua nilai dosis pupuk dan jarak tanam yang ada (misal dengan mengocok dan mengambil kertas berisi nilai dosis dan jarak tertentu)7.\nPeneliti mengacak nilai jarak tanam, tapi dosis pupuk dipilih sendiri8.\n\n\n\n1.2.4 Rancangan perlakuan, pengedalian lingkungan, dan respon\nDalam penjelasan sebelumnya, kita telah menyentuh rancangan perlakuan dengan mengasumsikan bahwa peneliti ingin tahu pengaruh kombinasi tiap taraf dari kedua faktor. Ini disebut rancangan bersilang karena taraf dari tiap faktor saling bebas. Namun, bisa jadi beberapa dosis pupuk tertentu tidak bisa dipakai di jarak tanam kecil. Misal, untuk melakukan pemupukan 400 kg/ha perlu mesin tertentu yang terlalu besar di petak dengan jarak tanam 20 x 30 \\(\\text{cm}^2\\). Taraf dari faktor tidak saling bebas, sehingga dia bersarang. Taraf-taraf tertentu bersarang pada taraf lain, misal pupuk 400 kg/ha hanya bersarang di jarak tanam besar, tidak bisa pergi ke jarak tanam kecil.\nLalu, bagaimana jika petak-petak tersebut memiliki kesuburan yang berbeda? Misal sebagian dari petak berada di hutan, sebagian lagi berada di dekat sungai, sebagian berada di gunung. Tentu, kondisi petak sebagai unit percobaan harus dikendalikan agar homogen - ini adalah rancangan pengendalian lingkungan.\nTerakhir, misal Anda ingin mengukur tinggi tanaman. Apakah Anda ingin mengukur menggunakan penggaris? Meteran? Software? Jawaban pertanyaan ini adalah rancangan respon.\n\n\n1.2.5 Aplikasi: studi-studi kasus\nTemukan faktor, level, perlakuan, pengendalian lingkungan, satuan percobaan dan satuan pengamatan, jumlah ulangan, serta respons dari percobaan. Soal ini diambil dari Mattjik dan Sumertajaya (2002):\n\nSuatu Lembaga Penelitian Padi melakukan percobaan untuk mengetahui pengaruh penggunaan berbagai pestisida cair terhadap produksi padi. Percobaan dilakukan pada satu hamparan sawah yang mempunyai tingkat kesuburan atau kandungan bahan organik yang relatif sama. Masing-masing perlakuan diberikan pada lahan seluas 4 x 5 \\(\\text{m}^2\\). Perlakuan yang dicobakan ada 7, yaitu Dol-Mix (1 kg), Dol-Mix (2 kg), DDT + \\(\\gamma-\\)BHC, Azodrin, Dimecron-Boom, Dimecron-Knap, dan tanpa pestisida (sebagai kontrol), masing-masing diulang 4 kali. Respon yang diukur adalah produksi gabah per kg/ha. Hasil dari setiap petakan dikonversi ke dalam kg/ha.\nPercobaan lain pada Balai Penelitian Padi tersebut adalah ingin mengetahui pengaruh kerapatan benih terhadap produksi padi (kg/ha) pada varietas IR8. Kerapatan benih yang dicobakan adalah 25 kg benih/ha, 50 kg benih/ha, 75 kg benih/ha, 100 kg benih/ha, 125 kg benih/ha, 150 kg benih/ha. Lahan yang digunakan di perbuktin (lereng bukit), sehingga tingkat kesuburan tidak sama. Untuk itu petak dibagi jadi 4 kelompok. Masing-masing benih ditebarkan pada lahan seluas 5 x 5 \\(\\text{m}^2\\) serta hasilnya dikonversi ke satuan kg/ha.\nSebuah balai penelitian ingin mengetahui pengaruh varietas dan dosis pupuk terhadap tinggi tanaman tomat (cm). Dosis pupuk yang digunakan adalah 15, 30, dan 45. Jenis varietas yang digunakan adalah varietas 1, 2, dan 3. Tiap perlakuan diulang sebanyak 4 kali. Selain kombinasi perlakuan yang diberikan, semua kondisi relartif homogen. Setiap petak terdiri dari 10 tanaman tomat.\nTerdapat 3 jenis material untuk pembuatan baterai (A, B, C) yang dicobakan pada 3 temperatur (15 oF, 70 oF, 125 oF). Masing-masing perlakuan diulang sebanyak 3 kali. Dari percobaan tersebut ingin diketahui apakah jenis material dan suhu mempengaruhi daya tahan baterai? Apakah jenis material tertentu cocok untuk suhu tertentu?"
  },
  {
    "objectID": "01-Bab1.html#percobaan-ke-uji-perancangan-percobaan",
    "href": "01-Bab1.html#percobaan-ke-uji-perancangan-percobaan",
    "title": "1  Konsep Dasar Perancangan Percobaan",
    "section": "1.3 Percobaan ke uji: perancangan percobaan",
    "text": "1.3 Percobaan ke uji: perancangan percobaan\nKita telah melihat dua contoh percobaan (nahkoda dan varietas jagung). Bagaimana kita menarik kesimpulan dari percobaan tersebut? Suatu hipotesis mengenai keadaan dunia (misal, bahwa pengaruh faktor ke respon sebesar \\(\\beta\\)) harus diuji. Fungsi perancangan percobaan adalah pembuatan dan pengujian hipotesis tersebut.\n\n1.3.1 Penentuan ulangan\nAda tiga metode penetuan ulangan:\n\nMinimal 3\nMinimal derajat bebas galat 15\nMenggunakan formula di bawah:\n\n\\[\nr\\geq 2\\left(Z_{\\alpha/2}+Z_{\\beta}\\right)^2\\left(\\frac{\\sigma}{\\delta}\\right)^2\n\\]\n$$\nr\\geq 2\\left(Z_{\\alpha/2}+Z_{\\beta}\\right)^2\\left(\\frac{\\sigma}{\\delta}\\right)^2\n$$\n\n\nMetode 2 dan 3 berkaitan erat dengan pengujian suatu hipotesis. Perhatikan bahwa:\n\nUji-F yang digunakan di dalam ANOVA berupa rasio kuadrat tengah: KT perlakuan/KT galat. Sedangkan, kuadrat tengah galat adalah jumlah kuadrat galat dibagi derajat bebas galat. Pada saat kita memberi jumlah minimal pada derajat bebas galat, secara tidak langsung kita memengaruhi besar kuadrat tengah galat, yang memengaruhi staistik uji-F.\nFormula (3) sangat berkaitan dengan uji. \\(\\alpha\\) adalah peluang menolak \\(H_{0}\\) jika \\(H_{0}\\) benar dalam suatu uji. Sedangkan \\(\\beta\\) adalah peluang menerima \\(H_{0}\\) jika \\(H_{1}\\) benar9. Selain itu, \\(\\delta\\) adalah perbedaan rataan yang diinginkan. Benang merah yang dapat diambil dari formula ini adalah menentukan jumlah ulangan, jika dalam menggunakan uji dapat mendeteksi perbedaan rataan sebesar \\(\\delta\\) dengan peluang kesalahan sebesar \\(\\alpha\\) dan \\(\\beta\\), jika diketahui ragam populasi \\(\\sigma^2\\).\n\nBagaimana kita menghitung nilai tersebut di R? Untuk formula 2, anggap kita menghitung RAL, sehingga rumus db galat adalah \\(t(r-1)\\). Oleh karena itu:\n\\[\n\\begin{align*}\nt(r-1)&\\geq15\\\\\nr-1&\\geq \\frac{15}{t}\\\\\nr&\\geq \\frac{15}{t}+1\n\\end{align*}\n\\]\n$$\n\\begin{align*}\nt(r-1)&\\geq15\\\\\nr-1&\\geq \\frac{15}{t}\\\\\nr&\\geq \\frac{15}{t}+1\n\\end{align*}\n$$\n\n\nAnggap ada empat perlakuan:\n\n\nCode\nt=4\n#ceiling dipakai untuk membulatkan ke atas\nceiling(15/t+1)\n\n\n[1] 5\n\n\nBagaimana cara kita menghitung formula ketiga? Selain secara manual, dapat dibuat fungsi di R:\n\n\nCode\njmlUlangan<-function(alpha,beta,popvar,delta)\n{\n  #Temukan nilai Z. Note bahwa alpha dibagi 2\n  #lower.tail=T akan membuat nilai Z negatif, karena akan menghitung kuantil dari kiri.\n  Za=qnorm(alpha/2,lower.tail=F)\n  Zb=qnorm(beta,lower.tail=F)\n  r=2*((Za+Zb)^2)*(popvar/delta)^2\n  return(ceiling(r))\n}\njmlUlangan(0.05,0.10,3,5)\n\n\n[1] 8\n\n\nCode\njmlUlangan(0.05,0.10,0.3,3)\n\n\n[1] 1\n\n\nKalian dapt mengubah argumen dari fungsi tersebut untuk mencoba kombinasi nilai ukuran sampel yang berbeda. Note, hasil-hasil perhitungan dibulatkan ke atas karena:\n\nJumlah ulangan pasti bilangan bulat. Perlakuan tidak mungkin diulang 3.5 kali, misal.\nSemua metode tersebut mensyaratkan minimal. Dalam kata lain, jumlah ulangan lebih dari sama dengan hasil rumus tersebut. Jika kita membulatkan saja, ada risiko angka tersebut dibulatkan menjadi angka yang lebih kecil dari hasil rumus. Oleh karena itu, pembulatan ke atas memastikan angka yang dibulatkan lebih besar atau sama dengan hasil rumus yang digunakan."
  },
  {
    "objectID": "01-Bab1.html#pengayaan",
    "href": "01-Bab1.html#pengayaan",
    "title": "1  Konsep Dasar Perancangan Percobaan",
    "section": "1.4 Pengayaan",
    "text": "1.4 Pengayaan\nUkuran sampel juga dapat dihitung dengan fungsi power.anova.test di R. Power adalah kuasa uji, yang didefinisikan sebagai probabilitas suatu hipotesis nol ditolak jika hipotesis nol tersebut memang salah. Masukkan jumlah kelompok, ragam antara kelompok, ragam dalam kelompok, kuasa uji, dan taraf nyata yang diinginkan. Jumlah sampel diasumsikan NULL.\n\n\nCode\npower.anova.test(groups = 4, \n                 between.var = 3, within.var = 5, \n                 power=0.90, sig.level=0.05,\n                 n=NULL)\n\n\n\n     Balanced one-way analysis of variance power calculation \n\n         groups = 4\n              n = 8.91936\n    between.var = 3\n     within.var = 5\n      sig.level = 0.05\n          power = 0.9\n\nNOTE: n is number in each group\n\n\nJika kita memiliki rata-rata per kelompok, rata-rata tersebut dapat dimasukkan:\n\n\nCode\nratakel <- c(550, 598, 598, 646)\np <- power.anova.test(groups = length(ratakel), \n                      between.var = var(ratakel), within.var = 6400, \n                      power=0.9,sig.level=0.05,\n                      n=NULL)\np\n\n\n\n     Balanced one-way analysis of variance power calculation \n\n         groups = 4\n              n = 20.68861\n    between.var = 1536\n     within.var = 6400\n      sig.level = 0.05\n          power = 0.9\n\nNOTE: n is number in each group"
  },
  {
    "objectID": "02-Bab2.html",
    "href": "02-Bab2.html",
    "title": "2  Percobaan Faktor Tunggal",
    "section": "",
    "text": "Bab ini akan membahas percobaan faktor tunggal dalam RAL, RAK, dan RBSL. Oleh karena itu, keragaman yang disebabkan perlakuan merupakan level-level dari satu faktor tertentu saja. Kita akan memulai dengan menjelaskan rancangan-rancangan pengendalian lingkungan secara garis besar. Inti dari bab ini adalah penjelasan dan implementasi tiap rancangan. Di akhir bab, akan ada pengayaan berupa rancangan Greko-Latin dan Balanced Incomplete Block Designs."
  },
  {
    "objectID": "02-Bab2.html#pengendalian-lingkungan-secara-garis-besar",
    "href": "02-Bab2.html#pengendalian-lingkungan-secara-garis-besar",
    "title": "2  Percobaan Faktor Tunggal",
    "section": "2.1 Pengendalian lingkungan secara garis besar",
    "text": "2.1 Pengendalian lingkungan secara garis besar\nDalam meneliti efek suatu peubah pada peubah lainnya, sering muncul sumber keragaman lain - kita dapat sebut hal ini sebagai faktor penganggu. Ada beberapa faktor penganggu yang kita tidak dapat observasi dan tidak dapat kendalikan. Dampak faktor-faktor tersebut diatasi oleh pengacakan. Ada beberapa faktor penganggu yang dapat diobservasi, tapi tidak dapat dikendalikan. ANCOVA, yang akan dipelajari di sesi UAS, mengatasi masalah tersebut. Terakhir, penganggu yang dapat dikendalikan diatasi dengan rancangan pengendalian lingkungan (local control).\n\n2.1.1 RAL: unit percobaan homogen\nRancangan Acak Lengkap digunakan jika semua satuan percoban homogen. Karena tidak ada sumber keragaman, perlakuan diacak langsung ke unit percobaan.\n\n\n2.1.2 Rancangan yang melakukan pengendalian lingkungan\nJika satuan percobaan heterogen, ada beberapa rancangan yang dapat mengendalikan faktor penganggu tersebut. Rancangan yang dipakai tergantung jumlah arah keragaman, yang sama saja dengan jumlah faktor penganggu yang dapat dikontrol. Misal, dua arah keragaman berarti ada dua faktor penganggu yang dapat dikendalikan. Rancangan-rancangan tersebut adalah:\n\nRancangan Acak Kelompok Lengkap (RAKL) - keragaman satu arah\n\nPerlakuan diacak di tiap kelompok\nSyarat: setiap perlakuan muncul sekali dalam setiap kelompok\n\nRancangan Bujur Sangkar Latin (RBSL) - keragaman dua arah\n\nPengelompokan per baris dan kolom\nSyarat: setiap perlakuan hanya muncul sekali pada arah baris dan hanya muncul sekali pada arah kolom\n\nRancangan Greko Latin - keragaman tiga arah\n\nDua Bujur Sangkar Latin digabung: bujur sangkar pertama memiliki perlakuan berhuruf Latin, bujur sangkar kedua memiliki huruf Yunani\nSyarat: tiap huruf Yunani hanya muncul sekali bersama dengan tiap huruf Latin.\n\nRancangan lain yang lebih kompleks, tetapi rancangan tersebut di luar cakupan mata kuliah ini."
  },
  {
    "objectID": "02-Bab2.html#ral",
    "href": "02-Bab2.html#ral",
    "title": "2  Percobaan Faktor Tunggal",
    "section": "2.2 RAL",
    "text": "2.2 RAL\nSetelah melihat penurunan ANOVA untuk Rancangan Acak Lengkap, atau dapat disebut Rancangan Teracak Lengkap (RTL), atau Completely Randomized Design (CRD). Karakteristik RAL (selain karakteristik umum percobaan faktor tunggal di awal bab) adalah:\n\nKondisi unit percobaan yang digunakan relatif homogen\nKarena unit percobaan harus homogen, umumnya percobaan dilakukan di laboratorium atau lingkungan yang dapat dikendalikan\nKarena lingkungan percobaan terbatas, unit percobaan tidak cukup besar dan jumlah perlakuan terbatas\n\nDari karakteristik tersebut, kelebihan dalam menggunakan RAL adalah sebagai berikut:\n\nAnalisis yang digunakan sederhana karena hanya dihitung pengaruh satu faktor\nBagan rancangan percobaan lebih mudah karena pengacakan langsung dilakukan ke unit percobaan\nBanyaknya ulangan bisa berbeda antar perlakuan\nBanyaknya perlakuan dan ulangan hanya dibatasi oleh banyaknya unit percobaan yang tersedia\n\nNamun, RAL juga memiliki beberapa kekurangan, antara lain:\n\nInformasi karena data yang hilang relatif kecil dibanding rancangan lainnya\nJika ada faktor penganggu, sering kali kurang efisien karena pengacakan tidak dibatasi\nJika jumlah ulangan sedikit dan unit percobaan tidak benar-benar homogen, pengulangan akan tidak konsisten\nGalat percobaan mencakup seluruh keragaman antar unit percobaan kecuali yang disebabkan oleh perlakuan\n\nKekurangan tersebut menunjukkan kelemahan asumsi unit percobaan relatif homogen di RAL. Sesuai (2) dan (4), galat percobaan menjadi lebih besar jika ada sumber keragaman antar unit percobaan yang tidak disebabkan perlakuan. Walaupun keragaman itu dapat diatasi oleh pengulangan, dibutuhkan beberapa ulangan untuk mengatasi keragaman.\n\n2.2.1 Pengacakan\nPenerapan perlakuan pada unit percobaan RAL dilakukan secara acak lengkap terhadap seluruh unit percobaan. Setiap perlakuan mempunyai peluang yang sama besar untuk diterapkan di tiap unit percobaan. Pengacakan dapat dilakukan dengan bantuan sistem lotere/undian, tabel bilangan acak, kalkulator, atau software komputer. Tiap pengacakan akan memiliki hasil berbeda. Salah satu cara pengacakan di software komputer (misal Excel) dapat dilakukan adalah sebagai berikut:\n\nSemua perlakuan disusun secara sistematik (semuanya terurut - r baris pertama adalah r ulangan perlakuan 1, dan seterusnya.)\nBerikan label nomor 1 sampai n (banyaknya unit percobaan)\nBangkitkan bilangan acak sebanyak n, bisa menggunakan fungsi =RAND() di Excel\nUrutkan perlakuan berdasarkan bilangan acaknya dari terbesar ke terkecil\n\nPengacakan menggunakan software R akan digambarkan melalui studi kasus tersebut:\n\nSuatu Lembaga Penelitian Padi melakukan percobaan untuk mengetahui pengaruh penggunaan berbagai pestisida cair terhadap produksi padi. Percobaan dilakukan pada satu hamparan sawah yang mempunyai tingkat kesuburan atau kandungan bahan organik yang relatif sama. Masing-masing perlakuan diberikan pada lahan seluas 4 x 5 \\(\\text{m}^2\\). Perlakuan yang dicobakan ada 7, yaitu Dol-Mix (1 kg), Dol-Mix (2 kg), DDT + \\(\\gamma-\\)BHC, Azodrin, Dimecron-Boom, Dimecron-Knap, dan tanpa pestisida (sebagai kontrol), masing-masing diulang 4 kali. Respon yang diukur adalah produksi gabah per kg/ha. Hasil dari setiap petakan dikonversi ke dalam kg/ha.\n— Mattjik dan Sumertajaya (2002)\n\nTotal perlakuan adalah 28. Akan digunakan fungsi design.crd dari library agricolae di R. Lihat dulu argumen-argumen fungsi tersebut:\n\n\nCode\nlibrary(agricolae)\n#cek fungsi design.\nstr(design.crd)\n\n\nfunction (trt, r, serie = 2, seed = 0, kinds = \"Super-Duper\", randomization = TRUE)  \n\n\nArgumen trt akan diisi perlakuan, r akan diisi ulangan. Randomization pasti TRUE karena kita ingin pengacakan dilakukan. Serie merupakan argumen yang berkaitan dengan skema penomoran unit percobaan - jika serie=2, penomoran mulai dari 101. Kita memilih seed=0 agar penomoran berurutan logis (mulai dari 0). Lalu, kita lakukan pengacakan dengan fungsi tersebut:\n\n\nCode\n#masukkan perlakuan\nperlakuan<-c(\"DolMix1\",\"DolMix2\",\"DDT\",\"Azodrin\",\"DimecronB\",\"DimecronK\",\"Kontrol\")\n\n#buat bagan\nbaganRAL<-design.crd(trt=perlakuan,r=4,seed=16,serie=0)\n\n#akses output -> hasil design.crd$book\nknitr::kable(head(baganRAL$book,n=10))\n\n\n\n\n\nplots\nr\nperlakuan\n\n\n\n\n1\n1\nKontrol\n\n\n2\n1\nDimecronB\n\n\n3\n2\nKontrol\n\n\n4\n1\nDimecronK\n\n\n5\n2\nDimecronK\n\n\n6\n1\nDDT\n\n\n7\n2\nDimecronB\n\n\n8\n3\nDimecronB\n\n\n9\n1\nDolMix2\n\n\n10\n2\nDolMix2\n\n\n\n\n\nHanya ditunjukkan 10 unit percobaan pertama agar tabel tidak terlalu panjang, tetapi jumlah tersebut seharusnya sudah dapat menggambarkan hasil pengacakan bagan percobaan RAL.\n\n2.2.1.1 Pengacakan - edibble\nPercobaan juga dapat dirancang dengan package edibble. Package ini memudahkan pengguna untuk membuat suatu bagan dari suatu konteks (misal, sebuah cerita), dan memudahkan pengguna mengetahui konteks dari suatu rancangan. Untuk install package tersebut, install package simulate terlebih dahulu.\n\n\nCode\nremotes::install_github(\"emitanaka/simulate\")\n\n\nLalu install package edibble, dan install deggust untuk membantu visualiasi bagan percobaan:\n\n\nCode\ninstall.packages(\"edibble\")\nremotes::install_github(\"emitanaka/deggust\")\n\n\nMisal, lihat kembali soal cerita:\n\nSuatu Lembaga Penelitian Padi melakukan percobaan untuk mengetahui pengaruh penggunaan berbagai pestisida cair terhadap produksi padi. Percobaan dilakukan pada satu hamparan sawah yang mempunyai tingkat kesuburan atau kandungan bahan organik yang relatif sama. Masing-masing perlakuan diberikan pada lahan seluas 4 x 5 \\(\\text{m}^2\\). Perlakuan yang dicobakan ada 7, yaitu Dol-Mix (1 kg), Dol-Mix (2 kg), DDT + \\(\\gamma-\\)BHC, Azodrin, Dimecron-Boom, Dimecron-Knap, dan tanpa pestisida (sebagai kontrol), masing-masing diulang 4 kali. Respon yang diukur adalah produksi gabah per kg/ha. Hasil dari setiap petakan dikonversi ke dalam kg/ha.\n— Mattjik dan Sumertajaya (2002)\n\nPembangunan suatu rancangan percobaan akan diawali dengan design. Dalam fungsi design ada argumen name yang berisi nama percobaan yang ingin dilakukan. Oleh karena itu, awali dengan menulis design(name=\"nama percobaan\"). Lalu, logika operasi edibble menggunakan operator pipa. Hasil dari operasi sebelumnya dilanjutkan ke operasi setelahnya. Untuk membuat unit percobaan, tuliskan set_unit. Ada \\(7\\cdot 4=28\\) unit percobaan berupa sawah, sehingga tulis set_unit(sawah=28). Lalu lanjutkan dengan membuat perlakuan, dengan fungsi set_trts. Perlakuan merupakan level dari satu taraf, yaitu pestisida. Level tersebut telah dimasukkan ke vektor perlakuan sebelumnya, jadi tulis set_trts(pestisida=perlakuan).\nLalu, alokasikan perlakuan ke unit. Gunakan fungsi allot_trts(perlakuan ~ unit) sehingga tuliskan allot_trts(pestisida~sawah). Tentu perlakuan diberikan secara acak sehingga tulis assign_trts(\"random\"). Gunakan fungsi serve_table untuk melihat bagan percobaan:\n\n\nCode\nlibrary(edibble)\n\ndesRAL<-design(name=\"Pengaruh pestisida cair pada produksi padi\") %>%\n  set_units(sawah=28) %>%\n  set_trts(pestisida=perlakuan) %>%\n  allot_trts(pestisida ~ sawah) %>%\n  assign_trts(\"random\", seed=420) %>% serve_table\n\nknitr::kable(head(desRAL,n=10))\n\n\n\n\n\nsawah\npestisida\n\n\n\n\nsawah1\nKontrol\n\n\nsawah2\nDolMix1\n\n\nsawah3\nDimecronB\n\n\nsawah4\nKontrol\n\n\nsawah5\nAzodrin\n\n\nsawah6\nDimecronB\n\n\nsawah7\nAzodrin\n\n\nsawah8\nDimecronB\n\n\nsawah9\nDolMix2\n\n\nsawah10\nDimecronK\n\n\n\n\n\nLalu, plot dengan library deggust:\n\n\nCode\ndeggust::autoplot(desRAL)\n\n\n\n\n\nTerlihat bahwa tiap perlakuan mendapat 4 unit percobaan. Umumnya, RAL dengan 7 perlakuan dan 28 ulangan dapat dibuat dengan fungsi takeout. Ambil menu_crd, dengan t=7, n=28. Lalu, lakukan examine_recipe untuk melihat cara membangun RAL tersebut\n\n\nCode\ncrd <- takeout(menu_crd(t = 7, n=28, seed = 420), )\nexamine_recipe(crd)\n\n\ndesign(\"Completely Randomised Design\") %>%\n  set_units(unit = 28) %>%\n  set_trts(trt = 7) %>%\n  allot_trts(trt ~ unit) %>%\n  assign_trts(\"random\", seed = 420) %>%\n  serve_table()\n\n\nCara pembangunannya sama, begitu juga untuk plot:\n\n\nCode\ndeggust::autoplot(crd)\n\n\n\n\n\nPeneliti juga dapat menuliskan respon yang diinginkan dengan fungsi set_rcrds. Perlu dituliskan unit pengamatan respon tersebut, dengan sintaks set_rcrds(respon = unit). Dalam kasus ini tentu diamati hasil produksi dari tiap petakan sawah:\n\n\nCode\ndesRAL %>% set_rcrds(produksi = sawah)\n\n\n# Pengaruh pestisida cair pada produksi padi \n# An edibble: 28 x 3\n        sawah pestisida produksi\n   <unit(28)>  <trt(7)>   <rcrd>\n 1    sawah1  Kontrol          o\n 2    sawah2  DolMix1          o\n 3    sawah3  DimecronB        o\n 4    sawah4  Kontrol          o\n 5    sawah5  Azodrin          o\n 6    sawah6  DimecronB        o\n 7    sawah7  Azodrin          o\n 8    sawah8  DimecronB        o\n 9    sawah9  DolMix2          o\n10    sawah10 DimecronK        o\n# … with 18 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\nLalu, record tersebut dapat diberi batasan nilainya. Misal, tidak mungkin produksi negatif, dengan fungsi expect_rcrds(kondisi respon):\n\n\nCode\ndesRAL %>% set_rcrds(produksi = sawah) %>%  expect_rcrds(produksi >= 0)\n\n\n# Pengaruh pestisida cair pada produksi padi \n# An edibble: 28 x 3\n        sawah pestisida produksi\n   <unit(28)>  <trt(7)>   <rcrd>\n 1    sawah1  Kontrol          o\n 2    sawah2  DolMix1          o\n 3    sawah3  DimecronB        o\n 4    sawah4  Kontrol          o\n 5    sawah5  Azodrin          o\n 6    sawah6  DimecronB        o\n 7    sawah7  Azodrin          o\n 8    sawah8  DimecronB        o\n 9    sawah9  DolMix2          o\n10    sawah10 DimecronK        o\n# … with 18 more rows\n# ℹ Use `print(n = ...)` to see more rows\n\n\nIni dapat membantu tabulasi data. Jika ada data yang di luar ekspektasi setelah dicatat, unit percobaan tersebut dapat diteliti kembali.\n\n\n\n2.2.2 Model\nSetelah memberikan perlakuan-perlakuan kepada unit percobaan, dibutuhkan model untuk menduga pengaruh perlakuan-perlakuan tersebut. Model untuk RAL adalah sebagai berikut:\n\\[\n\\begin{equation}\ny_{ij}=\\mu+\\tau_{i}+\\varepsilon_{ij}\n\\begin{cases}\ni=1,2,...,t\\\\\nj=1,2,...,r\n\\end{cases}\n\\end{equation}\n\\]\nDalam model ini, \\(y_{ij}\\) adalah observasi peubah respon di perlakuan (t) ke-i dan ulangan (r) ke-j. Diasumsikan bahwa \\(\\mu\\) adalah rata-rata umum nilai peubah respon. \\(\\tau_{i}\\) adalah efek perlakuan tertentu. \\(\\mu_{i}\\) adalah rata-rata peubah respon di amatan yang mendapat perlakuan ke-i. Di model tetap, dapat disusun rata-rata perlakuan \\(\\mu_{i}\\) dari \\(\\mu\\) dan \\(\\tau_{i}\\):\n\\[\n\\begin{equation}\n\\mu_{i}=\\mu+\\tau_{i}\n\\end{equation}\n\\]\nDan, anggap bahwa:\n\\[\n\\begin{equation}\n\\frac{\\sum_{i=1}^t\\mu_{i}}{t}=\\mu\n\\end{equation}\n\\]\nSebagai konsekuensi dari asumsi tersebut,\n\\[\n\\begin{align}\n\\frac{\\sum_{i=1}^t\\mu_{i}}{t}&=\\frac{\\sum_{i=1}^t \\left(\\mu+\\tau_{i}\\right)}{t}\\\\\n\\mu&=\\frac{t\\mu}{t}+\\frac{\\sum_{i=1}^t\\tau_{i}}{t}=\\mu+\\frac{\\sum_{i=1}^t\\tau_{i}}{t}\\\\\n\\frac{\\sum_{i=1}^t\\tau_{i}}{t}&=0\n\\end{align}\n\\]\nYang berarti \\(\\sum_{i=1}^t \\tau_{i}=0\\). Maka dari itu, asumsi bahwa jumlah dari rata-rata perlakuan dibagi jumlah perlakuan adalah rata-rata keseluruhan memiliki implikasi bahwa jumlah efek tiap perlakuan nol. Asumsi tersebut tidak akan benar jika jumlah ulangan tiap perlakuan tidak sama1. Oleh karena itu, asumsi bahwa \\(\\sum_{i=1}^t \\tau_{i}=0\\) yang dituliskan di beberapa teks, seperti Mattjik dan Sumertajaya (2002), sebenarnya sama dengan asumsi bahwa semua perlakuan mendapat ulangan sama.\nSuplemen untuk Montgomery (2017) mengatakan bahwa dalam kasus umum, rata-rata keseluruhan dapat didefinisikan sebagai \\(\\sum_{i=1}^tw_{i}\\mu_{i}=\\mu\\), dengan \\(\\sum_{i=1}^tw_{i}=1\\). Dalam kata lain, jumlah terboboti dari rata-rata kelompok adalah rata-rata keseluruhan. Definisi tersebut memberi implikasi bahwa \\(\\sum_{i=1}^t w_{i}\\tau_{i}=0\\), yang diturunkan dengan prosedur sama seperti sebelumnya. Dalam kasus ulangan sama, bobot tiap perlakuan sama, yaitu \\(\\frac{1}{t}\\)2. Secara umum, jika \\(N\\) adalah total unit percobaan dan \\(r_{i}\\) ulangan perlakuan ke-i, bobot memiliki formulasi \\(w_{i}=\\frac{r_{i}}{N}\\) (ini seharusnya intuitif karena kita memboboti sesuai proporsi perlakuan tersebut dari seluruh unit percobaan).\nAsumsi yang analog untuk model acak adalah \\(\\tau_{i}\\sim N(0,\\sigma^2 \\tau)\\).\n\\(\\varepsilon_{ij}\\) adalah komponen galat acak yang merupakan semua sumber keragaman lain. Sumber tersebut, misal, adalah pengukuran, perbedaan antara satuan percobaan, efek dari lingkungan, dan lain-lain. Galat tersebut diasumsikan memiliki nilai harapan nol. Secara matematis:\n\\[\n\\begin{equation}\nE\\left(\\varepsilon_{ij}\\right)=0\n\\end{equation}\n\\]\n\n\n2.2.3 Statistik\nSetelah melihat model, ada beberapa statistik dari peubah respon yang akan digunakan dalam ANOVA. \\(y_{i.}\\) adalah total nilai peubah respon dari seluruh unit percobaan dengan perlakuan ke-i. Dalam kata lain, di perlakuan ke-i, nilai peubah respon dari r ulangan ditambah. \\(\\bar{y}_{i}\\) adalah rata-rata nilai peubah respon dari seluruh observasi dengan perlakuan ke-i. Sedangkan, \\(y_{..}\\) adalah total nilai peubah respon dari seluruh observasi, dengan rata-ratanya dinotasikan \\(\\bar{y}_{..}\\). Rumus-rumus statistik tersebut adalah:\n\\[\n\\begin{align}\ny_{i.}&=\\sum_{j=1}^ry_{ij}&\\bar{y}_{i.}&=\\frac{y_{i.}}{r} & i=1,2,...,t\\\\\ny_{..}&=\\sum_{i=1}^t\\sum_{j=1}^ry_{ij}&\\bar{y}_{..}&=\\frac{y_{..}}{tr}&\n\\end{align}\n\\]\nKita dapat mengatakan bahwa \\(tr=N\\), atau jumlah total unit percobaan.\n\n\n2.2.4 Dekomposisi Jumlah Kuadrat\nANOVA adalah singkatan dari analysis of variance. Analisis ini berkaitan dengan keragaman karena tujuannya adalah mempartisi keragaman menjadi beberapa bagian. Ukuran keragaman total adalah jumlah kuadrat total (\\(JK_{T}\\)), dengan rumus:\n\\[\n\\begin{align}\nJK_{T}&=\\sum_{i=1}^t\\sum_{j=1}^r\\left(y_{ij}-\\bar{y}_{..}\\right)^2=\\sum_{i=1}^t\\sum_{j=1}^r \\left(y_{ij}-\\bar{y}_{i.}\\right)^2+r\\sum_{i=1}^t \\left(\\bar{y}_{i.}-\\bar{y}_{..}\\right)^2\\\\\n&=JK_{G}+JK_{P}\n\\end{align}\n\\]\nJumlah kuadrat tersebut dapat dihitung menggunakan:\n\\[\n\\begin{align}\nFK&=\\frac{y_{..}^2}{tr}\\\\\nJK_{T}&=\\sum_{i=1}^t \\sum_{j=1}^r\\left(y_{ij}-\\bar{y}_{..}\\right)^2=\\sum_{i=1}^t \\sum_{j=1}^r y_{ij}^2-FK\\\\\nJK_{P}&=r\\sum_{i=1}^t \\left(\\bar{y}_{i.}-\\bar{y}_{..}\\right)^2=\\sum_{i=1}^t  \\frac{y_{i.}^2}{r}-FK\\\\\nJK_{G}&=JK_{T}-JK_{P}\n\\end{align}\n\\]\nJika percobaan memiliki ulangan sama. Jika percobaan memiliki ulangan tak sama, jumlah ulangan r harus diubah menjadi \\(r_{i}\\), jumlah ulangan perlakuan ke-i. Oleh karena penyesuaian tersebut, rumus-rumus jumlah kuadrat sebagai berikut:\n\\[\n\\begin{align}\nFK&=\\frac{y_{..}^2}{\\sum_{i=1}^t r_{i}}\\\\\nJK_{T}&=\\sum_{i=1}^t \\sum_{j=1}^{r_{i}}\\left(y_{ij}-\\bar{y}_{..}\\right)^2=\\sum_{i=1}^t \\sum_{j=1}^{r_{i}} y_{ij}^2-FK\\\\\nJK_{P}&=\\sum_{i=1}^t\\sum_{j=1}^{r_{i}} \\left(\\bar{y}_{i.}-\\bar{y}_{..}\\right)^2=\\sum_{i=1}^t  \\frac{y_{i.}^2}{r_{i}}-FK\\\\\nJK_{G}&=JK_{T}-JK_{P}\n\\end{align}\n\\]\n\n\n2.2.5 Asumsi Galat\nDari jumlah kuadrat, dapat ditemukan kuadrat tengah. Kuadrat tengah adalah jumlah kuadrat dibagi derajat bebasnya. Kuadrat tengah galat merupakan penduga bagi ragam \\(\\sigma^2\\), di mana \\(E\\left(KT_{G}\\right)=\\sigma^2\\) dan jika semua \\(\\tau_{i}=0\\) kuadrat tengah perlakuan juga merupakan penduga ragam (nilai harapannya akan sama dengan \\(\\sigma^2\\). Hasil ini didapat dari dua asumsi. Asumsi pertama adalah mengenai ragam galat:\n\\[\n\\begin{align}\nVar\\left(\\varepsilon_{ij}\\right)=E\\left[\\{\\varepsilon_{ij}-E(\\varepsilon_{ij})\\}^2\\right]=E\\left(\\varepsilon_{ij}^2\\right)=\\sigma^2\n\\end{align}\n\\]\nKarena nilai harapan \\(E(\\varepsilon_{ij}\\) sama dengan 0. Selain itu, terdapat asumsi mengenai kebebasan galat:\n\\[\n\\begin{align}\nCov\\left(\\varepsilon_{ij}\\varepsilon_{ik}\\right)&=E\\left[\\left(\\varepsilon_{ij}-E\\left[\\varepsilon_{ij}\\right]\\right)\\left(\\varepsilon_{ik}-E\\left[\\varepsilon_{ik}\\right]\\right)\\right]\\\\\n&=E\\left(\\varepsilon_{ij}\\varepsilon_{ik}\\right)=0\n\\end{align}\n\\]\n\n\n2.2.6 Hipotesis dan ujinya\nDinyatakan bahwa \\(E\\left(KT_{P}\\right)=E\\left(KT_{G}\\right)\\) saat perlakuan tidak memiliki efek. Secara formal, ini dinyatakan sebagai:\n\\[\n\\begin{align}\nH_{0}&=\\tau_{1}=...=\\tau_{t}=0\\\\\nH_{1}&=\\text{ Setidaknya ada satu i dengan }\\tau_{i}\\neq0\n\\end{align}\n\\]\nIni sama dengan menyatakan:\n\\[\n\\begin{align}\nH_{0}&=\\mu_{1}=...=\\mu_{t}=\\mu\\\\\nH_{1}&=\\text{ Setidaknya ada satu i dengan }\\mu_{i}\\neq \\mu\n\\end{align}\n\\]\nUji hipotesis ini dilakukan dengan uji F. Ini dikarenakan \\(JK_{G}/\\sigma^2\\) dan \\(JK_{P}/\\sigma^2\\) menyebar chi-kuadrat secara bebas. Jika dilakukan pembagian dua peubah chi-kuadrat saling bebas, dibagi dengan rasio derajat bebas kedua peubah tersebut, akan muncul peubah yang menyebar F. \\(\\sigma^2\\) akan hilang karena saling terbagi. Selain itu, kuadrat tengah merupakan jumlah kuadrat dibagi derajat bebas sehingga \\(KT_{G}\\) dan \\(KT_{P}\\) menyebar F.\n\n\n2.2.7 Review MKT\nMKT pada dasarnya adalah mencari nilai penduga yang meminumkan jumlah kuadrat galat \\(\\sum_{i=1}^t\\sum_{j=1}^r \\hat{\\varepsilon}_{ij}^2=\\sum_{i=1}^t \\sum_{j=1}^r \\left(y_{ij}-\\hat{\\mu}-\\hat{\\tau}_{i}\\right)^2\\). Diketahui dari Kalkulus bahwa mencari nilai ekstrim suatu fungsi (minimum atau maksimum) dilakukan dengan mencari nilai yang menghasilkan turunan pertama nol. Karena ada banyak rumus, akan digunakan turunan parsial:\n\\[\n\\begin{align}\n\\frac{\\delta L}{\\delta \\mu}&=0\\\\\n\\frac{\\delta L}{\\delta \\tau_{i}}&=0, i=1,2,..,t\\\\\n\\end{align}\n\\]\nPenurunan, dan asumsi bahwa \\(\\sum_{i=1}^t \\tau_{i}=0\\) akan menghasilkan:\n\\[\ntr\\hat{\\mu}+r\\left(\\sum_{i=1}^t \\hat{\\tau}_{i}\\right)=tr\\hat{\\mu}=y_{..}\n\\]\nOleh karena itu, penduga bagi \\(\\mu\\), \\(\\hat{\\mu}\\) adalah \\(y_{..}/tr=\\bar{y}_{..}\\). Selain itu, dapat ditemukan bahwa:\n\\[\n\\begin{align}\nr\\bar{y}_{..}+r\\hat{\\tau}_{i}&=y_{i.}\\\\\nr\\hat{\\tau_{i}}&=y_{i.}-r\\bar{y}_{..}\\\\\n\\hat{\\tau}_{i}&=\\bar{y}_{i.}-\\bar{y}_{..}\n\\end{align}\n\\]\nOleh karena itu, kita telah menemukan penduga-penduga tersebut. Terakhir, ternyata hasil penurunan akan mengharuskan:\n\\[\n\\sum_{i=1}^t \\sum_{j=1}^r \\left(y_{ij}-\\mu-\\tau_{i}\\right)=0\n\\]\nIni berarti rata-rata penduga galat juga akan 0, yang memenuhi salah satu asumsi ANOVA. Sebagai tambahan, dalam model acak penduga bagi ragam pengaruh perlakuan adalah:\n\\[\n\\hat{\\sigma}_{\\tau}^2=\\frac{KTP-KTG}{r}\n\\]\n\n\n2.2.8 Review Asumsi-Asumsi\nDapat disimpulkan bahwa asumsi-asumsi yang dibutuhkan dalam penurunan uji F adalah: 1. \\(E\\left(\\varepsilon_{ij}\\right)=E\\left(\\varepsilon_{i.}\\right)=E\\left(\\varepsilon_{..}\\right)=0\\) yang terpenuhi melalui metode MKT. 2. \\(\\sum_{i=1} \\tau_{i}=0\\), yang terpenuhi dari jumlah ulangan sama di satu perlakuan, serta digunakan sebagai batasan dalam MKT. Ada bentuk umum jika asumsi tersebut tidak terpenuhi. 3. \\(E\\left(\\varepsilon_{ij}^2\\right)=\\sigma^2\\) yang dibutuhkan untuk memastikan kuadrat tengah dapat menduga ragam secara tak bias. 4. \\(Cov(\\varepsilon_{ij}\\varepsilon_{kl})=0\\), atau galat saling bebas, juga untuk memastikan ketidakbiasan. 5. \\(\\varepsilon_{ij} \\sim N(0,\\sigma^2)\\) agar dapat dilakukan Uji-F.\n\n\n2.2.9 Tabel ANOVA\nUji-F dilakukan dengan membangun tabel ANOVA. Tabel ANOVA untuk RAL ulangan sama sebagai berikut:\n\n\n\n\n\n\n\n\n\n\n\nSumber Keragaman\ndb\nJK\nKT\nF-hit\nF(dbP,dbG)\n\n\n\n\nPerlakuan\nt-1\nJKP\nJKP/dbP\nKTP/KTG\n\n\n\nGalat\nt(r-1)\nJKG\nJKG/dbG\n\n\n\n\nTotal\ntr-1\nJKT\n\n\n\n\n\n\nDan untuk ulangan tak sama derajat bebas galat menjadi \\(\\sum_{i=1}^t \\left(r-{i}-1\\right)\\) dan derajat bebas total \\(\\sum_{i=1}^t r_{1}\\).\n\n2.2.9.1 Aplikasi: Lengkapi Tabel ANOVA!\nTerdapat sebuah percobaan ulangan sama dengan empat perlakuan dan tiga ulangan. Lengkapi tabel ANOVA tersebut, jika diketahui \\(JK_{P}\\) dan \\(JK_{T}\\)!\n\n\n\n\n\n\n\n\n\n\n\nSumber Keragaman\ndb\nJK\nKT\nF-hit\nF(dbP,dbG)\n\n\n\n\nPerlakuan\nt-1\n120\nJKP/dbP\nKTP/KTG\n\n\n\nGalat\nt(r-1)\nJKG\nJKG/dbG\n\n\n\n\nTotal\ntr-1\n170\n\n\n\n\n\n\nUntuk ulangan tak sama, tuliskan tabel ANOVA jika percobaan tersebut memiliki 3 ulangan pada perlakuan pertama dan terakhir, dan 2 ulangan pada perlakuan kedua, serta 4 ulangan pada perlakan ketiga! Jumlah \\(JK_{P}\\) dan \\(JK_{T}\\) tetap sama.\n\n\n\n2.2.10 Praktek menggunakan R\nSetelah membuat bagan percobaan, kita akan melakukan ANOVA. Kasus yang dipakai akan berbeda, yaitu:\n\nKarantina Tumbuhan ingin mengetahui pengaruh fumigan Methyl Bromide (CH_{3}Br) sebagai pembasmi serangga gudang terhadap daya tumbuh benih kacang hijau. Untuk itu, dilakukan percobaan sebagai berikut: benih kacang hijau diberi fumigan dengan dosis 0 (kontrol), 16 \\(gr/m^2\\), 32 \\(gr/m^2\\), 48 \\(gr/m^2\\), 64 \\(gr/m^2\\). Fumigasi dilakukan selama 2 jam. Benih kacang hijau yang sudah difumigasi dikecambahkan dengan metode kertas hisp (blotter test). Benih yang dikecambahkan diasumsikan homogen. Setelah 7 hari diperoleh hasil sebagai berikut.\n\nAnalisis dimulai dari mengambil data tersebut:\n\n\nCode\nlibrary(googlesheets4)\n#baca sheet\n\nDataRAL<-read_sheet(\"https://docs.google.com/spreadsheets/d/1Bzm_R2Zd4Zbij7BO7LGDJW83DU6T3Wh7R38NN5DHCBs/edit?usp=sharing\")\n\n\n! Using an auto-discovered, cached token.\n\n\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n\n\n  See gargle's \"Non-interactive auth\" vignette for more details:\n\n\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n\n\nℹ The googlesheets4 package is using a cached token for\n  'muh.ammarsahab@apps.ipb.ac.id'.\n\n\n✔ Reading from \"DataRAL\".\n\n\n✔ Range 'Sheet1'.\n\n\nCode\nknitr::kable(DataRAL)\n\n\n\n\n\nDosis\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n\n0\n100\n100\n100\n100\n100\n100\n100\n100\n\n\n16\n100\n100\n100\n100\n100\n100\n100\n100\n\n\n32\n90\n88\n92\n94\n90\n88\n86\n94\n\n\n48\n80\n80\n82\n78\n84\n76\n82\n78\n\n\n64\n90\n80\n92\n78\n82\n88\n94\n76\n\n\n\n\n\nAkan dilakukan beberapa modifikasi terhadap data tersebut. Pertama, data ditransformasi menjadi bentuk long. Ini dikarenkan tabulasi data yang mencatat tiap ulangan dalam satu kolom kurang cocok untuk analisis. Tabulasi tersebut akan diubah sehingga data peubah respon semua ulangan dan perlakuan berada di satu kolom:\n\n\nCode\nlibrary(reshape2)\n\nRALMelt<- melt(DataRAL,\n               #variabel yang membedakan tiap baris di tabulasi asli:\n               id.vars=c(\"Dosis\"),\n               #kolom yang ingin digabung jadi 1:\n               measured.vars=as.character(seq(1,8)),\n               value.name=\"Perkecambahan\")\n\ncolnames(RALMelt)[2]<-\"Ulangan\"\nknitr::kable(head(RALMelt,n=10))\n\n\n\n\n\nDosis\nUlangan\nPerkecambahan\n\n\n\n\n0\n1\n100\n\n\n16\n1\n100\n\n\n32\n1\n90\n\n\n48\n1\n80\n\n\n64\n1\n90\n\n\n0\n2\n100\n\n\n16\n2\n100\n\n\n32\n2\n88\n\n\n48\n2\n80\n\n\n64\n2\n80\n\n\n\n\n\nTanpa mengubah nama kolom, nama kolom Ulangan akan secara default menjadi “variable”. Jika opsi value.name tidak diberi di fungsi melt, kolom Perkecambahan akan menjadi “value”. Lalu, kita buat dosis menjadi sebuah faktor:\n\n\nCode\nRALMelt$Dosis<-as.factor(RALMelt$Dosis)\n\n\nSetelah itu, dapat langsung dilakukan ANOVA.\n\n\nCode\naov_RAL <- aov(Perkecambahan ~ Dosis, data = RALMelt)\nsummary(aov_RAL)\n\n\n            Df Sum Sq Mean Sq F value  Pr(>F)    \nDosis        4 2556.4   639.1   51.36 3.6e-14 ***\nResiduals   35  435.5    12.4                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nHasil ANOVA yang lebih rapih dapat ditunjukkan dengan broom::tidy. Pada intinya, fungsi ini mengubah output anova menjadi suatu tibble, mirip data.frame, sehingga dapat dibuat tabel:\n\n\nCode\nbroom::tidy(aov_RAL) |> knitr::kable()\n\n\n\n\n\nterm\ndf\nsumsq\nmeansq\nstatistic\np.value\n\n\n\n\nDosis\n4\n2556.4\n639.10000\n51.3628\n0\n\n\nResiduals\n35\n435.5\n12.44286\nNA\nNA\n\n\n\n\n\nP-value statistik-F tersebut sangat kecil. Ini berarti kemungkinan menemukan nilai F sama atau lebih dari statistik F yang kita temukan sangat kecil, jika \\(H_{0}\\) benar dan tidak ada efek perlakuan. Oleh karena itu, memakai \\(\\alpha\\) 0.001 dan selebihnya (jika dianggap bahwa kemungkinan sekecil tersebut sudah cukup untuk menolak \\(H_{0}\\)), disimpulkan bahwa perlakuan memiliki efek pada respon.\n\n\n2.2.11 Analisis Percobaan di Python\nSelain menggunakan R dan secara manual, software open-source lain yang dapat digunakan untuk Perancangan Percobaan adalah Python. Kita akan menggunakan modul pandas dan doe dari Python. Modul doe memerlukan tabulasi data dengan bentuk berbeda dari R. Tiap kolom harus mengandung data tiap perlakuan. Ini merupakan kebalikan dari tabulasi asli, yaitu tiap baris mengandung data perlakuan dan tiap kolom mengandung data ulangan.\nOleh karena itu, kita mulai dengan membaca data melalui pd.read_csv().Di python, ubah saja tautan google sheets https://docs.google.com/spreadsheets/d/tautan/edit?usp=sharing menjadi https://docs.google.com/spreadsheets/d/tautan/export?gid=0&format=csv. Bagian terakhir setelah tautan diubah menjadi export?gid=0&format=csv,\n\n\nCode\nimport pandas as pd\n\nRALData=pd.read_csv(\"https://docs.google.com/spreadsheets/d/1Bzm_R2Zd4Zbij7BO7LGDJW83DU6T3Wh7R38NN5DHCBs/export?gid=0&format=csv\")\nRALData\n\n\n   Dosis    1    2    3    4    5    6    7    8\n0      0  100  100  100  100  100  100  100  100\n1     16  100  100  100  100  100  100  100  100\n2     32   90   88   92   94   90   88   86   94\n3     48   80   80   82   78   84   76   82   78\n4     64   90   80   92   78   82   88   94   76\n\n\nReshaping dapat dilakukan sehingga sama seperti tabulasi data R. Agar reshaping tersebut dapat dilakukan, perlu dibuat suatu list yang angka dari satu sampai delapan untuk menandakan ulangan. Anggota list tersebut harus berbentuk karakter. Oleh karena itu, fungsi range(1,9) digunakan untuk membuat suatu deret angka dari \\(1\\) sampai \\(9-1=8\\). Lalu, numerik-numerik tersebut diubah menjadi karakter dan dimasukkan ke dalam list.\nFungsi untuk mengubah numerik ke karakter adalah str. Cara mengaplikasikan fungsi tersebut ke sejumlah suatu deret hasil fungsi range atau list pada umumnya adalah map(fungsi, ranve), atau fungsi(x) for x in range. Lalu, list() mengubah objek menjadi list, atau dapat juga dilakukan dengan [ isi list ]. Hasil kedua kode ini sama:\n\n\nCode\nlist(map(str,range(1,9)))\n\n\n['1', '2', '3', '4', '5', '6', '7', '8']\n\n\nCode\n[str(x) for x in range(1,9)]\n\n\n['1', '2', '3', '4', '5', '6', '7', '8']\n\n\nLalu melt data tersebut:\n\n\nCode\nRALMeltpy=pd.melt(RALData, id_vars=['Dosis'], value_vars=[str(x) for x in range(1,9)])\n\nRALMeltpy.head()\n\n\n   Dosis variable  value\n0      0        1    100\n1     16        1    100\n2     32        1     90\n3     48        1     80\n4     64        1     90\n\n\nNama kolom pertama dan kedua perlu diubah, menggunakan fungsi rename. Fungsi tersebut diaplikasikan ke suatu dataset dengan dataset.rename(). Lalu kolom-kolom yang diubah namanya dapat dispesifikasi dengan columns= {'kolomlama:kolombaru', 'kolomlama:kolombaru'}. inplace=True akan mengubah dataset secara langsung, sedangkan inplace=False akan membuat suatu objek baru:\n\n\nCode\nRALMeltpy.rename(columns = {'variable':'Ulangan', 'value':'Produksi'}, inplace = True)\n\nRALMeltpy.head()\n\n\n   Dosis Ulangan  Produksi\n0      0       1       100\n1     16       1       100\n2     32       1        90\n3     48       1        80\n4     64       1        90\n\n\nLalu gunakan statsmodels untuk ANOVA. OLS digunakan untuk membangun suatu model linear. Sintaksnya relatif mirip dengan R, yaitu ols('respon ~ peubah') dengan C(Peubah) menandakan suatu peubah kategorik. Hasil model tersebut diakses dengan model.fit():\n\n\nCode\nimport statsmodels.api as sm\n\n\nC:\\Users\\Acer\\AppData\\Local\\R\\win-library\\4.2\\reticulate\\python\\rpytools\\loader.py:39: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  module = _import(\nC:\\Users\\Acer\\AppData\\Local\\Programs\\Python\\PYTHON~2\\lib\\site-packages\\statsmodels\\compat\\pandas.py:65: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  from pandas import Int64Index as NumericIndex\n\n\nCode\nfrom statsmodels.formula.api import ols\n\nRALlm= ols('Produksi ~ C(Dosis)',data=RALMeltpy)\nfitRAL=RALlm.fit()\n\n\nLalu, lakukan ANOVA dari objek fit tersebut:\n\n\nCode\ntable = sm.stats.anova_lm(fitRAL) \nprint(table)\n\n\n            df  sum_sq     mean_sq          F        PR(>F)\nC(Dosis)   4.0  2556.4  639.100000  51.362801  3.597935e-14\nResidual  35.0   435.5   12.442857        NaN           NaN\n\n\nHasil sama dengan R."
  },
  {
    "objectID": "02-Bab2.html#rakl",
    "href": "02-Bab2.html#rakl",
    "title": "2  Percobaan Faktor Tunggal",
    "section": "2.3 RAKL",
    "text": "2.3 RAKL\nRancangan Acak Kelompok Lengkap (RAKL) dapat juga disebut sebagai Rancangan Kelompok Teracak Lengkap (RKTL) atau Randomized Complete Block Design (RCBD). Karakteristik RAKL adalah:\n\nKondisi unit percobaan tidak homogen. Keheterogenan unit percobaan berasal dari satu sumber keragaman. Ketidakhomogenan dapat dikendalikan dengan pengelompokan sehingga RAKL memungkinkan pengendalian ragam satu arah.\nFaktor di luar perlakuan dan kelompok relatif homogen.\nKeragaman antarkelompok tinggi, tetapi di dalam kelompok kecil.\n\nOleh karena karakteristik pertama, RAKL cocok digunakan di lapangan, yang memiliki perubahan kondisi (seperti kelembaban, suhu, dsb). Karena RAKL masih dalam satu faktor, perlakuan merupakan level-level dari satu faktor tertentu.\nKelebihan dalam menggunakan RAKL adalah sebagai berikut:\n\nAnalisis statistik yang relatif sederhana bahkan dengan data hilang.\nGalat percobaan akan berkurang sehingga perbandingan antar perlakuan meningkat, dengan kata lain akan memberikan hasil yang lebih akurat daripada RAL karena pengelompokan.\nMengizinkan perhitungan kesalahan yang tidak bias untuk perlakuan tertentu.\nFleksibilitas penuh, bisa memiliki sejumlah perlakuan dan kelompok.\n\nKekurangan dalam menggunakan RAKL adalah sebagai berikut.\n\nTidak cocok untuk jumlah perlakuan besar karena kelompok jadi semakin besar.\nInteraksi antara kelompok dan perlakuan meningkatkan kesalahan di model tetap.\nRagam besar antara unit percobaan dalam kelompok dapat menghasilkan galat yang besar. Jika ada data hilang, RAKL mungkin kurang efisien daripada RAL.\n\nPoin kedua relatif penting - kita ingin perlakuan dan kelompok tidak memengaruhi satu sama lain. Efek semua perlakuan tetap sama di semua kelompok, dan sebaliknya. Namun, asumsi tanpa interaksi ini dapat dilanggar jika menggunakan model di mana kelompok dipilih secara acak.\n\n2.3.1 Pengacakan\nPengacakan RAKL dilakukan di tiap kelompok. Algoritme pengacakan RAKL adalah sebagai berikut:\n\nBuat pemisalan nomor perlakuan 1,2,…,t.\nBeri nomor tersebut di setiap kelompok 1,2,…,t.\nSecara acak mengalokasikan perlakuan t ke unit percobaan di setiap kelompok. Pengacakan dilakukan pada masing-masing kelompok dan setiap perlakuan hanya muncul sekali dalam setiap kelompok.\n\nImplementasi di R memakai library agricolae akan menggunakan contoh berikut:\n\nPercobaan lain pada Balai Penelitian Padi tersebut adalah ingin mengetahui pengaruh kerapatan benih terhadap produksi padi (kg/ha) pada varietas IR8. Kerapatan benih yang dicobakan adalah 25 kg benih/ha, 50 kg benih/ha, 75 kg benih/ha, 100 kg benih/ha, 125 kg benih/ha, 150 kg benih/ha. Lahan yang digunakan di perbuktin (lereng bukit), sehingga tingkat kesuburan tidak sama. Untuk itu petak dibagi jadi 4 kelompok. Masing-masing benih ditebarkan pada lahan seluas 5 x 5 \\(\\text{m}^2\\) serta hasilnya dikonversi ke satuan kg/ha.\n\nAda enam perlakuan, dan empat kelompok. Akan ada 24 unit percobaan.\n\n\nCode\nlibrary(agricolae)\nstr(design.rcbd)\n\n\nfunction (trt, r, serie = 2, seed = 0, kinds = \"Super-Duper\", first = TRUE, \n    continue = FALSE, randomization = TRUE)  \n\n\nArgumen r dalam kasus ini akan menjadi jumlah kelompok. Maka dari itu, kita dapat lakukan pembuatan bagan:\n\n\nCode\nperlakuanRAK<-c(as.character(seq(25,150,25)))\nperlakuanRAK<-paste(perlakuanRAK, \"kg/ha\", sep=\" \")\nbaganRAK<-design.rcbd(perlakuanRAK,4,seed=78)\nknitr::kable(baganRAK$sketch)\n\n\n\n\n\n50 kg/ha\n75 kg/ha\n100 kg/ha\n150 kg/ha\n25 kg/ha\n125 kg/ha\n\n\n75 kg/ha\n50 kg/ha\n150 kg/ha\n25 kg/ha\n125 kg/ha\n100 kg/ha\n\n\n75 kg/ha\n125 kg/ha\n25 kg/ha\n100 kg/ha\n50 kg/ha\n150 kg/ha\n\n\n25 kg/ha\n75 kg/ha\n50 kg/ha\n150 kg/ha\n125 kg/ha\n100 kg/ha\n\n\n\n\n\nPerhatikan bahwa satu perlakuan hanya muncul sekali di tiap baris, sesuai konsep pengacakan RAKL yang dilakukan di dalam tiap baris.\n\n2.3.1.1 Pengacakan edibble\nDalam RAK, ada satuan kelompok. Di tiap kelompok, terdapat 6 petak sesuai dengan perlakuan. Maka dari itu, masukkan kelompok dan petak di set_units. Gunakan nested_in(blok, jml unit) untuk menandakan bahwa petak di dalam kelompok. Selebihnya sama saja. Kerapatan dialokasikan ke petak secara acak:\n\n\nCode\nlibrary(edibble)\n\ndesRAKL<-design(name=\"Pengaruh kerapatan benih pada produksi padi\") %>%\n  set_units(kelompok=4,\n            petak=nested_in(kelompok, 6)) %>%\n  set_trts(kerapatan=perlakuanRAK) %>%\n  allot_trts(kerapatan ~ petak) %>%\n  assign_trts(\"random\", seed=420) %>% serve_table\n\nknitr::kable(head(desRAKL,n=10))\n\n\n\n\n\nkelompok\npetak\nkerapatan\n\n\n\n\nkelompok1\npetak1\n150 kg/ha\n\n\nkelompok1\npetak2\n75 kg/ha\n\n\nkelompok1\npetak3\n125 kg/ha\n\n\nkelompok1\npetak4\n25 kg/ha\n\n\nkelompok1\npetak5\n50 kg/ha\n\n\nkelompok1\npetak6\n100 kg/ha\n\n\nkelompok2\npetak7\n100 kg/ha\n\n\nkelompok2\npetak8\n75 kg/ha\n\n\nkelompok2\npetak9\n125 kg/ha\n\n\nkelompok2\npetak10\n150 kg/ha\n\n\n\n\n\nPlot rancangan tersebut:\n\n\nCode\ndeggust::autoplot(desRAKL)\n\n\n\n\n\nRancangan yang dibuat dapat dibandingkan dengan default RCBD dari edibble:\n\n\nCode\nrcbd <- takeout(menu_rcbd(t = 6, r = 4,seed=420))\nexamine_recipe(rcbd)\n\n\ndesign(\"Randomised Complete Block Design\") %>%\n  set_units(block = 4,\n            unit = nested_in(block, 6)) %>%\n  set_trts(trt = 6) %>%\n  allot_trts(trt ~ unit) %>%\n  assign_trts(\"random\", seed = 420) %>%\n  serve_table()\n\n\nKode yang dibuat relatif mirip. Ada unit yang nested in blok, lalu perlakuan diberikan ke unit. Plot juga akan sama:\n\n\nCode\ndeggust::autoplot(rcbd)\n\n\n\n\n\n\n\n\n2.3.2 Model Linear Aditif\n\\[\ny_{ij}=\\mu+\\tau_{i}+\\beta_{j}+\\varepsilon_{ij}\n\\]\nModel linear aditif tersebut relatif sama dengan RAL. \\(y_{ij}\\) merupakan nilai peubah respon di perlakuan ke-i dan kelompok ke-j, \\(\\tau_{i}\\) merupakan efek pengaruh ke-i, dengan \\(\\sum_{i=1}^t \\tau_{i}=0\\), dan \\(\\varepsilon_{ij}\\sim N(0,\\sigma^2)\\) adalah pengaruh acak di perlakuan ke-i dan kelompok ke-j. Aspek yang berbeda di model tersebut adalah \\(\\beta_{j}\\), atau efek dari kelompok ke-j. Sama seperti efek perlakuan, diasumsikan \\(\\sum_{j=1}^r \\beta_{j}=0\\) untuk model tetap dan \\(\\beta_{j}\\sim N(0,\\sigma_{\\beta}^2)\\).\nOleh karena itu, ada dua hipotesis. Hipotesis pertama, seperti RAL, adalah mengenai pengaruh perlakuan:\n\\[\n\\begin{align}\nH_{0}&:\\tau_{1}=...=\\tau_{t}=0\\\\\nH_{1}&:\\text{ Setidaknya ada satu i di mana } \\tau_{i}\\neq 0\n\\end{align}\n\\]\nYaitu, bahwa semua perlakuan tidak berpengaruh atau sebaliknya, terdapat sedikitnya satu perlakuan yang berpengaruh. Selain itu, ada hipotesis mengenai pengaruh kelompok:\n\\[\n\\begin{align}\nH_{0}&:\\beta_{1}=...=\\beta_{r}=0\\\\\nH_{1}&:\\text{ Setidaknya ada satu j di mana } \\beta_{j}\\neq 0\n\\end{align}\n\\]\nUji hipotesis kelompok tidak selalu dapat dilakukan. Montgomery (2017) mengatakan bahwa jika asumsi normalitas tidak dipenuhi, uji-F bukan cara yang baik untuk menguji efek pengelompokan. Namun, format uji tersebut masih dapat dilakukan sebagai perkiraan. \\(KT_{B}/KT_{G}\\) belum tentu dapat dibandingkan dengan sebaran tertentu, tetapi masih dapat dilihat besarnya secara common sense.\nDari MKT, penduga bagi \\(\\beta_{j}\\) adalah \\(\\bar{y}_{j.}-\\bar{y}_{..}\\). Ini dikarenakan:\n\\[\n\\begin{align}\n\\mu_{j}=\\mu+\\beta_{j}\\\\\n\\hat{\\mu}_{j}=\\bar{y}_{j.}=\\bar{y}_{..}+\\hat{\\beta}_{j}\n\\end{align}\n\\]\n\n\n2.3.3 ANOVA\nJumlah kuadrat yang dihitung sama dengan RAL, dengan tambahan \\(JK_{B}\\) (baris/kelompok) yang memiliki rumus \\(\\sum_{j=1}^r \\left(\\bar{y}_{.j}-\\bar{y}_{..}\\right)^2\\). Oleh karena itu, di RAKL dihitung:\n\\[\n\\begin{align}\nFK&=\\frac{y_{..}^2}{tr}\\\\\nJK_{T}&=\\sum_{i=1}^t \\sum_{j=1}^r\\left(y_{ij}-\\bar{y}_{..}\\right)^2=\\sum_{i=1}^t \\sum_{j=1}^r y_{ij}^2-FK\\\\\nJK_{P}&=r\\sum_{i=1}^t \\left(\\bar{y}_{i.}-\\bar{y}_{..}\\right)^2=\\sum_{i=1}^t  \\frac{y_{i.}^2}{r}-FK\\\\\nJK_{B}&=t\\sum_{j=1}^r\\left(\\bar{y}_{.j}-\\bar{y}_{..}\\right)^2=\\sum_{j=1}^r \\frac{y_{.j}^2}{t}-FK\\\\\nJK_{G}&=JK_{T}-JK_{P}-JK_{B}\n\\end{align}\n\\]\nSehingga konstruksi tabel ANOVA sebagai berikut:\n\n\n\n\n\n\n\n\n\n\n\nSumber Keragaman\ndb\nJK\nKT\nF-hit\nF(dbP,dbG)\n\n\n\n\nPerlakuan\nt-1\nJKP\nJKP/dbP\nKTP/KTG\n\n\n\nBlok\nr-1\nJKB\nJKB/dbB\nKTB/KTG\n\n\n\nGalat\n(t-1)(r-1)\nJKG\nJKG/dbG\n\n\n\n\nTotal\ntr-1\nJKT\n\n\n\n\n\n\nJumlah derajat bebas perlakuan, blok, dan total intuitif - mereka berturut-turut merupakan jumlah perlakuan dikurangi satu, blok dikurangi satu, dan unit percobaan dikurangi satu. Derajat bebas galat ditemukan dengan \\(tr-1-(t-1)-(r-1)=tr-t-r+1=\\left(t-1\\right)\\left(r-1\\right)\\).\n\n\n2.3.4 Analisis dengan R dan Python\nUntuk menunjukkan analisis data RAKL di R, akan dipakai studi kasus ini:\n\nUntuk melihat keefektifan pengaruh pemupukan terhadap produksi suatu varietas padi dilakuakn percobaan di rumah kaca sebagai berikut: 9 kombinasi perlakuan yang dicobakan dengan pupuk K dan P dengan komposisi 2:1 (K2P1), 2:2 (K2P2), …, 3:4 (K3P4) ditambah sebuah kontrol (K0P0). Setiap perlakuan diulang dalam 3 blok (timur, tengah, barat). Data pengamatannya diperoleh sebagai berikut\n\nUntungnya, data memiliki format yang mudah untuk dianalisis. Oleh karena itu, load data tersebut:\n\n\nCode\nlibrary(googlesheets4)\nDataRAKL<-read_sheet(\"https://docs.google.com/spreadsheets/d/1uFi_Njharot8G8-DvHWPhNLLqJ72ym5EuuOqgeFA0hY/edit?usp=sharing\")\n\n\n✔ Reading from \"RAKL_P2 Rancob\".\n\n\n✔ Range 'Sheet1'.\n\n\nCode\nDataRAKL$Produksi<-as.numeric(DataRAKL$Produksi)\n\n#pastikan perlakuan dan kelompok berbentuk faktor\nDataRAKL$Kelompok<-as.factor(DataRAKL$Kelompok)\nDataRAKL$Perlakuan<-as.factor(DataRAKL$Perlakuan)\nknitr::kable(DataRAKL)\n\n\n\n\n\nPerlakuan\nKelompok\nProduksi\n\n\n\n\nKontrol\n1\n10.19\n\n\nKontrol\n2\n9.26\n\n\nKontrol\n3\n12.73\n\n\nK2P1\n1\n32.02\n\n\nK2P1\n2\n25.76\n\n\nK2P1\n3\n19.72\n\n\nK2P2\n1\n23.91\n\n\nK2P2\n2\n21.99\n\n\nK2P2\n3\n21.42\n\n\nK2P3\n1\n17.15\n\n\nK2P3\n2\n15.66\n\n\nK2P3\n3\n10.37\n\n\nK2P4\n1\n10.35\n\n\nK2P4\n2\n13.31\n\n\nK2P4\n3\n14.31\n\n\nK3P1\n1\n21.98\n\n\nK3P1\n2\n19.43\n\n\nK3P1\n3\n16.16\n\n\nK3P2\n1\n18.08\n\n\nK3P2\n2\n13.50\n\n\nK3P2\n3\n18.32\n\n\nK3P3\n1\n18.07\n\n\nK3P3\n2\n14.01\n\n\nK3P3\n3\n14.39\n\n\nK3P4\n1\n12.37\n\n\nK3P4\n2\n16.32\n\n\nK3P4\n3\n10.20\n\n\n\n\n\nDan langsung lakukan analisis:\n\n\nCode\nmodelRAKL<-aov(Produksi~Perlakuan+Kelompok,DataRAKL)\nsummary(modelRAKL)\n\n\n            Df Sum Sq Mean Sq F value  Pr(>F)    \nPerlakuan    8  586.0   73.25   8.297 0.00019 ***\nKelompok     2   39.2   19.61   2.221 0.14090    \nResiduals   16  141.3    8.83                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nAtau, di python:\n\n\nCode\nimport pandas as pd\n\nRAKLpy=pd.read_csv(\"https://docs.google.com/spreadsheets/d/e/2PACX-1vTi9yO_OJZ5pHMmPRlPqPxK9TydeVWI--rXAYfFfwj2v6ee-vUrQGYUGYb5zgguZ5mgu9IDhwB-dIwl/pub?gid=0&single=true&output=csv\")\nRAKLpy\n\n\n   Perlakuan  Kelompok  Produksi\n0    Kontrol         1     10.19\n1    Kontrol         2      9.26\n2    Kontrol         3     12.73\n3       K2P1         1     32.02\n4       K2P1         2     25.76\n5       K2P1         3     19.72\n6       K2P2         1     23.91\n7       K2P2         2     21.99\n8       K2P2         3     21.42\n9       K2P3         1     17.15\n10      K2P3         2     15.66\n11      K2P3         3     10.37\n12      K2P4         1     10.35\n13      K2P4         2     13.31\n14      K2P4         3     14.31\n15      K3P1         1     21.98\n16      K3P1         2     19.43\n17      K3P1         3     16.16\n18      K3P2         1     18.08\n19      K3P2         2     13.50\n20      K3P2         3     18.32\n21      K3P3         1     18.07\n22      K3P3         2     14.01\n23      K3P3         3     14.39\n24      K3P4         1     12.37\n25      K3P4         2     16.32\n26      K3P4         3     10.20\n\n\nData sudah dalam format yang tepat untuk fungsi ols:\n\n\nCode\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\n\nRAKLlm= ols('Produksi ~ C(Perlakuan)+ C(Kelompok)',data=RAKLpy)\nfitRAKL=RAKLlm.fit()\n\n\nLalu, lakukan ANOVA dari objek fit tersebut:\n\n\nCode\ntable = sm.stats.anova_lm(fitRAKL) \nprint(table)\n\n\n                df      sum_sq    mean_sq         F    PR(>F)\nC(Perlakuan)   8.0  586.039763  73.254970  8.297279  0.000190\nC(Kelompok)    2.0   39.210696  19.605348  2.220615  0.140898\nResidual      16.0  141.260704   8.828794       NaN       NaN\n\n\nHasil ANOVA tersebut relatif sama. Peluang menemukan nilai F yang sama atau lebih besar jika tak ada efek perlakuan sangat kecil - 0.0002 (0.02 persen). Namun, peluang menemukan nilai F yang sama atau lebih besar jika tak ada efek kelompok kira-kira 0.15 (15 persen). Kita mungkin lebih nyaman menyimpulkan bahwa perlakuan berpengaruh daripada bahwa kelompok berpengaruh. Misal, jika kita memakai \\(\\alpha=5\\%\\) di kedua kasus, kita akan menolak \\(H_{0}\\) untuk perlakuan tapi taktolak \\(H_{0}\\) untuk kelompok.\n\n\n2.3.5 Topik-topik tambahan\n\n2.3.5.1 Efisiensi relatif\nEfisiensi relatif RAKL dengan RAL tanpa penyesuaian dihitung sebagai berikut:\n\\[\nER_{0}=\\frac{\\hat{\\sigma}_{r}^2}{\\hat{\\sigma_{b}^2}}\n\\]\nLalu, \\(\\hat{\\sigma}_{b}^2\\) adalah penduga ragam galat RAK, yang merupakan KTG.\nPenduga ragam galat RAL sedikit lebih kompleks:\n\\[\n\\begin{align}\n\\sigma_{r}^2&=\\frac{(r-1)KTB+r(t-1)KTG}{tr-1}\\\\\n\\end{align}\n\\]\nPenduga ini diturunkan dengan mencari nilai harapan kuadrat tengah dari semua kombinasi rancangan. Pada dasarnya, nilai harapan penduga tersebut akan menjadi KTG RAL. Namun, perbandingan ragam galat tersebut tidak dapat dilakukan secara naif. Sebaran Student t (yang akan digunakan di perbandingan berganda) tidak stabil saat derajat bebas kecil, khususnya di bawah 20. Nilai t kritis akan menurun relatif besar dalam situasi tersebut sehingga probabilitas menemukan perbedaan yang signifikan antara rata-rata perlakuan berfluktuasi. Oleh karena itu, rumus efisiensi relatif memiliki penyesuaian sebagai berikut:\n\\[\n\\begin{align}\nER&=\\frac{\\left(db_{g[RAK]}+1\\right)\\left(db_{g[RAL]}+3\\right)}{\\left(db_{g[RAK]}+3\\right)\\left(db_{g[RAL]}+1\\right)}\\cdot \\frac{\\hat{\\sigma}_{r}^2}{\\hat{\\sigma_{b}^2}}\\\\\n\\end{align}\n\\]\nDi mana \\(db_{g(RAK)}\\) dan \\(db_{g(RAL)}\\) adalah db galat RAK dan RAL. Derajat bebas tersebut diperoleh dengan memakai rumus db galat RAL pada hasil RAK yang kita punya. Dalam contoh sebelumnya, diketahui bahwa db galat adalah 16, dengan 9 perlakuan dan 3 kelompok \\((t-1)(r-1)=8\\cdot 2=16\\). Derajat bebas galat RAL memiliki rumus \\(t(r-1)=9\\cdot 2=18\\). Atau, dapat memakai rumus \\(db_{g(RAL)}=db_{g(RAK)}+db_{b}=(t-1)(r-1)+(r-1)=t(r-1)\\). Untuk mengimplementasikan metode tersebut, buat data frame dari hasil aov terlebih dahulu. Summary aov merupakan sebuah list, dan elemen pertama dari elemen pertama list tersebut merupakan tabel ANOVA:\n\n\nCode\n#ambil elemen 1 [1]; ambil elemen 1 dari elemen 1 [1][[1]]\nTabelANOVA<-as.data.frame(summary(modelRAKL)[1][[1]])\nknitr::kable(TabelANOVA)\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(>F)\n\n\n\n\nPerlakuan\n8\n586.0398\n73.254970\n8.297279\n0.0001896\n\n\nKelompok\n2\n39.2107\n19.605348\n2.220614\n0.1408977\n\n\nResiduals\n16\n141.2607\n8.828794\nNA\nNA\n\n\n\n\n\nLalu, ambil nilai-nilai derajat bebas dan penduga ragam yang diinginkan:\n\n\nCode\n#Ambil derajat bebas\ndbg<-TabelANOVA$Df[3]\ndbkel<-TabelANOVA$Df[2]\ndbp<-TabelANOVA$Df[1]\nr<-dbkel+1\ndbg_RAL<-dbg+dbkel\n\n#Ambil kuadrat tengah\nKTG<-TabelANOVA$`Mean Sq`[3]\nKTB<-TabelANOVA$`Mean Sq`[2]\n\n#hitung penduga ragam RAL\nsigmaRAL<-(dbkel*KTB+r*dbp*KTG)/(dbg+dbkel+dbp)\n\n\nSetelah semua nilai terhitung, hitung efisiensi relatif:\n\n\nCode\nkoreksi<-((dbg+1)*(dbg_RAL+3))/((dbg+3)*(dbg_RAL+1))\nRE<-koreksi*(sigmaRAL/KTG)\n\n\nSemua input tersebut dapat digabung menjadi suatu fungsi:\n\n\nCode\nefisiensiRAKL<-function(aovariance){\n  TabelANOVA<-as.data.frame(summary(aovariance)[1][[1]])\n  #Ambil derajat bebas\n  dbg<-TabelANOVA$Df[3]\n  dbkel<-TabelANOVA$Df[2]\n  dbp<-TabelANOVA$Df[1]\n  r<-dbkel+1\n  dbg_RAL<-dbg+dbkel\n\n  #Ambil kuadrat tengah\n  KTG<-TabelANOVA$`Mean Sq`[3]\n  KTB<-TabelANOVA$`Mean Sq`[2]\n\n  #hitung penduga ragam RAL\n  sigmaRAL<-(dbkel*KTB+r*dbp*KTG)/(dbg+dbkel+dbp)\n\n  #hitungRE\n  koreksi<-((dbg+1)*(dbg_RAL+3))/((dbg+3)*(dbg_RAL+1))\n  RE<-koreksi*(sigmaRAL/KTG)\n  return(RE)\n}\nefisiensiRAKL(modelRAKL)\n\n\n[1] 1.081773\n\n\nInterpretasi dari efisiensi relatif tersebut adalah perlu ulangan sebesar RE kali di RAL untuk mencapai performa sama di uji. Dalam kasus ini, perlu 1.08 kali ulangan agar RAL memliki performa sama dengan RAKL.\n\n\n2.3.5.2 Plot interaksi\nSalah satu asumsi RAKL dengan model tetap adalah tidak adanya interaksi antara perlakuan dan kelompok. Plot interaksi dapat dibuat sebagai berikut:\n\n\nCode\nwith(DataRAKL,interaction.plot(Kelompok, Perlakuan, Produksi))\n\n\n\n\n\nAtau, jika ingin menggunakan ggplot agar plot lebih rapi:\n\n\nCode\nlibrary(ggplot2)\nggplot(DataRAKL, aes(x = Perlakuan, y = Produksi, colour = Kelompok)) + \n    geom_point(data = DataRAKL, aes(y = Produksi)) +\n    geom_line(data = DataRAKL, aes(y = Produksi, group = Kelompok)) + \n    theme_bw()\n\n\n\n\n\nPlot interaksi juga dapat dibuat di python. Pastikan data frame RAKLpy sudah di-load terlebih dahulu sebelum melakukan plotting:\n\n\nCode\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\ng=sns.pointplot(x = \"Perlakuan\",\n              y = \"Produksi\",\n              hue= \"Kelompok\",\n              data = RAKLpy)\n# show the plot\nplt.show()\n\n\n\n\n\nTerlihat beberapa perbedaan antara pola per kelompok, khususnya setelah K3P1 di kedua plot. Pola-pola tersebut menandakan ada kemungkinan interaksi yang perlu diuji lebih lanjut.\n\n\n2.3.5.3 Pendugaan Data Hilang\nData hilang diduga dengan MKT. Nilai data hilang dicari sehingga meminumkan JKG. Oleh karena itu, rumus adalah:\n\\[\ny_{ij}=\\frac{ty_{i.}^{'}+ry_{.j}^{'}-y_{..}^{'}}{(t-1)(r-1)}\n\\]\nDengan t adalah jumlah perlakuan, \\(y_{i.}^{'}\\) total data perlakuan data hilang tesebut, r jumlah kelompok, \\(y_{.j}^{'}\\) total data suatu kelompok. Package R yang memiliki fitur estimasi data hilang adalah st4gi. Package tersebut tidak bisa didapat melalui command install.packages sehingga cara instalasi package sebagai berikut:\n\n\nCode\ndevtools::install_github(\"reyzaguirre/st4gi\")\n\n\nDevtools digunakan untuk menginstalasi dari GitHub. Seperti agricolae, package st4gi juga menyediakan pembuatan bagan percobaan, dengan command cr.rcbd. Pembuatan bagan percobaan dengan st4gi adalah sebagai berikut:\n\n\nCode\nlibrary(st4gi)\ndfrakl<-cr.rcbd(geno=levels(DataRAKL$Perlakuan), #perlakuan\n             nb=3 #jumlah kelompok\n             )\ndfrakl<-dfrakl$book #data frame dari bagan percobaan\nknitr::kable(head(dfrakl,n=10))\n\n\n\n\n\nplot.num\nblock\nrow\ncol\ngeno\n\n\n\n\n1\n1\n1\n1\nKontrol\n\n\n2\n1\n1\n2\nK2P2\n\n\n3\n1\n1\n3\nK3P4\n\n\n4\n1\n2\n3\nK3P3\n\n\n5\n1\n2\n2\nK2P3\n\n\n6\n1\n2\n1\nK2P1\n\n\n7\n1\n3\n1\nK2P4\n\n\n8\n1\n3\n2\nK3P1\n\n\n9\n1\n3\n3\nK3P2\n\n\n10\n2\n1\n1\nK2P2\n\n\n\n\n\nArgumen geno (genotipe) digunakan karena package st4gi digunakan dalam implementasi riset genetik. Data frame yang dibuat dari bagan percobaan akan digunakan sebagai input estimasi data hilang. Sebelumnya, telah dicoba input estimasi data hilang menggunakan DataRAKL asli yang tidak dibuat dari bagan percobaan st4gi, tetapi gagal. Oleh karena itu, input data dari DataRAKL ke dfr (hasil st4gi). Harus dipastikan bahwa data tersebut memiliki urutan sama dengan sorting. Sorting tersebut dimulai dari kelompok, lalu perlakuan:\n\n\nCode\ndforder<-dfrakl[order(dfrakl$block, dfrakl$geno),] #order data frame hasil st4gi\nRAKLorder<-DataRAKL[order(DataRAKL$Kelompok, DataRAKL$Perlakuan),] #order data frame RAKL\nknitr::kable(head(dforder,n=12))\n\n\n\n\n\n\nplot.num\nblock\nrow\ncol\ngeno\n\n\n\n\n6\n6\n1\n2\n1\nK2P1\n\n\n2\n2\n1\n1\n2\nK2P2\n\n\n5\n5\n1\n2\n2\nK2P3\n\n\n7\n7\n1\n3\n1\nK2P4\n\n\n8\n8\n1\n3\n2\nK3P1\n\n\n9\n9\n1\n3\n3\nK3P2\n\n\n4\n4\n1\n2\n3\nK3P3\n\n\n3\n3\n1\n1\n3\nK3P4\n\n\n1\n1\n1\n1\n1\nKontrol\n\n\n15\n15\n2\n2\n1\nK2P1\n\n\n10\n10\n2\n1\n1\nK2P2\n\n\n13\n13\n2\n2\n3\nK2P3\n\n\n\n\n\nBandingkan dengan RAKL order:\n\n\nCode\nknitr::kable(head(RAKLorder,n=12))\n\n\n\n\n\nPerlakuan\nKelompok\nProduksi\n\n\n\n\nK2P1\n1\n32.02\n\n\nK2P2\n1\n23.91\n\n\nK2P3\n1\n17.15\n\n\nK2P4\n1\n10.35\n\n\nK3P1\n1\n21.98\n\n\nK3P2\n1\n18.08\n\n\nK3P3\n1\n18.07\n\n\nK3P4\n1\n12.37\n\n\nKontrol\n1\n10.19\n\n\nK2P1\n2\n25.76\n\n\nK2P2\n2\n21.99\n\n\nK2P3\n2\n15.66\n\n\n\n\n\nKedua data frame tersebut memiliki urutan mirip. Masukkan data dari hasil percobaan ke bagan percobaan st4gi dan hilangkan suatu data:\n\n\nCode\ndforder$y<-RAKLorder$Produksi #input data respon hasil sort\ndforder[12,'y']<-NA #buat salah satu data NA\n\n\nLalu, cek data hilang tersebut. Urutan argumen fungsi adalah peubah respon, perlakuan, kelompok, dan data frame:\n\n\nCode\ncek<-ck.rcbd('y', 'geno', 'block', dforder) #peubah respon, perlakuan, kelompok, df\nknitr::kable(cek$tfr)\n\n\n\n\n\n\n1\n2\n3\n\n\n\n\nK2P1\n1\n1\n1\n\n\nK2P2\n1\n1\n1\n\n\nK2P3\n1\n0\n1\n\n\nK2P4\n1\n1\n1\n\n\nK3P1\n1\n1\n1\n\n\nK3P2\n1\n1\n1\n\n\nK3P3\n1\n1\n1\n\n\nK3P4\n1\n1\n1\n\n\nKontrol\n1\n1\n1\n\n\n\n\n\nData hilang berada di perlakuan K2P3 dan kelompok 2. Kita akan bandingkan hasil perhitungan manual dengan fungsi R. Pertama, cari \\(y_{i.}^{'}\\) dan \\(y_{.j}^{'}\\). Buat tabel total perlakuan dengan dplyr. Operator %>% merupakan pipa yang melanjutkan output suatu fungsi ke fungsi sebelumnya. Misal dforder %>% berarti data.frame dforder menjadi input fungsi selanjutnya, yaitu pengelompokan group_by(geno). Lalu hasilnya dibuatkan tabel simpulan, yaitu dengan sum:\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:edibble':\n\n    as_data_frame\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nTotalPerlakuan<-dforder %>%\n  group_by(geno) %>%\n  summarise(Freq = sum(y,na.rm=T))\nknitr::kable(TotalPerlakuan)\n\n\n\n\n\ngeno\nFreq\n\n\n\n\nK2P1\n77.50\n\n\nK2P2\n67.32\n\n\nK2P3\n27.52\n\n\nK2P4\n37.97\n\n\nK3P1\n57.57\n\n\nK3P2\n49.90\n\n\nK3P3\n46.47\n\n\nK3P4\n38.89\n\n\nKontrol\n32.18\n\n\n\n\n\nDan buat tabel total kelompok:\n\n\nCode\nTotalKelompok<-dforder %>%\n  group_by(block) %>%\n  summarise(Freq = sum(y,na.rm=T))\nknitr::kable(TotalKelompok)\n\n\n\n\n\nblock\nFreq\n\n\n\n\n1\n164.12\n\n\n2\n133.58\n\n\n3\n137.62\n\n\n\n\n\nAmbil total perlakuan K2P3, total kelompok 2, dan total nilai peubah respon:\n\n\nCode\nTotal<-sum(dforder$y,na.rm=T)\nTotalK2P3<-TotalPerlakuan$Freq[3]\nTotal2<-TotalKelompok$Freq[2]\n(9*TotalK2P3+3*Total2-Total)/16\n\n\n[1] 13.31875\n\n\nBandingkan dengan estimasi menggunakan fungsi R. Urutan argumen sama dengan argumen saat pengecekan nilai hilang di RAKL (respon, perlakuan, kelompok, data frame):\n\n\nCode\nknitr::kable(mve.rcbd('y','geno','block',dforder)[12,])\n\n\n\n\n\n\ngeno\nblock\ny\ny.est\n\n\n\n\n13\nK2P3\n2\nNA\n13.31875\n\n\n\n\n\nDapat dilihat bahwa hasil pengisian nilai hilang sama dengan hasil penghitungan manual.\n\n\n2.3.5.4 Koefisien Keragaman\nKoefisien Keragaman merupakan ukuran keheterogenan unit percobaan. Rumus koefisien tersebut cukup sederhana, yaitu penduga simpangan baku dibagi penduga nilai harapan. Karena penduga ragam adalah KTG, penduga simpangan baku adalah akar dari KTG. Rumus tersebut menjadi:\n\\[\nKK=\\frac{\\hat{\\sigma}}{\\bar{y}_{..}}\\cdot 100\\%=\\frac{\\sqrt{KTG}}{\\bar{y}_{..}}\\cdot 100\\%\n\\]\nUntuk menghitung KK dari data RAKL relatif sederhana. Note bahwa dalam prosedur estimasi nilai hilang sudah ditemukan KTG, jadi KTG hanya perlu dipanggil. Jika belum ditemukan, ikuti prosedur yang ada di bagian estimasi nilai hilang:\n\n\nCode\nsqrt(KTG)/mean(DataRAKL$Produksi)*100\n\n\n[1] 17.78923\n\n\nNilai tersebut memiliki interpretasi besar simpangan baku contoh adalah 17 persen dari besar rata-rata contoh.\n\n\n2.3.5.5 Jumlah ulangan\nJumlah kelompok dalam RAKL dihitung menggunakan beberapa kaidah:\n\nMinimal 2\nMinimal derajat bebas galat 12\nFormula perbedaan rataan maksimal\n\nKaidah menggunakan db galat dapat diturunkan sebagai berikut:\n\\[\n\\begin{align}\ndb_{g}&=(t-1)(r-1)\\geq 12\\\\\nr-1&\\geq\\frac{12}{t-1}\\\\\nr&\\geq\\frac{12}{t-1}+1\n\\end{align}\n\\]\nDan implementasi rumus tersebut di R diperlihatkan di bawah:\n\n\nCode\nt<-9 #nilai t dapat disesuaikan\nceiling((12/(t-1))+1)\n\n\n[1] 3\n\n\nSeperti di bab pertama, ceiling digunakan karena pembulatan biasa dapat menghasilkan nilai yang lebih kecil dari hasil rumus. Pembulatan ke atas mencegah hal tersebut. Maka, dibutuhkan minimal 3 kelompok dalam percobaan ini.\nFormula perhitungan jumlah kelompok adalah\n\\[\nr\\geq\\frac{2\\cdot t_{\\alpha/2;dbg}^2 \\cdot \\sigma^2}{\\delta^2}\n\\]\nAsal dari formula tersebut adalah BNT. Formula tersebut menyatakan jumlah kelompok yang dibutuhkan untuk mendeteksi perbedaan sebesar \\(\\delta\\) antara rata-rata dua perlakuan di tingkat signifikasi \\(\\alpha \\%\\). \\(\\sigma^2\\) menandakan ragam, dan \\(t_{\\alpha/2;dbg}^2\\) berkaitan dengan sebaran t yang digunakan di BNT. Alternatif formula tersebut adalah:\n\\[\nr\\geq\\frac{2\\cdot t_{\\alpha/2;dbg}^2 \\cdot kk^2}{q^2}\n\\]\nDi mana KK adalah koefisien keragaman dan q afalah ukuran perbedaan yang dinyatakan dalam persentase. Perhitungan formula tersebut relatif mudah diimplementasikan di R. Oleh karena itu, hanya akan ditunjukkan cara mendapatkan tabel-t dari R. Lower.tail dibuat FALSE agar nilai tabel t tidak minus.\n\n\nCode\nqt(p=0.025,df=16,lower.tail=F) #alpha atau alpha/2, dbg\n\n\n[1] 2.119905"
  },
  {
    "objectID": "02-Bab2.html#rbsl",
    "href": "02-Bab2.html#rbsl",
    "title": "2  Percobaan Faktor Tunggal",
    "section": "2.4 RBSL",
    "text": "2.4 RBSL\nRBSL merupakan rancangan yang memungkinkan adanya dua faktor penganggu. Di luar faktor penganggu tersebut dan perlakuan, unit percobaan dianggap homogen. RBSL memiliki batasan yaitu jumlah perlakuan = baris = lajur. Ini berarti, taraf-taraf dari faktor penganggu juga harus sama dengan taraf faktor perlakuan. Oleh karena itu, aplikasi RBSL relatif terbatas saat jumlah faktor-faktor tersebut dapat bervariasi.\nLalu, satu perlakuan hanya muncul sekali di satu baris dan lajur. Oleh karena hal tersebut dan batasan jumlah perlakuan, baris, dan lajur pada RBSL, terdapat \\(r^2\\) unit percobaan, dengan r adalah jumlah perlakuan, baris, atau lajur. Ini berbeda dengan perlakuan diulang di semua kombinasi baris dan lajur. Jika perlakuan diulang di semua kombinasi baris dan lajur, perlu \\(r^2\\cdot t\\) unit percobaan.\nJumlah unit percobaan tersebut akan menjadi sangat besar jika perlakuan hendak ditambah. Dengan \\(r\\) kelompok atau ulangan, hanya perlu \\(r\\) unit percobaan tambahan untuk menambah satu perlakuan. Sedangkan, di RBSL, \\((r+1)^2-r^2=r^2+2r+1-r^2=2r+1\\), perlu \\(2r+1\\) unit percobaan tambahan. Jumlah tersebut akan menjadi sangat besar jika perlakuan makin banyak.\nSelain itu, rumus derajat bebas galat bagi RBSL adalah \\((r-1)(r-2)\\). Ini memiliki beberapa implikasi. Pertama, jumlah minimal perlakuan adalah dua karena jika tidak derajat bebas galat akan nol. KTG akan menjadi tak terdefinsi. Dalam kasus perlakuan lebih dari dua, tetapi masih sedikit, db galat akan kecil.\nSelain itu, analisis akan kompleks jika ada data hilang atau salah penempatan baris. Diperlukan juga asumsi tidak ada interaksi. Pengaruh baris, perlakuan, dan lajur sama saja bagaimanapun kombinasinya.\nAkan dianlisis kasus RBSL sebagai berikut:\n\nPercobaan tentang pengaruh pemberian pupuk dengan dosis yang berbeda (100, 200, 300, 400) dilakukan di daerah lereng pegunungan. Sumber keragaman unit percobaan secara garis besar dapat diklasifikasikan menjadi dua, yaitu kemiringan lahan dan arah irigasi. Kemiringan lahan dan arah irigasi dapat dikelompokkan masing-masing menjadi empat kelompok.\n\n\n2.4.1 Pengacakan\nAlgoritme pengacakan RBSL sebagai berikut:\n\nSusun perlakuan pada arah diagonal secara acak.\nAcak penempatan baris.\nAcak penempatan lajur.\n\nAlgoritme tersebut dapat diterapkan di R menggunakan package agricolae atau package st4gi. Penerapan agricolae sebaga berikut:\n\n\nCode\nlibrary(agricolae)\nperlakuanBSL<-seq(100,400,100)\nbaganBSL<-design.lsd(trt=perlakuanBSL) #masukkan perlakuan\nknitr::kable(baganBSL$sketch)\n\n\n\n\n\n400\n200\n300\n100\n\n\n200\n400\n100\n300\n\n\n300\n100\n200\n400\n\n\n100\n300\n400\n200\n\n\n\n\n\nSedangkan, penerapan st4gi sebagai berikut:\n\n\nCode\nlibrary(st4gi)\nbaganBSL2<-cr.lsd(geno=perlakuanBSL) #geno=perlakuan\nknitr::kable(baganBSL2$book)\n\n\n\n\n\nplot.num\nrow\ncol\ngeno\n\n\n\n\n1\n1\n1\n300\n\n\n2\n1\n2\n400\n\n\n3\n1\n3\n100\n\n\n4\n1\n4\n200\n\n\n5\n2\n4\n300\n\n\n6\n2\n3\n200\n\n\n7\n2\n2\n100\n\n\n8\n2\n1\n400\n\n\n9\n3\n1\n200\n\n\n10\n3\n2\n300\n\n\n11\n3\n3\n400\n\n\n12\n3\n4\n100\n\n\n13\n4\n4\n400\n\n\n14\n4\n3\n300\n\n\n15\n4\n2\n200\n\n\n16\n4\n1\n100\n\n\n\n\n\nJika dilihat, perlakuan hanya muncul sekali di tiap baris dan di tiap lajur, sesuai batasan pengacakan yang dijelaskan sebelumnya.\n\n2.4.1.1 Pengacakan edibble\nDalam RBSL, ada lajur dan baris. Dalam kasus ini lajur dan baris adalah kemiringan dan lahan. Lalu, tiap petak berada di antara suatu kombinasi kemiringan dan lahan. Oleh karena itu, gunakan crossed_by(kemiringan,lahan) dalam pendefinisian petak.\n\n\nCode\nlibrary(edibble)\n\ndesRBSL<-design(name=\"Pengaruh dosis pupuk di lereng\") %>%\n  set_units(kemiringan=4,\n            irigasi=4,\n            petak=crossed_by(kemiringan,irigasi)) %>%\n  set_trts(dosis=perlakuanBSL) %>%\n  allot_trts(dosis ~ petak) %>%\n  assign_trts(\"random\", seed=420) %>% serve_table\n\nknitr::kable(head(desRBSL,n=10))\n\n\n\n\n\nkemiringan\nirigasi\npetak\ndosis\n\n\n\n\nkemiringan1\nirigasi1\npetak1\n100\n\n\nkemiringan2\nirigasi1\npetak2\n200\n\n\nkemiringan3\nirigasi1\npetak3\n400\n\n\nkemiringan4\nirigasi1\npetak4\n300\n\n\nkemiringan1\nirigasi2\npetak5\n400\n\n\nkemiringan2\nirigasi2\npetak6\n300\n\n\nkemiringan3\nirigasi2\npetak7\n100\n\n\nkemiringan4\nirigasi2\npetak8\n200\n\n\nkemiringan1\nirigasi3\npetak9\n200\n\n\nkemiringan2\nirigasi3\npetak10\n400\n\n\n\n\n\nHasil pengacakan dapat digambarkan:\n\n\nCode\ndeggust::autoplot(desRBSL)\n\n\n\n\n\nBandingkan denganmenu_lsd`:\n\n\nCode\nlsd <- takeout(menu_lsd(t = 4,seed=420))\nexamine_recipe(lsd)\n\n\ndesign(\"Latin Square Design\") %>%\n  set_units(row = 4,\n            col = 4,\n            unit = crossed_by(row, col)) %>%\n  set_trts(trt = 4) %>%\n  allot_trts(trt ~ unit) %>%\n  assign_trts(\"random\", seed = 420) %>%\n  serve_table()\n\n\nPembuatan rancangan sama. Plot juga sama:\n\n\nCode\ndeggust::autoplot(lsd)\n\n\n\n\n\n\n\n\n2.4.2 Model\nModel linier aditif dari RBSL adalah:\n\\[\nY_{ij(k)}=\\mu+\\alpha_{i}+\\beta_{j}+\\tau{k}+\\varepsilon_{ij(k)}\n\\]\ndengan keterangan: \\(i = 1,2,…,r\\) ; \\(j = 1,2,…,r\\) ; \\(k = 1,2,…,r\\) (dalam kata lain, jumlah perlakuan, lajur, dan baris sama) ; \\(\\varepsilon_{ij(k)}\\sim N(0, \\sigma^2)\\), dan:\n\n\\(Y_{ij(k)}\\) = nilai pengamatan pada perlakuan ke-k dalam baris ke-i, lajur ke-j 2.\\(\\mu\\)= rataan umum 3.\\(\\alpha_{i}\\)= pengaruh baris ke-i 4.\\(\\beta_{j}\\)= pengaruh lajur ke-j 5.\\(\\tau_{(k)}\\)= pengaruh perlakuan ke-k dalam baris ke-i, lajur ke-j 6.\\(\\varepsilon_{ij(k)}\\)= pengaruh acak pada perlakuan ke-k dalam baris ke-i, lajur ke-j\n\nAsumsi sama seperti RAKL, ditambah \\(\\sum_{i=1}^t \\alpha_{i}=0\\) untuk model tetap dan \\(\\alpha_{i}\\sim N(0,\\sigma_{\\alpha}^2)\\) untuk model acak. \\(\\alpha_{i}\\) diduga \\(\\bar{y}_{i.(.)}-\\bar{y}_{..(.)}\\) dari hasil penurunan MKT.\n\n\n2.4.3 ANOVA\nHipotesis yang diuji sama dengan RAKL, dengan tambahan hipotesis mengenai pengaruh baris. Hipotesis pertama adalah mengenai pengaruh perlakuan:\n\\[\n\\begin{align}\nH_{0}&:\\tau_{1}=...=\\tau_{r}=0\\\\\nH_{1}&:\\text{ Setidaknya ada satu i di mana } \\tau_{i}\\neq 0\n\\end{align}\n\\]\nYaitu, bahwa semua perlakuan tidak berpengaruh atau sebaliknya, terdapat sedikitnya satu perlakuan yang berpengaruh. Lalu, itu, ada hipotesis mengenai pengaruh lajur, atau kelompok:\n\\[\n\\begin{align}\nH_{0}&:\\beta_{1}=...=\\beta_{r}=0\\\\\nH_{1}&:\\text{ Setidaknya ada satu j di mana } \\beta_{j}\\neq 0\n\\end{align}\n\\]\nDengan interpretasi yang sama seperti hipotesis sebelumnya. Hipotesis yang ditambah RBSL adalah pengaruh baris:\n\\[\n\\begin{align}\nH_{0}&: \\alpha_{1}=...=\\alpha_{r}=0\\\\\nH_{1}&: \\text{ Setidaknya ada satu i di mana }\\alpha_{i}\\neq 0\n\\end{align}\n\\]\nHipotesis tersebut diuji dengan uji-F, yang disimpulkan di tabel sidik ragam:\n\n\nCode\n  cat('\n  | Sumber Keragaman| db| JK| KT| F-hit|F(dbP,dbG)|\n  |------------:|-----------:|------------:|------------:|------------:|------------:|\n  |          Perlakuan|         r-1|          JKP| JKP/dbP | KTP/KTG | |\n  |          Baris|         r-1|          JKB| JKB/dbB | KTB/KTG | |\n  |          Lajur|         r-1|          JKL| JKL/dbL | KTL/KTG | |\n  |          Galat|         (r-1)(r-2)|         JKG| JKG/dbG | | |\n  |          Total|         r*r-1|          JKT| | | |')\n\n\n\n  | Sumber Keragaman| db| JK| KT| F-hit|F(dbP,dbG)|\n  |------------:|-----------:|------------:|------------:|------------:|------------:|\n  |          Perlakuan|         r-1|          JKP| JKP/dbP | KTP/KTG | |\n  |          Baris|         r-1|          JKB| JKB/dbB | KTB/KTG | |\n  |          Lajur|         r-1|          JKL| JKL/dbL | KTL/KTG | |\n  |          Galat|         (r-1)(r-2)|         JKG| JKG/dbG | | |\n  |          Total|         r*r-1|          JKT| | | |\n\n\nRumus-rumus jumlah kuadrat di tabel sidik ragam tersebut adalah:\n\\[\n\\begin{align}\nFK&=\\frac{y_{..}^2}{r^2}\\\\\nJK_{T}&=\\sum_{i=1}^r \\sum_{j=1}^r\\sum_{k=1}^r\\left[y_{ij(k)}-\\bar{y}_{..(.)}\\right]^2=\\sum_{i=1}^r \\sum_{j=1}^r \\sum_{k=1}^r y_{ij(k)}^2-FK\\\\\nJK_{P}&=\\sum_{i=1}^r \\sum_{j=1}^r\\sum_{k=1}^r\\left[\\bar{y}_{..(k)}-\\bar{y}_{..(.)}\\right]^2=\\sum_{k=1}^r \\frac{y_{..(k)}^2}{r}-FK\\\\\nJK_{B}&=\\sum_{i=1}^r \\sum_{j=1}^r\\sum_{k=1}^r\\left[\\bar{y}_{i.(.)}-\\bar{y}_{..(.)}\\right]^2=\\sum_{i=1}^r \\frac{y_{i.(.)}^2}{r}-FK\\\\\nJK_{L}&=\\sum_{i=1}^r \\sum_{j=1}^r\\sum_{k=1}^r\\left[\\bar{y}_{.j(.)}-\\bar{y}_{..(.)}\\right]^2=\\sum_{j=1}^r \\frac{y_{.j(.)}^2}{r}-FK\\\\\nJK_{G}&=JK_{T}-JK_{P}-JK_{B}-JK_{L}\n\\end{align}\n\\]\nPada intinya, jumlah kuadrat tiap faktor (perlakuan, baris, atau lajur) dihitung dengan mencari total semua observasi dengan taraf-taraf tertentu dari faktor tersebut. Lalu, total tersebut dikuadratkan dan dibagi jumlah perlakuan, baris, atau lajur, dan hasil tersebut dijumlahkan sesuai jumlah tersebut.\n\n\n2.4.4 Implementasi R dan Python\nRelatif jelas bahwa rancangan yang tepat digunakan adalah RBSL. Data ditautkan. Analisis dimulai dengan membaca data tersebut:\n\n\nCode\nlibrary(googlesheets4)\ndataRBSL<-read_sheet(\"https://docs.google.com/spreadsheets/d/1c9dvm4p747hX9nS3y6mMSCgGSoJMQCQiVXyz3g7R7IE/edit?usp=sharing\")\n\n\n✔ Reading from \"RBSL_P2 Rancob\".\n\n\n✔ Range 'Sheet1'.\n\n\nCode\nknitr::kable(dataRBSL)\n\n\n\n\n\nMiring\nIrigasi\nPupuk\nProduksi\n\n\n\n\nM1\nI1\nP1\n5.6\n\n\nM1\nI2\nP3\n4.3\n\n\nM1\nI3\nP2\n4.8\n\n\nM1\nI4\nP4\n5.3\n\n\nM2\nI1\nP2\n5.9\n\n\nM2\nI2\nP1\n6.0\n\n\nM2\nI3\nP4\n5.8\n\n\nM2\nI4\nP3\n5.2\n\n\nM3\nI1\nP3\n4.3\n\n\nM3\nI2\nP4\n4.9\n\n\nM3\nI3\nP1\n4.8\n\n\nM3\nI4\nP2\n5.2\n\n\nM4\nI1\nP4\n3.9\n\n\nM4\nI2\nP2\n4.9\n\n\nM4\nI3\nP3\n3.8\n\n\nM4\nI4\nP1\n4.7\n\n\n\n\n\nSetelah memastikan perlakuan, lajur, dan baris berbentuk faktor, tinggal dilakukan anova. Penambahan faktor baru di ANOVA relatif mudah, yaitu dengan +.\n\n\nCode\ndataRBSL$Miring<-as.factor(dataRBSL$Miring)\ndataRBSL$Irigasi<-as.factor(dataRBSL$Irigasi)\ndataRBSL$Pupuk<-as.factor(dataRBSL$Pupuk)\nRBSLAoV<-aov(Produksi~Miring+Irigasi+Pupuk,dataRBSL) #respon~perlakuan+baris+lajur,dataset\nsummary(RBSLAoV)\n\n\n            Df Sum Sq Mean Sq F value  Pr(>F)   \nMiring       3  4.062  1.3542  12.897 0.00502 **\nIrigasi      3  0.203  0.0675   0.643 0.61504   \nPupuk        3  1.882  0.6275   5.976 0.03106 * \nResiduals    6  0.630  0.1050                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nGunakan statsmodels untuk analisis di python:\n\n\nCode\nimport pandas as pd\nimport statsmodels.api as sm\nfrom statsmodels.formula.api import ols\n\nRBSLpy=pd.read_csv(\"https://docs.google.com/spreadsheets/d/e/2PACX-1vQySAMPOlmbObWHA9ZQS80gwsjJCILoRPIOfZDn1KWRu8FkR5XlL1G7hDI7uA5i_T8TwNJ1FIcwuuDD/pub?gid=0&single=true&output=csv\")\nRBSLlm= ols('Produksi ~ C(Irigasi)+C(Miring)+C(Pupuk)',data=RBSLpy).fit() #C=peubah kategorik\ntable = sm.stats.anova_lm(RBSLlm, typ=2) # Type 2 ANOVA DataFrame\nprint(table)\n\n\n            sum_sq   df          F    PR(>F)\nC(Irigasi)  0.2025  3.0   0.642857  0.615037\nC(Miring)   4.0625  3.0  12.896825  0.005020\nC(Pupuk)    1.8825  3.0   5.976190  0.031062\nResidual    0.6300  6.0        NaN       NaN\n\n\nAnalisis diawali dengan membaca CSV melalui pandas. C(faktor) digunakan agar faktor dalan percobaan dianggap peubah kategorik. Hasil dari ANOVA tersebut menunjukkan bahwa Pupuk memiliki p-value sekitar \\(3\\%\\), yang berarti kemungkinan menemukan nilai-F tersebut jika \\(H_{0}\\) benar sebesar \\(3\\%\\). Jika digunakan \\(\\alpha=5\\%\\), \\(H_{0}\\) akan ditolak dan setidaknya salah satu pengaruh perlakuan (Pupuk) tidak nol. P-value kemiringan lebih kecil lagi. Dengan prosedur sama, dapat diinterpretasikan bahwa setidaknya salah satu pengaruh kemiringan tidak nol. Namun, belum cukup bukti untuk menyatakan bahwa setidaknya salah satu pengaruh irigasi tidak nol.\n\n\n2.4.5 Topik Tambahan\n\n2.4.5.1 Pendugaan Nilai Hilang\nRumus pendugaan nilai hilang di RBSL adalah sebagai berikut:\n\\[\n\\hat{y}_{ij(k)}=\\frac{p(y_{i.}+y_{.j}+T_{(k)})-2y_{..}}{(p-1)(p-2)}\n\\]\nNilai-nilai yang diperlukan dapat diekstrak manual dan dihitung, sama seperti sebelumnya.\n\n\n2.4.5.2 Plot interaksi\nPlot interaksi dapat dibuat dengan cara sama seperti RAKL."
  },
  {
    "objectID": "03-Bab3.html",
    "href": "03-Bab3.html",
    "title": "3  Perbandingan Nilai Tengah Perlakuan",
    "section": "",
    "text": "ANOVA pada RAK, RAKL, dan RBSL hanya dapat menguji ketidaknolan efek perlakuan. Semisal diketahui setidaknya salah satu perlakuan tersebut memiliki efek, lalu bagaimana? Tentu ada pertanyaan-pertanyaan lain yang menarik, misal:\nDan pertanyaaan-pertanyaan lain. Pertanyaan itu dijawab uji lanjut."
  },
  {
    "objectID": "03-Bab3.html#lsdbnt",
    "href": "03-Bab3.html#lsdbnt",
    "title": "3  Perbandingan Nilai Tengah Perlakuan",
    "section": "3.1 LSD/BNT",
    "text": "3.1 LSD/BNT\nUji BNT menguji perlakuan secara berpasangan. Menurut Carmer dan Swanson (1973) di Montgomery (2017), BNT efektif mendeteksi perbedaan rataan perlakuan jika diaplikasikan **setelah* uji-F di ANOVA signifikan di taraf 5 persen. Hipotesis perbandingan BNT sebagai berikut:\n\\[\n\\begin{aligned}\nH_{0}&: \\mu_{i}=\\mu_{j}\\\\\nH_{1}&:\\mu_{i}\\neq \\mu_{j}\n\\end{aligned}\n\\]\nDengan nilai kritis BNT sebagai berikut:\n\\[\n\\begin{aligned}\nLSD&=t_{\\alpha/2,db_{g}}S_{\\bar{y}_{i.}-\\bar{y}_{j.}}\\\\\nS_{\\bar{y}_{i.}-\\bar{y}_{j.}}&=\\sqrt{KTG\\left(\\frac{1}{r_{i}}+\\frac{1}{r_{j}}\\right)}\n\\end{aligned}\n\\]\nJika ulangan sama, \\(S_{\\bar{y}_{i.}-\\bar{y}_{j.}}=\\sqrt{\\frac{2KTG}{r}}\\) (kenapa?). Prosedur uji tersebut adalah membandingkan \\(\\bar{y}_{i.}-\\bar{y}_{j.}\\) dengan nilai kritis. Implementasi di R (dari data RAL sebelumnya) sebagai berikut:\n\n\nCode\nlibrary(googlesheets4)\n#baca sheet\nDataRAL<-read_sheet(\"https://docs.google.com/spreadsheets/d/1Bzm_R2Zd4Zbij7BO7LGDJW83DU6T3Wh7R38NN5DHCBs/edit?usp=sharing\")\n\n\n! Using an auto-discovered, cached token.\n\n\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n\n\n  See gargle's \"Non-interactive auth\" vignette for more details:\n\n\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n\n\nℹ The googlesheets4 package is using a cached token for\n  'muh.ammarsahab@apps.ipb.ac.id'.\n\n\n✔ Reading from \"DataRAL\".\n\n\n✔ Range 'Sheet1'.\n\n\nCode\n#reshaping\nlibrary(reshape2)\n\nRALMelt<- melt(DataRAL,\n               #variabel yang membedakan tiap baris di tabulasi asli:\n               id.vars=c(\"Dosis\"),\n               \n               #kolom yang ingin digabung jadi 1\n               measured.vars=as.character(seq(1,8)),\n               value.name=\"Perkecambahan\")\ncolnames(RALMelt)[2]<-\"Ulangan\"\nRALMelt$Dosis<-as.factor(RALMelt$Dosis)\n\n#anova\naov_RAL <- aov(Perkecambahan ~ Dosis, data = RALMelt)\nsummary(aov_RAL)\n\n\n            Df Sum Sq Mean Sq F value  Pr(>F)    \nDosis        4 2556.4   639.1   51.36 3.6e-14 ***\nResiduals   35  435.5    12.4                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nGunakan library agricolae:\n\n\nCode\nlibrary(agricolae)\nLSD<-agricolae::LSD.test(aov_RAL, \"Dosis\") #hasil anova, perlakuan\n\n\nknitr::kables(\n  list(\n    knitr::kable(LSD$statistics[6]), #tabel 1\n    knitr::kable(LSD$groups, col.names = c(\"Rata-Rata per Taraf\",\n                                           \"Kelompok\")) #tabel 2\n  ),\n)\n\n\n\n\n\n\n\n\n\n\n\nLSD\n\n\n\n\n\n3.580545\n\n\n\n\n\n\n\n\n\nRata-Rata per Taraf\nKelompok\n\n\n\n\n0\n100.00\na\n\n\n16\n100.00\na\n\n\n32\n90.25\nb\n\n\n64\n85.00\nc\n\n\n48\n80.00\nd\n\n\n\n\n\n\n\n\n\n\nAtau susun argumen sebagai berikut,\n\n\nCode\nlibrary(agricolae)\nLSD2<-agricolae::LSD.test(RALMelt$Perkecambahan, RALMelt$Dosis,35,12.4) #respon, perlakuan, dbg, KTG\n\nknitr::kables(\n  list(\n    knitr::kable(LSD2$statistics[6]) , #tabel 1\n    knitr::kable(LSD2$groups, col.names =c(\"Rata-Rata per Taraf\",\n                                           \"Kelompok\")) #tabel 2\n    ),\n)\n\n\n\n\n\n\n\n\n\n\n\nLSD\n\n\n\n\n\n3.574374\n\n\n\n\n\n\n\n\n\nRata-Rata per Taraf\nKelompok\n\n\n\n\n0\n100.00\na\n\n\n16\n100.00\na\n\n\n32\n90.25\nb\n\n\n64\n85.00\nc\n\n\n48\n80.00\nd\n\n\n\n\n\n\n\n\n\n\nDapat dicek sendiri bahwa pengelompokan tersebut benar. Dapat juga dibuat visualisasi:\n\n\nCode\nplot(LSD,horiz=T)\n\n\n\n\n\nNote, BNT menguji semua perlakuan secara berpasangan, sehingga tidak bisa memilih perbandingan tertentu saja (misal, rata-rata terbesar vs terkecil). Selain itu, BNT memiliki kelemahan, yaitu hanya dapat mengontrol tingkat kesalahan uji sepasang rata-rata saja. Jika ada beberapa pasang rata-rata, tingkat kesalahan berpotensial lebih besar. Banyak perbandingan \\(g=k(k-1)/2\\) (dari permutasi), sehingga family error rate sebesar \\(1-(1-\\alpha)^g\\). Perhitungan tersebut hanya merupakan kebalikan dari perhitungan \\(P(\\text{Tolak }H_{0}|H_{0} \\text{ benar})\\). \\((1-\\alpha)\\). Jika diasumsikan perbandingan saling bebas, maka probabilitas tersebut menjadi \\((1-\\alpha)^g\\)."
  },
  {
    "objectID": "03-Bab3.html#bnj",
    "href": "03-Bab3.html#bnj",
    "title": "3  Perbandingan Nilai Tengah Perlakuan",
    "section": "3.2 BNJ",
    "text": "3.2 BNJ\nLalu, bagaimana cari membuat uji yang mengontrol family error rate? BNJ mengontrol kesalahan di t buah perlakuan sebesar \\(\\alpha\\), sehingga di tiap pasangan akan menarima kesalahan sebesar \\(\\alpha/2g\\) karena uji dua arah menggunakan \\(\\alpha/2\\) dan ada g ulangan. Jika jumlah perlakuan banyak, metode ini akan sangat ekstrim. Oleh karena itu, walaupun metode ini tidak terlalu sensitif, metode ini memisahkan perlakuan yang benar-benar beda. BNJ memiliki nilai kritis:\n\\[\n\\begin{aligned}\nBNJ&=q_{\\alpha;t;db_{g}}S_{\\bar{y}}\\\\\nS_{\\bar{y}}&=\\sqrt{KTG/r}\n\\end{aligned}\n\\]\nDengan t jumlah perlakuan, q memiliki asal statistik studentized range. Jika ulangan tak sama, r didekati:\n\\[\nr_{h}=\\frac{t}{\\sum_{i=1}^t 1/r_{i}}\n\\]\nDengan langkah-langkah uji:\n\nUrutkan rataan perlakuan dari yang terkecil sampai yang terbesar atau sebaliknya\nNilai awal i=1 (dari kiri) dan j =1 (dari kanan)\nHitung beda antara rataan perlakuan terkecil ke-i dengan terbesar ke-j kemudian bandingkan dengan nilai BNJ, jika beda rataan perlakuan lebih kecil lanjutkan ke langkah 5 (taktolak \\(H_{0}\\)) dan jika tidak lanjutkan ke langkah 4\nBerikan j = j+1, jika j<p kembali ke langkah 3\nBuatlah garis mulai rataan perlakuan ke-i sampai ke perlakuan ke-j\nBerikan I = i+1, jika i<p kembali ke langkah 3\nStop\n\nImplementasi uji tersebut di R adalah:\n\n\nCode\ntukey <- TukeyHSD(aov_RAL, 'Dosis', conf.level = 0.95)\n\n\nlibrary(kableExtra)\nknitr::kable(tukey$Dosis, col.names = c(\" \",\n                                        \" Bawah\",\n                                        \" Atas\",\n                                        \" \")) %>%\nadd_header_above(c(\" Taraf\"=1, \"Beda\"=1, \"Batas Selang Kepercayaan\"=2, \"P-Value\"=1))\n\n\n\n\n \n\n Taraf\nBeda\nBatas Selang Kepercayaan\nP-Value\n\n  \n      \n      \n     Bawah \n     Atas \n      \n  \n \n\n  \n    16-0 \n    0.00 \n    -5.0708064 \n    5.0708064 \n    1.0000000 \n  \n  \n    32-0 \n    -9.75 \n    -14.8208064 \n    -4.6791936 \n    0.0000306 \n  \n  \n    48-0 \n    -20.00 \n    -25.0708064 \n    -14.9291936 \n    0.0000000 \n  \n  \n    64-0 \n    -15.00 \n    -20.0708064 \n    -9.9291936 \n    0.0000000 \n  \n  \n    32-16 \n    -9.75 \n    -14.8208064 \n    -4.6791936 \n    0.0000306 \n  \n  \n    48-16 \n    -20.00 \n    -25.0708064 \n    -14.9291936 \n    0.0000000 \n  \n  \n    64-16 \n    -15.00 \n    -20.0708064 \n    -9.9291936 \n    0.0000000 \n  \n  \n    48-32 \n    -10.25 \n    -15.3208064 \n    -5.1791936 \n    0.0000130 \n  \n  \n    64-32 \n    -5.25 \n    -10.3208064 \n    -0.1791936 \n    0.0393966 \n  \n  \n    64-48 \n    5.00 \n    -0.0708064 \n    10.0708064 \n    0.0548433 \n  \n\n\n\n\n\nCara membaca tabel tersebut adalah melihat apakah selang kepercayaan (lwr dan upper) memiliki tanda positif dan negatif. Jika ada dua tanda, berarti nol termasuk di selang kepercayaan, sehingga kita belum dapat menyatakan rataan perlakuan tersebut beda. Proses tersebut dapat divisualisikan:\n\n\nCode\nplot(tukey, las = 1, col = 'dark blue')\n\n\n\n\n\nAnalisis di python dapat dimulai dengan melakukan reshape kepada data. Detail dari proses ini sudah dijelaskan sebelumnya:\n\n\nCode\nimport pandas as pd\n\nRALData = pd.read_csv(\"https://docs.google.com/spreadsheets/d/e/2PACX-1vT8sPRuEulqieCMFJK4sKReRjtuXOQD_xwTlI3RB619yYwSWwb776-Dmu5UY5P44hy5MsMPJPsjcZUp/pub?gid=0&single=true&output=csv\")\nRALMeltpy=pd.melt(RALData, id_vars=['Dosis'], value_vars=[str(x) for x in range(1,9)])\nRALMeltpy.rename(columns = {'variable':'Ulangan', 'value':'Produksi'}, inplace = True)\nRALMeltpy.head()\n\n\n   Dosis Ulangan  Produksi\n0      0       1       100\n1     16       1       100\n2     32       1        90\n3     48       1        80\n4     64       1        90\n\n\nLalu, statsmodels memiliki fungsi MultiComparison(respon, perlakuan):\n\n\nCode\nimport statsmodels.formula.api as smf\n\n\nC:\\Users\\Acer\\AppData\\Local\\R\\win-library\\4.2\\reticulate\\python\\rpytools\\loader.py:39: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  module = _import(\nC:\\Users\\Acer\\AppData\\Local\\Programs\\Python\\PYTHON~2\\lib\\site-packages\\statsmodels\\compat\\pandas.py:65: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  from pandas import Int64Index as NumericIndex\n\n\nCode\nimport statsmodels.stats.multicomp as multi \n\nmcDosis = multi.MultiComparison(RALMeltpy['Produksi'],RALMeltpy['Dosis'])\nResults = mcDosis.tukeyhsd()\nprint(Results)\n\n\n Multiple Comparison of Means - Tukey HSD, FWER=0.05  \n======================================================\ngroup1 group2 meandiff p-adj   lower    upper   reject\n------------------------------------------------------\n     0     16      0.0    0.9  -5.0708   5.0708  False\n     0     32    -9.75  0.001 -14.8208  -4.6792   True\n     0     48    -20.0  0.001 -25.0708 -14.9292   True\n     0     64    -15.0  0.001 -20.0708  -9.9292   True\n    16     32    -9.75  0.001 -14.8208  -4.6792   True\n    16     48    -20.0  0.001 -25.0708 -14.9292   True\n    16     64    -15.0  0.001 -20.0708  -9.9292   True\n    32     48   -10.25  0.001 -15.3208  -5.1792   True\n    32     64    -5.25 0.0394 -10.3208  -0.1792   True\n    48     64      5.0 0.0549  -0.0708  10.0708  False\n------------------------------------------------------\n\n\nHasil sama seperti R. Hasil juga dapat di-plot dengan:\n\n\nCode\nimport matplotlib.pyplot as plt\n\ntukPlot=Results.plot_simultaneous()\nplt.show()\n\n\n\n\n\nTingkat kepercayaan juga dapat diubah:\n\n\nCode\nResults = mcDosis.tukeyhsd(alpha=0.01)\nprint(Results)\n\n\n Multiple Comparison of Means - Tukey HSD, FWER=0.01  \n======================================================\ngroup1 group2 meandiff p-adj   lower    upper   reject\n------------------------------------------------------\n     0     16      0.0    0.9  -6.2115   6.2115  False\n     0     32    -9.75  0.001 -15.9615  -3.5385   True\n     0     48    -20.0  0.001 -26.2115 -13.7885   True\n     0     64    -15.0  0.001 -21.2115  -8.7885   True\n    16     32    -9.75  0.001 -15.9615  -3.5385   True\n    16     48    -20.0  0.001 -26.2115 -13.7885   True\n    16     64    -15.0  0.001 -21.2115  -8.7885   True\n    32     48   -10.25  0.001 -16.4615  -4.0385   True\n    32     64    -5.25 0.0394 -11.4615   0.9615  False\n    48     64      5.0 0.0549  -1.2115  11.2115  False\n------------------------------------------------------"
  },
  {
    "objectID": "03-Bab3.html#uji-duncan",
    "href": "03-Bab3.html#uji-duncan",
    "title": "3  Perbandingan Nilai Tengah Perlakuan",
    "section": "3.3 Uji Duncan",
    "text": "3.3 Uji Duncan\nUji Duncan intinya mirip dengan uji Tukey, tetapi nilai pembanding di uji Duncan meningkat tergantung jarak dari perlakuan yang dibandingkan. Uji tersebut memiliki nilai kritis:\n\\[\n\\begin{aligned}\nR_{p}&=r_{\\alpha;t;db_{g}}S_{\\bar{y}}\\\\\nS_{\\bar{y}}&=\\sqrt{KTG/r}\n\\end{aligned}\n\\]\nDan jika jumlah ulangan tak sama dapat didekati rataan harmonik juga. t adalah beda urutan perlakuan kedua kelompok. Misal membandingkan perlakuan terbesar (1) dan terkecil (4) dari 4 perlakuan akan menghasilkan t=3. Langkah uji mirip dengan Tukey, yaitu:\n\nUrutkan rataan perlakuan dari yang terkecil sampai yang terbesar atau sebaliknya\nNilai awal i=1 (dari kiri) dan j =1 (dari kanan)\nHitung beda antara rataan perlakuan terkecil ke-i dengan terbesar ke-j kemudian bandingkan dengan nilai BNJ, jika beda rataan perlakuan lebih kecil lanjutkan ke langkah 5 (taktolak \\(H_{0}\\)) dan jika tidak lanjutkan ke langkah 4\nBerikan j = j+1, jika j<p kembali ke langkah 3\nBuatlah garis mulai rataan perlakuan ke-i sampai ke perlakuan ke-j\nBerikan I = i+1, jika i<p kembali ke langkah 3\nStop\n\nLangsung uji:\n\n\nCode\nduncan <- duncan.test(aov_RAL, 'Dosis', alpha = 0.05) #Bisa Model aov atau lm\nknitr::kable(duncan$duncan)\n\n\n\n\n \n  \n      \n    Table \n    CriticalRange \n  \n \n\n  \n    2 \n    2.871006 \n    3.580545 \n  \n  \n    3 \n    3.018061 \n    3.763944 \n  \n  \n    4 \n    3.113890 \n    3.883455 \n  \n  \n    5 \n    3.182680 \n    3.969247 \n  \n\n\n\n\n\nCode\nknitr::kable(duncan$groups)\n\n\n\n\n \n  \n      \n    Perkecambahan \n    groups \n  \n \n\n  \n    0 \n    100.00 \n    a \n  \n  \n    16 \n    100.00 \n    a \n  \n  \n    32 \n    90.25 \n    b \n  \n  \n    64 \n    85.00 \n    c \n  \n  \n    48 \n    80.00 \n    d \n  \n\n\n\n\n\nDan dapat divisualisasikan:\n\n\nCode\nplot(duncan, horiz = TRUE, las = 1)\n\n\n\n\n\nNote bahwa Uji Tukey menyatakan dosis 64 tak beda dengan dosis 48, padahal uji Duncan dan LSD menyatakan dosis tersebut beda. Hal tersebut menunjukkan kurang sensitifnya uji Tukey."
  },
  {
    "objectID": "03-Bab3.html#kontras",
    "href": "03-Bab3.html#kontras",
    "title": "3  Perbandingan Nilai Tengah Perlakuan",
    "section": "3.4 Kontras",
    "text": "3.4 Kontras\nKontras merupakan kombinasi linear dari rataan perlakuan. Sebuah kombinasi linear tersusun atas seperangkat objek. Setiap objek dikalikan dengan suatu konstanta, dan hasil perkalian semua objek dan konstanta ditambahkan. Pada intinya, setiap rataan perlakuan akan dikalikan dengan suatu konstanta dan hasil perkalian tersebut akan ditambahkan. Bentuk umum kontras adalah:\n\\[\n\\begin{aligned}\nH_{0}&: c_{1}\\mu_{1}+c_{2}\\mu_{2}+\\cdots+c_{t}\\mu_{t}=\\sum_{i=1}^t c_{i}\\mu_{i}=0\\\\\nH_{1}&: c_{1}\\mu_{1}+c_{2}\\mu_{2}+\\cdots+c_{t}\\mu_{t}=\\sum_{i=1}^t c_{i}\\mu_{i}\\neq 0\n\\end{aligned}\n\\]\nYang diduga dengan\n\\[\nC=\\sum_{i=1}^t c_{i}y_{i.}\n\\]\nDengan \\(y_{i.}\\) adalah total di perlakuan ke-i. Kontras memiliki syarat:\n\\[\n\\sum_{i=1}^t c_{i}=0\n\\]\nSelain itu, kontras disebut ortogonal jika hasil suatu uji tidak memengaruhi hasil uji lain. Sebagai contoh, kontras:\n\\[\n\\begin{aligned}\nH^{(1)}_0\\colon \\mu_1 = \\mu_2\\\\\nH^{(2)}_0\\colon \\mu_1 = \\mu_3\\\\\nH^{(3)}_0\\colon \\mu_2 = \\mu_3\\\\\n\\end{aligned}\n\\]\nTidak ortogonal. Bayangkan bahwa kita menolak \\(H_{0}^3\\), tetapi tak tolak hipotesis lainnya. Ini merupakan kontradiksi karena \\(\\mu_{1}=\\mu_{2}\\) dan \\(\\mu_{1}=\\mu_{3}\\) secara logis memberi implikasi \\(\\mu_{2}=\\mu_{3}\\). Namun, uji mengatakan sebaliknya.\nUntuk melihat kenapa hal tersebut terjadi, kontras dapat dilihat lebih lanjut:\n\\[\n\\begin{aligned}\nH^{(1)}_0\\colon 1\\mu_1-1\\mu_{2}+0\\mu_{3} = 0\\\\\nH^{(2)}_0\\colon 1\\mu_1+0\\mu_2-1\\mu_3=0\\\\\nH^{(3)}_0\\colon 0\\mu_1+1\\mu_2-1\\mu_3=0\\\\\n\\end{aligned}\n\\]\nDapat dengan mudah diverifikasi bahwa semua \\(\\sum_{i=1}^t c_{i}\\) adalah nol. Namun, jika kita kalikan kontras pertama (\\(c_{i}\\)) dan kontras kedua (\\(d_{i}\\)) serta melihat hasilnya, maka kita akan temukan \\(\\sum_{i=1}^t c_{i}d_{i}=1+0+0=1\\neq 0\\). Bandingkan dengan contoh ini:\n\nSebuah percobaan menguji efek pemberian nitrogen pada pertumbuhan rumput. Perlakuan dalam percobaan tersebut ada empat, yaitu tidak diberi nitrogen sebagai kontrol (1), diberi nitrogen di musim gugur (2), diberi nitrogen di musim semi (3), dan diberikan pada kedua musim (4). Ingin diketahui:\n\nApakah terdapat perbedaan pertumbuhan rumput dari yang tidak diberi nitrogen dengan diberi nitrogen?\nApakah ada perbedaan pertumbuhan rumput jika diberikan nitrogen pada saat musim gugur dengan musim semi?\nApakah ada perbedaan pertumbuhan rumput jika diberikan pada saat musim gugur atau musim semi dengan diberikan pada kedua musim tersebut?\n\n\nKontras tersebut dapat disusun:\n\\[\n\\begin{aligned}\nH^{(1)}_0\\colon 3\\mu_1-1\\mu_{2}-1\\mu_{3}-1\\mu_{4} = 0\\\\\nH^{(2)}_0\\colon 0\\mu_1+1\\mu_{2}-1\\mu_{3}-0\\mu_{4}=0\\\\\nH^{(3)}_0\\colon 0\\mu_1+1\\mu_2+1\\mu_3-2\\mu_{4}=0\\\\\n\\end{aligned}\n\\]\nAlasan penyusunan kontras sebagai berikut dapat ditelusuri dari beberapa prinsip:\n\nDi sebuah kontras, perlakuan yang tidak ingin dibandingkan mendapatkan \\(c_{i}=2\\). Misal, di kontras kedua hanya dibandingkan musim gugur (\\(\\mu_{2}\\)) dan musim semi (\\(\\mu_{3}\\)), sehingga koefisien di tanpa nitrogen dan kedua musim (\\(\\mu_{1},\\mu_{4}\\)) nol. Begitu juga di kontras ketiga, perlakuan tanpa nitrogen tidak ingin dibandingkan sehingga koefisiennya nol.\nPastikan bobot tiap perlakuan sama. Suatu kontras pada dasarnya membagi perlakuan menjadi dua kelompok yang hendak dibandingkan. Namun, agar perbandingan tersebut adil, bobot perlakuan harus sama. Misal, di hipotesis pertama, hanya ada 1 perlakuan tanpa nitrogen sedangkan ada 3 perlakuan dengan nitrogen. Jika kita membandingkan rata-rata 1 perlakuan tanpa nitrogen dengan hasil tambah tiga perlakuan dengan nitrogen, pasti tidak adil. Anggap saja \\(\\mu_{1}=\\mu_{2}=\\mu_{3}=\\mu_{4}\\), seharusnya kontras menunjukkan sisi kiri sama dengan sisi kanan. Namun, jika kita melakukan pertambahan secara naif, akan muncul perbandingan \\(\\mu_{1}\\neq3\\mu_{1}\\). Oleh karena itu \\(\\mu_{1}\\) harus kita boboti 3 agar perbandingannya adil. Dalam kasus \\(H_{0}\\) benar tadi, pembobotan \\(\\mu_{1}\\) dengan 3 menghasilkan \\(3\\mu_{1}=3\\mu_{1}\\).\nPastikan tanda antara kelompok berbeda. Satu kelompok akan memiliki tanda positif dan satu kelompok memiliki tanda negatif. Ini dikarenakan jumlah koefisien nol sehingga perlu tanda positif dan negatif untuk menghasilkan angka tersebut.\n\nSekarang, dapat dipikirkan secara logis implikasi dari tiap uji:\n\\[\n\\begin{aligned}\nH^{(1)}_0&\\colon \\mu_1=\\frac{\\mu_{2}+\\mu_{3}+\\mu_{4}}{3}\\\\\nH^{(2)}_0&\\colon \\mu_{2}=\\mu_{3}\\\\\nH^{(3)}_0&\\colon \\frac{\\mu_2+\\mu_3}{2}=\\mu_{4}\\\\\n\\end{aligned}\n\\]\nTidak ada hipotesis yang saling berkontradiksi. Jika \\(\\mu_{2}\\) tidak sama dengan \\(\\mu_{3}\\), misal, hipotesis pertama dan ketiga masih dapat benar ataupun salah. Jika dijabarkan dalam perkataan, pengujian mengenai efek dari pemberian nitrogen dibandingkan dengan tidak sama sekali tidak memberi informasi mengenai efek pemberian nitrogen di dua musim dibandingkan dengan satu musim. Begitu juga, kedua uji tersebut tidak memberi informasi mengenai efek perbandingan nitrogen di musim semi atau gugur.\nSecara formal, dapat kita lihat bahwa \\(\\sum_{i=1}^t c_{i}d_{i}=0\\) untuk tiap kombinasi kontras. Dari aljabar linear, jika c dan d merupakan vektor, ini sama dengan hasil kali transpose c dengan d. Maka, buktikan di R:\n\n\nCode\nkontras1<-c(3,-1,-1,-1)\nkontras2<-c(0,1,-1,0)\nkontras3<-c(0,1,1,-2)\n\n#kali vektor\nt(kontras1)%*%kontras2\n\n\n     [,1]\n[1,]    0\n\n\nCode\nt(kontras1)%*%kontras3\n\n\n     [,1]\n[1,]    0\n\n\nCode\nt(kontras2)%*%kontras3\n\n\n     [,1]\n[1,]    0\n\n\nOleh karena itu, kontras akan orthogonal jika \\(\\sum_{i=1}^t c_{i}d_{i}=0\\). Keortogonalan berarti hasil satu uji bebas dari uji lain, sehingga jumlah kuadrat perlakuan dapat dipartisi.\n\n3.4.1 Menyusun kontras ortogonal\nMisalkan ada contoh:\n\nIngin dibandingkan 5 populasi dari data. Sebelumnya, kita memiliki alasan untuk percaya bahwa populasi 2 dan 3 paling dekat. Populasi 4 dan 5 juga dekat, tetapi tidak sedekat populasi 2 dan 3. Populasi 1 lebih dekat ke populasi 2 dan 3 daripada populasi 4 dan 5.\n\nKedekatan tersebut digambarkan dalam diagram:\n\n\n\n\n\nDiagram pengelompokan populasi. Sumber: Department of Statistics, Pennsylvania State University (online.stat.psu.edu).\n\n\n\n\nDari grafik dan soal tersebut, muncul empat pertanyaan: 1. Apakah populasi 2 dan 3 (yang dianggap sekelompok) beda? (D) 2. Apakah populasi 4 dan 5 beda? (C) 3. Apakah populasi 1 beda dengan populasi 2, 3? (B) 4. Apakah populasi 1, 2, 3, beda dengan populasi 4 dan 5? (A)\nOleh karena itu, dapat dibentuk kontras:\n\n\n\n\n\n\n\n\n\n\n\nKontras\n1\n2\n3\n4\n5\n\n\n\n\nA\n2\n2\n2\n-3\n-3\n\n\nB\n2\n-1\n-1\n0\n0\n\n\nC\n0\n0\n0\n1\n-1\n\n\nD\n0\n1\n-1\n0\n0\n\n\n\nKeortogonalan kontras tersebut dapat dicek melalui matriks ragam peragam:\n\n\nCode\nA<-c(2,2,2,-3,-3)\nB<-c(2,-1,-1,0,0)\nC<-c(0,0,0,1,-1)\nD<-c(0,1,-1,0,0)\n\ncontrasts<-cbind(A,B,C,D)\ncov(contrasts)\n\n\n    A   B   C   D\nA 7.5 0.0 0.0 0.0\nB 0.0 1.5 0.0 0.0\nC 0.0 0.0 0.5 0.0\nD 0.0 0.0 0.0 0.5\n\n\nJika matriks diagonal, ini berarti koragam nol dan kontras saling orthogonal. Secara logis, hasil tiap uji tidak memberi informasi mengenai hasil uji lainnya.\nContoh lain untuk mengilustrasikan kontras orthogonal adalah sebagai berikut\n\nEfektivitas suatu obat hendak dicek. Perlakuan 1 merupakan obat A berdosis rendah, perlakuan 2 merupakan obat A berdosis tinggi, perlakuan 3 merupakan obat B berdosis rendah, dan perlakuan 4 merupakan obat B berdosis tinggi.\n\nTentu, terlihat beberapa arah perbandingan:\n\nObat - apakah obat A dan B beda?\nDosis - apakah dosis tinggi dan rendah beda?\nInteraksi - apakah efek obat bergantung pada dosis?\n\nSehingga dibuat kontras:\n\n\n\nKontras\n1\n2\n3\n4\n\n\n\n\nObat\n1\n1\n-1\n-1\n\n\nDosis\n1\n-1\n1\n-1\n\n\nInteraksi\n1\n-1\n-1\n1\n\n\n\nCek ortogonalitas\n\n\nCode\nObat<-c(1,1,-1,-1)\nDosis<-c(1,-1,1,-1)\nInteraksi<-c(1,-1,-1,1)\n\ncontrasts2<-cbind(Obat,Dosis,Interaksi)\ncov(contrasts2)\n\n\n              Obat    Dosis Interaksi\nObat      1.333333 0.000000  0.000000\nDosis     0.000000 1.333333  0.000000\nInteraksi 0.000000 0.000000  1.333333\n\n\nAlasan penyusunan kontras obat dan dosis seperti di tabel cukup masuk akal. Bandingkan obat A dan B atau kelompok dosis tinggi dan dosis rendah. Penyusunan kontras interaksi sebenarnya sama saja dengan mengalikan efek-efek sebelumnya. Telah disusun obat A bertanda positif (+) dan obat B bertanda negatif (-). Dosis rendah bertanda positif (+) dan dosis tinggi bertanda negatif. Maka, kalikan saja tanda tersebut.\nSebagai contoh lain, misal diberi tabel rata-rata perlakuan sebagai berikut:\n\n\n\nPerlakuan\nA\nB\nC\nD\n\n\n\n\nRata-rata\n12.0\n12.3\n10.8\n6.8\n\n\n\nDapat dilihat bahwa D tampak sangat berbeda dari perlakuan lain. A dan B tampak sangat mirip. C agak dekat ke A dan B. Oleh karena itu, susun kontras:\n\n\n\nKontras\nA\nB\nC\nD\n\n\n\n\nD vs ABC\n1\n1\n1\n-3\n\n\nc vs AB\n1\n1\n-2\n0\n\n\nA vs B\n1\n-1\n0\n0\n\n\n\nOrthogonalitas kontras tersebut dapat diuji:\n\n\nCode\nDvABC<-c(1,1,1,-3)\nCvAB<-c(1,1,-2,0)\nAvB<-c(1,-1,0,0)\n\ncontrasts3<-cbind(DvABC,CvAB,AvB)\ncov(contrasts3)\n\n\n      DvABC CvAB       AvB\nDvABC     4    0 0.0000000\nCvAB      0    2 0.0000000\nAvB       0    0 0.6666667\n\n\n\n\n3.4.2 Menghitung Kontras\nSetelah mengetahui cara membuat kontras, bagaimana perhitungannya? Untuk t-1 kontras orthogonal, dapat dilakukan uji F, dengan statistik uji sebagai berikut:\n\\[\n\\begin{aligned}\nJKC&=KTC=\\frac{\\left(\\sum_{i=1}^t c_{i}Y_{i.}\\right)^2}{r\\sum_{i=1}^t c_{i}^2}\\\\\nF&=KTC/KTG=F_{\\alpha,1,db_{g}}\n\\end{aligned}\n\\]\nDapat dipraktekkan di R:\n\n\nCode\nlibrary(googlesheets4)\ndataKontras<-read_sheet(\"https://docs.google.com/spreadsheets/d/19lOrOm5Vb7ATet8tR6Xq5NEOnB1J2Jj7HXPDy6Sv9og/edit?usp=sharing\")\n\n\n✔ Reading from \"Kontras\".\n\n\n✔ Range 'Sheet1'.\n\n\nCode\nknitr::kable(dataKontras)\n\n\n\n\n \n  \n    Perlakuan \n    Kelompok 1 \n    Kelompok 2 \n    Kelompok 3 \n  \n \n\n  \n    Kontrol \n    9.9 \n    12.3 \n    11.4 \n  \n  \n    Fall \n    11.4 \n    12.9 \n    12.7 \n  \n  \n    Spring \n    12.1 \n    13.4 \n    12.9 \n  \n  \n    Split \n    10.1 \n    12.2 \n    11.9 \n  \n\n\n\n\n\nTentu, data harus di-melt:\n\n\nCode\nlibrary(reshape2)\nKontrasMelted<-melt(dataKontras,\n                    id.vars=c(\"Perlakuan\"),\n                    measured.vars=c(\"Kelompok 1\", \"Kelompok 2\",\"Kelompok 3\"),\n                    value.name=\"Pertumbuhan\")\ncolnames(KontrasMelted)[2]<-\"Kelompok\"\n\n\nLalu, pastikan perlakuan dan kelompok adalah faktor dan buat kontras:\n\n\nCode\n#faktor\nKontrasMelted$Perlakuan<-as.factor(KontrasMelted$Perlakuan)\nKontrasMelted$Kelompok<-as.factor(KontrasMelted$Kelompok)\n\nlevels(KontrasMelted$Perlakuan)\n\n\n[1] \"Fall\"    \"Kontrol\" \"Split\"   \"Spring\" \n\n\nKita sudah mengetahui urutan faktor di R. Oleh karena itu, buat kontras:\n\n\nCode\n#buat kontras\ncontrasts(KontrasMelted$Perlakuan) <- cbind(c(1, -3, 1, 1), c(1, 0, 0, -1),\n                             c(1, 0, -2, 1))\ncontrasts(KontrasMelted$Perlakuan)\n\n\n        [,1] [,2] [,3]\nFall       1    1    1\nKontrol   -3    0    0\nSplit      1    0   -2\nSpring     1   -1    1\n\n\nLakukan ANOVA dan partisi:\n\n\nCode\naovKontras<-aov(Pertumbuhan~Perlakuan+Kelompok,KontrasMelted)\nsummary.aov(aovKontras, split = list (Perlakuan = list('K vs FSpSpl' = 1, 'F vs Sp' = 2, 'FSp vs Spl' = 3)))\n\n\n                         Df Sum Sq Mean Sq F value   Pr(>F)    \nPerlakuan                 3  5.200   1.733  19.439 0.001713 ** \n  Perlakuan: K vs FSpSpl  1  2.151   2.151  24.125 0.002679 ** \n  Perlakuan: F vs Sp      1  0.327   0.327   3.664 0.104123    \n  Perlakuan: FSp vs Spl   1  2.722   2.722  30.530 0.001480 ** \nKelompok                  2  7.172   3.586  40.215 0.000335 ***\nResiduals                 6  0.535   0.089                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nInterpretasi dari partisi tersebut sesuai dengan hipotesis yang diuji. Jika menggunakan \\(\\alpha=5\\%\\), dinyatakan bahwa rata-rata kontrol dengan perlakuan lainnya berbeda signifikan, begitu juga rata-rata 2 musim dengan 1 musim. Namun, belum ditemukan bukti cukup untuk menyatakan rata-rata musim semi dan gugur berbeda signifikan."
  },
  {
    "objectID": "03-Bab3.html#polinomial-orthogonal",
    "href": "03-Bab3.html#polinomial-orthogonal",
    "title": "3  Perbandingan Nilai Tengah Perlakuan",
    "section": "3.5 Polinomial Orthogonal",
    "text": "3.5 Polinomial Orthogonal\nPolinomial orthogonal dilakukan untuk menguji tren pengaruh perlakuan terhadap respon jika perlakuan bersifat kuantitatif dan berjarak sama. Model polinomial orthogonal dapat berbentuk linear, kuadratik, kubik, kuartik, dan lain-lain:\n\\[\n\\begin{aligned}\n\\text{Linear: }& Y_{i}=\\beta_0+\\beta_1X_i+\\varepsilon_i\\\\\n\\text{Kuadratik: }& Y_{i}=\\beta_0+\\beta_1X_i+\\beta_2X_i^2+\\varepsilon_i\\\\\n\\text{Kubik: }& Y_{i}=\\beta_0+\\beta_1X_i+\\beta_2X_i^2+\\beta_3X_i^3+\\varepsilon_i\\\\\n\\end{aligned}\n\\]\nDengan bentuk umum polinomial ordo ke-N adalah:\n\\[\nY=\\alpha_0P_0(X)+\\alpha_1P_1(X)+\\alpha_2P_2(X)+\\ldots+\\alpha_nP_n(X)+\\varepsilon_i\n\\]\nDengan:\n\\[\n\\begin{aligned}\nP_0&=1\\\\\nP_1&=\\lambda_1\\left[\\frac{X-\\bar{X}}{d}\\right]\\\\\nP_2&=\\lambda_2\\left[\\left(\\frac{X-\\bar{X}}{d}\\right)^2-\\left(\\frac{a^2-1}{12}\\right)\\right]\\\\\nP_{n+1}(X)&=\\lambda_{n+1}\\left[P_1(X)P_n(X)-\\frac{n^2(a^2-n^2)}{4(4n^2-1)}P_{n-1}(X)\\right]\n\\end{aligned}\n\\]\nDengan:\n\n\\(a\\): banyaknya taraf faktor\n\\(d\\): jarak antar faktor\n\\(n\\): polinomial ordo ke-n\n\nTabel kontras bagi polinomial orthogonal untuk a jumlah faktor dapat dihasilkan dengan contr.poly(a):\n\n\nCode\nknitr::kable(contr.poly(5), col.names=c(\"Linear\",\n                                        \"Kuadratik\",\n                                        \"Kubik\",\n                                        \"Kuartik\"))\n\n\n\n\n \n  \n    Linear \n    Kuadratik \n    Kubik \n    Kuartik \n  \n \n\n  \n    -0.6324555 \n    0.5345225 \n    -0.3162278 \n    0.1195229 \n  \n  \n    -0.3162278 \n    -0.2672612 \n    0.6324555 \n    -0.4780914 \n  \n  \n    0.0000000 \n    -0.5345225 \n    0.0000000 \n    0.7171372 \n  \n  \n    0.3162278 \n    -0.2672612 \n    -0.6324555 \n    -0.4780914 \n  \n  \n    0.6324555 \n    0.5345225 \n    0.3162278 \n    0.1195229 \n  \n\n\n\n\n\nUntuk memperlihatkan cara kerja polinomial orthogonal, dapat dibuat suatu data yang memiliki taraf-taraf faktor kuantitatif:\n\n\nCode\nkerapatan <- factor(rep(c(10, 20, 30, 40, 50), each = 3))\nhasil <- c(12.2, 11.4, 12.4,\n           16.0, 15.5, 16.5, \n           18.6, 20.2, 18.2,\n           17.6, 19.3, 17.1,\n           18.0, 16.4, 16.6)\ndata2 <- data.frame(kerapatan, hasil)\nstr(data2)\n\n\n'data.frame':   15 obs. of  2 variables:\n $ kerapatan: Factor w/ 5 levels \"10\",\"20\",\"30\",..: 1 1 1 2 2 2 3 3 3 4 ...\n $ hasil    : num  12.2 11.4 12.4 16 15.5 16.5 18.6 20.2 18.2 17.6 ...\n\n\nSebelum menganalisis menggunakan polinomial, plot data sebagai cara eksploratif:\n\n\nCode\nlibrary(ggplot2)\n\nggplot(data2,aes(x=kerapatan,y=hasil))+\n  geom_point()+\n  stat_summary(fun.y=mean, colour=\"darkblue\", geom=\"line\", aes(group = 1))+\n  theme_bw()\n\n\nWarning: `fun.y` is deprecated. Use `fun` instead.\n\n\n\n\n\nTampaknya pengaruh kerapatan berbentuk kuadratik karena plot menarik, mencapai puncak, lalu menurun. Lalu, definisikan kontras dan lakukan ANOVA.\n\n\nCode\ncontrasts(data2$kerapatan) <- contr.poly(5)\n\nanova2 <- aov(hasil ~ kerapatan, data = data2)\nsummary.aov(anova2, split = list (kerapatan = list('Linear' = 1, 'Kuadratik' = 2,\n                                                    'Kubik' = 3, 'Kuartik' = 4)))\n\n\n                       Df Sum Sq Mean Sq F value   Pr(>F)    \nkerapatan               4  87.60   21.90  29.278 1.69e-05 ***\n  kerapatan: Linear     1  43.20   43.20  57.754 1.84e-05 ***\n  kerapatan: Kuadratik  1  42.00   42.00  56.150 2.08e-05 ***\n  kerapatan: Kubik      1   0.30    0.30   0.401    0.541    \n  kerapatan: Kuartik    1   2.10    2.10   2.807    0.125    \nResiduals              10   7.48    0.75                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNampaknya pengaruh kerpatan pada hasil berupa kuadratik, yang dapat dimodelkan sebagai:\n\n\nCode\nsummary(lm(hasil~kerapatan,data2))\n\n\n\nCall:\nlm(formula = hasil ~ kerapatan, data = data2)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -0.90  -0.55  -0.40   0.45   1.30 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  16.4000     0.2233  73.441 5.35e-15 ***\nkerapatan.L   3.7947     0.4993   7.600 1.84e-05 ***\nkerapatan.Q  -3.7417     0.4993  -7.493 2.08e-05 ***\nkerapatan.C   0.3162     0.4993   0.633    0.541    \nkerapatan^4   0.8367     0.4993   1.676    0.125    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8649 on 10 degrees of freedom\nMultiple R-squared:  0.9213,    Adjusted R-squared:  0.8899 \nF-statistic: 29.28 on 4 and 10 DF,  p-value: 1.69e-05\n\n\n\\[\nY=16.400+3.7947X_i-3.7417X_i^2   \n\\]\nKontras juga dapat diinput secara manual."
  },
  {
    "objectID": "04-Bab4.html",
    "href": "04-Bab4.html",
    "title": "4  Uji Asumsi",
    "section": "",
    "text": "Prosedur ANOVA mengasumsikan beberapa hal mengenai struktur model dan struktur galat. Jika asumsi tersebut tidak terpenuhi, hasil dari ANOVA mungkin saja tidak valid. Oleh karena itu, pengujian asumsi sangat penting untuk diketahui."
  },
  {
    "objectID": "04-Bab4.html#galat-percobaaan-menyebar-normal",
    "href": "04-Bab4.html#galat-percobaaan-menyebar-normal",
    "title": "4  Uji Asumsi",
    "section": "4.1 Galat percobaaan menyebar normal",
    "text": "4.1 Galat percobaaan menyebar normal\n\n4.1.1 Prosedur Eksploratif\nSecara eksploratif dalam mendeteksi kenormalan pada galat dapat menggunakan plot peluang normal (Normal probability (Q-Q) plot) dan histogram sisaan.\nMetode grafis plot peluang normal (Normal probability (Q-Q) plot) memiliki sumbu vertikal plot (nilai data yang berurut) dan sumbu horizontal plot (nilai peluang normal). Untuk mendeteksi normalitas pada residual, maka pada sumbu vertikal plot NPP merupakan residual yang terurut dan pada sumbu horizontal merupakan skor peluang normal yang terurut dari residual. Jika pada NPP diperoleh garis yang lurus atau mendekati/hampir lurus maka data residual tersebut menyebar normal. Garis tersebut tidak akan betul-betul lurus sempurna karena adanya keragaman contoh. Jika dibuat plot NPP untuk data tidak normal, plot akan cenderung melengkung, dan bentuk kelengkungan tersebut dapat menjadi informasi sejauh mana penyimpangan ketidaknormalannya.\n\n\nCode\nlibrary(googlesheets4)\nDataRAKL<-read_sheet(\"https://docs.google.com/spreadsheets/d/1uFi_Njharot8G8-DvHWPhNLLqJ72ym5EuuOqgeFA0hY/edit?usp=sharing\")\n\n\n! Using an auto-discovered, cached token.\n\n\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n\n\n  See gargle's \"Non-interactive auth\" vignette for more details:\n\n\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n\n\nℹ The googlesheets4 package is using a cached token for\n  'muh.ammarsahab@apps.ipb.ac.id'.\n\n\n✔ Reading from \"RAKL_P2 Rancob\".\n\n\n✔ Range 'Sheet1'.\n\n\nCode\nDataRAKL$Produksi<-as.numeric(DataRAKL$Produksi)\n\n#pastikan perlakuan dan kelompok berbentuk faktor\nDataRAKL$Kelompok<-as.factor(DataRAKL$Kelompok)\nDataRAKL$Perlakuan<-as.factor(DataRAKL$Perlakuan)\n\naovRAKL<-aov(Produksi~Kelompok+Perlakuan,data=DataRAKL) #prosedur anova\nbroom::tidy(aovRAKL) |> knitr::kable()\n\n\n\n\n\nterm\ndf\nsumsq\nmeansq\nstatistic\np.value\n\n\n\n\nKelompok\n2\n39.2107\n19.605348\n2.220614\n0.1408977\n\n\nPerlakuan\n8\n586.0398\n73.254970\n8.297279\n0.0001896\n\n\nResiduals\n16\n141.2607\n8.828794\nNA\nNA\n\n\n\n\n\nPertama, plot Q-Q:\n\n\nCode\n# Plot Peluang Normal (Q-Q)\n  plot(aovRAKL, which = 2)\n\n\n\n\n\nCode\n  #atau#\n  qqnorm(aovRAKL$residuals); qqline(aovRAKL$residuals, col = 'red')\n\n\n\n\n\nLalu, histogram:\n\n\nCode\n# Histogram Sisaan\n  hist(aovRAKL$residuals,breaks = 10)\n  #atau#\n  library(rcompanion)\n\n\n\n\n\nCode\n  plotNormalHistogram(aovRAKL$residuals, breaks = 10)\n\n\n\n\n\nDari plot di atas dapat terlihat bahwa semua titik cenderung berada kira-kira di sekitar sepanjang garis diagonal tetapi ada satu titik tidak dekat dengan garis dan histogram membentuk seperti kurva sebaran normal sehingga asumsi galat percobaan menyebar normal terpenuhi. Metode qq-plot dan histogram residual di python sebagai berikut. Pertama, lakukan ANOVA:\n\n\nCode\nimport pandas as pd\nimport numpy as np\nimport statsmodels.api as sm\n\n\nC:\\Users\\Acer\\AppData\\Local\\R\\win-library\\4.2\\reticulate\\python\\rpytools\\loader.py:39: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  module = _import(\nC:\\Users\\Acer\\AppData\\Local\\Programs\\Python\\PYTHON~2\\lib\\site-packages\\statsmodels\\compat\\pandas.py:65: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  from pandas import Int64Index as NumericIndex\n\n\nCode\nfrom statsmodels.formula.api import ols\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\nRAKLpy=pd.read_csv(\"https://docs.google.com/spreadsheets/d/e/2PACX-1vTi9yO_OJZ5pHMmPRlPqPxK9TydeVWI--rXAYfFfwj2v6ee-vUrQGYUGYb5zgguZ5mgu9IDhwB-dIwl/pub?gid=0&single=true&output=csv\") #baca data\n\nRAKL_lm= ols('Produksi ~ C(Perlakuan)+C(Kelompok)',data=RAKLpy).fit() #C=peubah kategorik\ntable = sm.stats.anova_lm(RAKL_lm, typ=2) # Type 2 ANOVA DataFrame\nprint(table)\n\n\n                  sum_sq    df         F    PR(>F)\nC(Perlakuan)  586.039763   8.0  8.297279  0.000190\nC(Kelompok)    39.210696   2.0  2.220615  0.140898\nResidual      141.260704  16.0       NaN       NaN\n\n\nBuat plot:\n\n\nCode\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\n\n#create Q-Q plot with 45-degree line added to plot\nfig = sm.qqplot(RAKL_lm.resid, line='s')\nplt.show()\n\n\n\n\n\nDan untuk histogram:\n\n\nCode\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.clf() #clear plot sebelumnya\nh=sns.histplot(RAKL_lm.resid,bins=10, kde=True)\nplt.show()\n\n\n\n\n\n\n\n4.1.2 Uji formal untuk galat percobaan menyebar normal\nsecara formal dapat menggunakan beberapa uji tertentu diantaranya adalah Uji Kolmogorov-Smirnov, Uji Shapiro-Wilk, Uji Lilliefors, Uji Jarque-Bera, Uji Anderson-Darling, dsb.\nSemua uji tersebut memiliki hipotesis:\n\\[\n\\begin{align}\nH_{0}&:\\text{ Galat menyebar normal}\\\\\nH_{1}&:\\text{ Galat tidak menyebar normal}\n\\end{align}\n\\]\nUji Shapiro Wilk memiliki statistik uji sebagai berikut:\n\\[\nW = \\frac{\\left[\\sum^n_{i=1} a_i x_{(i)}\\right]^2}{\\sum^n_{i=1}(x_i – \\bar{x})^2}\n\\]\n\\(x_{(i)}\\) adalah statistik tataan ke-i - angka terkecil ke-i dari sampel. \\(a_{i}\\) berasal dari suatu rumus berisi mean dan matriks peragam \\(X\\). Implementasi di R:\n\n\nCode\n  shapiro.test(x = aovRAKL$residuals)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  aovRAKL$residuals\nW = 0.98096, p-value = 0.8833\n\n\nDan implementasi python:\n\n\nCode\nfrom scipy.stats import shapiro\n\nresult = (shapiro(RAKL_lm.resid))\n\nprint(f\"S-W statistic: {result[0]}\")\n\n\nS-W statistic: 0.9809552431106567\n\n\nCode\nprint(f\"p-value: {result[1]}\")\n\n\np-value: 0.8832639455795288\n\n\nDari keluaran uji Shapiro-Wilk dapat dilihat nilai p-value = 0.8832 \\(> \\alpha = 0.05\\) maka tak tolak \\(H_{0}\\), artinya tidak cukup bukti untuk mengatakan bahwa galat tidak menyebar normal sehingga asumsi galat percobaan menyebar normal terpenuhi.\nUji Kolmogorov-Smirnov memiliki statistik uji:\n\\[\nD_n = \\sup_{x}|F_n(x) – F(x)|\n\\]\nAtau, jarak terbesar antara fungsi kumulatif dari sampel dan fungsi kumulatif dari sebaran normal (dalam kasus menguji kenormalan). Fungsi kumulatif dapat disesuaikan untuk sebaran yang berbeda jika ingin menguji kesesuaian dengan sebaran lain. Visualisasi dari proses ini ditunjukkan di dokumen ini.\n\n\nCode\n# Uji Kolmogorov-Smirnov\n  ks.test(aovRAKL$residuals,pnorm, mean(aovRAKL$residuals), sd(aovRAKL$residuals))\n\n\n\n    Exact one-sample Kolmogorov-Smirnov test\n\ndata:  aovRAKL$residuals\nD = 0.090934, p-value = 0.964\nalternative hypothesis: two-sided\n\n\nDan di python:\n\n\nCode\nfrom scipy.stats import kstest\nimport numpy as np\n\nresult = kstest(RAKL_lm.resid, cdf=\"norm\",args=(np.mean(RAKL_lm.resid),np.std(RAKL_lm.resid)))\n\nprint(f\"K-S statistic: {result[0]}\")\n\n\nK-S statistic: 0.09507410791382365\n\n\nCode\nprint(f\"p-value: {result[1]}\")\n\n\np-value: 0.9483937411797532\n\n\nDari keluaran diatas dapat dilihat nilai p-value = 0.964 (R) > alpha = 0.05 maka Tak Tolak \\(H_{0}\\), artinya tidak cukup bukti untuk mengatakan bahwa galat tidak menyebar normal sehingga dengan uji Kolmogorov-Smirnov asumsi galat percobaan menyebar normal juga terpenuhi.\nUji Lilliefors pada dasarnya merupakan modifikasi dari uji Kolmogorov Smirnov. Uji tersebut dapat dilakukan tanpa menspesifikasi mean dan simpangan baku dari sebaran normal yang hendak diuji, serta memberikan koreksi pada nilai Kolmogorov Smirnov. Implementasi di R:\n\n\nCode\n# Uji Lilliefors\n# Hipotesis: H0 : galat menyebar normal\n#            H1 : galat tidak menyebar normal\nlibrary(nortest)\nlillie.test(aovRAKL$residuals)\n\n\n\n    Lilliefors (Kolmogorov-Smirnov) normality test\n\ndata:  aovRAKL$residuals\nD = 0.090934, p-value = 0.8199\n\n\n\n\nCode\nfrom statsmodels.stats.diagnostic import lilliefors\n\nD,p=lilliefors(RAKL_lm.resid,dist='norm',pvalmethod='table')\nprint(\"Statistik uji: \",D)\n\n\nStatistik uji:  0.09093377335390318\n\n\nCode\nprint(\"p-value: \",p)\n\n\np-value:  0.8117606135583574\n\n\nDari keluaran di atas dapat dilihat nilai p-value = 0.8199 \\(> /alpha = 0.05\\) maka Tak Tolak \\(H_{0}\\), artinya tidak cukup bukti untuk mengatakan bahwa galat tidak menyebar normal sehingga dengan uji Lilliefors asumsi galat percobaan menyebar normal juga terpenuhi.\nUji Jarque-Bera membandingkan skewness dan kurtosis data dengan sebaran normal. Ini dapat dilihat dari statistik uji:\n\\[\nJB = \\frac{n}{6} \\times \\bigg(S^2 + \\frac{(K-3)^2}{4} \\bigg)\n\\]\nn adalah jumlah sampel, S adalah skewness, dan K adalah kurtosis. Implementasi di R sebagai berikut:\n\n\nCode\n# Uji Jarque-Bera\n# Hipotesis: H0 : galat menyebar normal\n#            H1 : galat tidak menyebar normal\nlibrary(tseries)\ntseries::jarque.bera.test(aovRAKL$residuals)\n\n\n\n    Jarque Bera Test\n\ndata:  aovRAKL$residuals\nX-squared = 0.31309, df = 2, p-value = 0.8551\n\n\nDan implementasi python:\n\n\nCode\nfrom scipy.stats import jarque_bera\n\nresult = (jarque_bera(RAKL_lm.resid))\n\nprint(\"JB statistic:\", result[0])\n\n\nJB statistic: 0.3130851694293787\n\n\nCode\nprint(\"p-value:\", result[1])\n\n\np-value: 0.8550951029465681\n\n\nDari keluaran diatas dapat dilihat nilai p-value = 0.8551 > alpha = 0.05 maka Tak Tolak H0, artinya tidak cukup bukti untuk mengatakan bahwa galat tidak menyebar normal sehingga dengan uji Jarque-Bera asumsi galat percobaan menyebar normal juga terpenuhi.\nUji Anderson-Darling merupakan modifikasi dari uji Kolmogorov Smirnov:\n\\[\nA^2 = n \\int_{-\\infty}^{\\infty}  \\bigg (F_n(x) – F(x) \\bigg )^2 w(x) dF(x)\n\\]\nStatistik uji tersebut masih merupakan beda antara fungsi kumulatif, tetapi beda yang terambil tidak hanya beda terbesar. Selain itu, ada pembobotan:\n\\[\nw(x) = \\bigg[F(x)(1-F(x))\\bigg]^{-1}\n\\]\nSehingga bobot tersebut akan lebih besar di ujung sebaran. Implementasi di R sebagai berikut:\n\n\nCode\n# Uji Anderson-Darling\n# Hipotesis: H0 : galat menyebar normal\n#            H1 : galat tidak menyebar normal\nlibrary(nortest)\nad.test(aovRAKL$residuals)\n\n\n\n    Anderson-Darling normality test\n\ndata:  aovRAKL$residuals\nA = 0.23022, p-value = 0.7851\n\n\nSedangkan di python:\n\n\nCode\nfrom scipy.stats import anderson\n\nresult = (anderson(RAKL_lm.resid, dist='norm'))\n\nprint(\"A-D statistic:\", result[0])\n\n\nA-D statistic: 0.2302183152399664\n\n\nCode\nprint(\"Critical values:\", result[1])\n\n\nCritical values: [0.517 0.589 0.707 0.824 0.98 ]\n\n\nCode\nprint(\"Significance levels:\", result[2])\n\n\nSignificance levels: [15.  10.   5.   2.5  1. ]\n\n\nDari keluaran diatas dapat dilihat nilai p-value = 0.7851 > \\(/alpha = 0.05\\) maka Tak Tolak \\(H_{0}\\), artinya tidak cukup bukti untuk mengatakan bahwa galat tidak menyebar normal sehingga dengan uji Anderson-Darling asumsi galat percobaan menyebar normal juga terpenuhi. Interpretasi output Python adalah dengan membandingkan statistik uji dengan nilai kritis di taraf tertentu. Misal, karena \\(0.2302<0.517\\), \\(H_{0}\\) tak ditolak di \\(\\alpha=15\\%\\). Jika nilai statistik uji lebih besar dari nilai kritis, \\(H_{0}\\) dapat ditolak.\n\n\n4.1.3 Konsekuensi dari ketidaknormalan pada galat.\n\nKemenjuluran mempengaruhi selang kepercayaan\n\nKemenjuluran digunakan untuk mengukur ketidaksimetrisan data dan kurtosis digunakan untuk mengukur panjang ekor pada data. Baik kemenjuluran dan kurtosis pada sebaran normal adalah 0. Sebaran dengan ekor yang lebih panjang ke kanan ialah sebaran yang menjulur positif, sedangkan sebaran dengan ekor yang lebih panjang ke kiri ialah sebaran yang menjulur negatif. Sebaran yang simetris seperti sebaran normal mempunyai nilai kemenjuluran sama dengan 0. Sebaran dengan ekor yang lebih panjang dari normal (lebih rawan memiliki pencilan) memiliki kurtosis positif, dan mereka dengan ekor lebih pendek dari normal (cenderung memiliki sedikit pencilan) memiliki kurtosis negatif.\nKemenjuluran mempengaruhi selang kepercayaanKemenjuluran dan kurtosis pada data dapat mempengaruhi selang kepercayaan, akan tetapi kemenjuluran mempunyai efek yang lebih besar dibanding kurtosis. Ketika suata data menyebar normal, selang kepercayaan dua arah dari sebaran t- berada pada selang/cakupan yang benar, galat yang sama besar pada data yang tinggi dan rendah. Ketika data dari sebaran mempunyai nilai kemenjuluran sama dengan nol, maka selang kepercayaan pada uji dua arah juga masih berada di sekitar nilai/cakupan yang benar, tetapi galat cenderung ke satu sisi atau sisi yang lainnya, tidak sama besar secara merata pada data yang besar dan kecil. Selang kepercayaan pada uji satu arah untuk rataan bisa menjadi masalah yang serius.\n\nPencilan, kekekaran, dan resistensi\n\nSuatu pencilan dapat mempengaruhi rataan perlakuan juga KTG. Sehingga inferensi yang diperoleh jika memasukkan dan mengeluarkan pencilan akan berbeda. Hal ini mungkin berguna untuk membedakan untuk membedakan antara kekekaran (validitas) dan resistensi (untuk pencilan). Kekekaran pada validitas artinya bahwa prosedur tersebut memberikan kesimpulan yang masih mendekati benar, bahkan ketika beberapa asumsi kita (seperti normalitas) tidak terpenuhi. Jadi dapat dikatakan bahwa uji-F pada ANOVA masih kekar, karena nilai uji-F 5% menolak nol di sekitar 5% dari seluruh contoh ketika hipotesin nol benar, bahkan ketika data yang diperoleh agak tidak normal. Suatu prosedur dikatakan resisten jika satu atau beberapa nilai data individu tidak mengubah inferensi dari suatu data. Walaupun uji F kekar pada validitasnya, tetapi uji-F tidak resisten terhadap pencilan."
  },
  {
    "objectID": "04-Bab4.html#kehomogenan-ragam",
    "href": "04-Bab4.html#kehomogenan-ragam",
    "title": "4  Uji Asumsi",
    "section": "4.2 Kehomogenan ragam",
    "text": "4.2 Kehomogenan ragam\nTerkadang, sisaan tidak konstan di nilai \\(\\hat{y}\\) yang berbeda (dalam kata lain, di taraf faktor berbeda-beda). Jika penurunan ANOVA yang diberikan di Montgomery (2017) diteliti, penurunan nilai harapan \\(KT_{G}\\) sebagai penduga \\(\\sigma^2\\) memerlukan asumsi kehomogenan ragam. Oleh karena itu, jika asumsi tersebut tidak terpenuhi, penduga ragam yang dimiliki bukan penduga terbaik. Ini berarti penduga efek perlakuan, kelompok, dan lainnya belum tentu efisien (ragam belum tentu terkecil) dan hasil uji-F dapat salah. Namun, penduga tersebut masih tak bias karena ketidakbiasan muncul dari nilai harapan \\(e_{ij}\\), dan sifat tersebut dipastikan MKT.\nDalam rancangan percobaan dengan jumlah ulangan sama di semua perlakuan, uji-F tidak terlalu dipengaruhi ragam tak homogen. Namun, jika jumlah ulangan tidak sama atau jika ada ragam yang jauh lebih besar dari ragam lainnya, masalah tersebut lebih serius. Jika ragam besar muncul di perlakuan dengan ulangan sedikit, \\(\\alpha\\) aktual lebih besar dari yang diinginkan (sehingga lebih mungkin menolak \\(H_{0}\\) jika \\(H_{0}\\) benar). Jika ragam besar muncul di perlakuan dengan ulangan banyak \\(\\alpha\\) aktual lebih kecil dari yang diinginkan (peneliti tanpa sengaja memilih uji yang terlalu ketat). Jika model acak digunakan, inferensia mengenai ragam akan terganggu walaupun ulangan sama digunakan.\nBlanca et al. (2017) mendiskusikan kekekaran uji-F di berbagai situasi. Sama seperti Montgomery, ragam tak sama tidak menganggu uji-F saat ulangan sama. Namun, uji-F terganggu jika jumlah ulangan tak sama saat rasio antara ragam perlakuan terkecil dan terbesar lebih dari 1.5.\n\n4.2.1 Prosedur Eksploratif\nProsedur eksploratif yang dapat dilakukan adalah plot residual vs. fitted dan plot scale-location. Plot ini dapat dilihat dengan menggunakan fungsi plot(hasilmodel). Fungsi tersebut sebenarnya mengeluarkan berbagai jenis plot, seperti plot kuantil-kuantil dari residual (yang akan berguna saat melihat normalitas dari residual). Implementasi plotting tersebut di R adalah:\n\n\nCode\npar(mfrow=c(1,2)) #layout: mfrow= 1 baris, 2 kolom\nplot(aovRAKL, which=c(1,3)) #plot 1 (residual-fitted) dan 3 (scale-location)\n\n\n\n\n\nPerlu dilihat dua hal dari plot residual vs fited. Pertama, garis merah di plot tersebut seharusnya lurus di nol. Kedua, titik-titik di plot tersebut menyebar seragam, tidak membentuk pola tertentu. Terlihat bahwa garis merah melengkung di kedua ujung plot residual vs. fitted Selain itu, titik-titik tampak membentuk pola corong terbalik. Hal tersebut dapat terlihat dari data yang sengaja dibuat memiliki ragam tak homogen. Demonstrasi ini diadaptasi dari Hanck et al. (2016).\n\n\nCode\nset.seed(101) \n\nx <- rep(seq(1,100)) #vektor x dari 1-100\ne <- c()\ne[1:25] <- rnorm(25, sd = 40)\ne[26:50] <- rnorm(25, sd = 30)\ne[51:75] <- rnorm(25, sd = 20)\ne[76:100] <- rnorm(25, sd = 10)\n# vektor galat, saat x kecil, ragam galat dibuat besar\ny <- 720 + 3.3 * x + e\nmod <- lm(y ~ x)\n\nplot(mod,which=1) #plot model\n\n\n\n\n\nSelain itu, heteroskedastisitas juga terlihat di plot scale-location. Seharusnya garis merah di plot scale-location lurus dan titik-titik terdistribusi homogen. Walaupun ada dua amatan yang tak sesuai dengan pola tersebut, terlihat bahwa ada pola menurun di plot tersebut saat x membesar. Jika kembali ke contoh data dengan ragam tak sama sebelumnya:\n\n\nCode\nplot(mod,which=3)\n\n\n\n\n\nPola menurun tersebut juga terlihat. Plot terakhir yang dapat digunakan untuk mendiagnosis ragam tak seragam adalah plot residual vs level faktor:\n\n\nCode\nplot(aovRAKL,which=5) #plot ke-5\n\n\n\n\n\nPlot ini menunjukkan sebaran residual per kelompok, sedangkan sebaran residual per perlakuan dapat dilihat di:\n\n\nCode\naovRAKL2<-aov(Produksi~Perlakuan+Kelompok,data=DataRAKL) #ubah urutan anova. peubah pertama setelah y~ akan menjadi level faktor di plot ini\nplot(aovRAKL2,which=5)\n\n\n\n\n\nKetidakhomogenan ragam tidak terlihat di kedua plot ini.\nBuat plot residual vs fitted terlebih dahulu. Pertama, buat data frame dengan nilai-nilai yang diinginkan:\n\n\nCode\ntemp_data = pd.DataFrame(dict(fitted_values=RAKL_lm.fittedvalues, residual=RAKL_lm.resid))\n#ambil fitted values dan residual dengan hasilANOVA.fittedvalues/resid\n\n\nBuat plot dari data tersebut. Buat argumen lowess=True agar garis merah terlihat seperti di R:\n\n\nCode\ngraph = sns.lmplot(x='fitted_values', y='residual', data=temp_data, lowess=True, line_kws={'color':'red'}) #lowess=garis, line_kws=setting garis lowess, dalam kasus ini warna\nplt.show()\n\n\n\n\n\nPola corong terbalik juga terlihat di plot ini. Lalu, untuk membuat plot scale-location di python, ambil studentized residual dari model terebut dulu:\n\n\nCode\nsqrt_std_residual = np.sqrt(np.abs(RAKL_lm.get_influence().resid_studentized_internal))\n#hasil_model.get_influence().resid_studendized_interal: ambil studentized residual\n#np.sqrt: akar\ntemp_data_scaleloc = pd.DataFrame(dict(fitted_values=RAKL_lm.fittedvalues,\n                              sqrt_std_residual=sqrt_std_residual)) #masukkan dataFrame\n\n\nLalu, plot-kan:\n\n\nCode\ngraph = sns.lmplot(x='fitted_values', y='sqrt_std_residual', data=temp_data_scaleloc, lowess=True, line_kws={'color':'red'})\nplt.show()\n\n\n\n\n\nPola menurun terlihat juga di plot ini.\n\n\n4.2.2 Uji formal untuk kehomogenan ragam\nKhalayak yang berbeda dapat memberikan tafsiran berbeda untuk tiap plot, khususnya jika ketidakhomogenan ragam tidak seekstrim di contoh sebelumnya. Pola-pola tertentu belum tentu terlihat, khususnya jika audiens kurang teliti. Oleh karena itu, perlu uji formal untuk kehomogenan ragam. Semua uji yang akan diperlihatkan memiliki hipotesis:\n\\[\n\\begin{align}\nH_{0}&:\\sigma_{1}^2=\\sigma_{2}^2=...=\\sigma_{t}^2=\\sigma^2 \\text{ (ragam homogen)}\\\\\nH_{1}&:\\text{ Setidaknya satu }\\sigma_{i}^2\\neq\\sigma^2 \\text{ (ragam tak homogen)}\n\\end{align}\n\\]\n\n4.2.2.1 Uji yang didasari asumsi normalitas: Bartlett dan Hartley\nUji Bartlett memiliki statistik uji:\n\\[\n\\begin{align}\n\\chi_{0}^2&=2.3026\\frac{q}{c}\\\\\nq&=(N-t)\\log_{10}S^2_p-\\sum_{i=1}^t (r_{i}-1)\\log_{10}S_{i}^2\\\\\nc&=1+\\frac{1}{3(t-1)}\\left[\\sum_{i=1}^t (n_{i}-1)^{-1}-(N-a)^{-1}\\right]\\\\\nS_{p}^2&=\\frac{\\sum_{i=1}^t(r_{i}-1)S_{i}^2}{N-t}\n\\end{align}\n\\]\nDengan \\(S_{i}^2\\) adalah ragam sampel perlakuan atau kelompok ke-i, N jumlah total unit percobaan. Arti dari rumus tersebut adalah upaya membandingkan penduga ragam jika homogen \\(S_{p}^2\\) dengan jumlah ragam sebenarnya. Jika ragam homogen, statistik q akan mendekati nol. Jika heterogen, statistik q akan besar sehingga \\(H_{0}\\) akan ditolak jika \\(\\chi_{0}^2>\\chi_{\\alpha;t-1}^2\\)\nSedangkan uji Hartley memiliki statistik uji:\n\\[\nF_{max}=\\frac{max_{i}[S_{i}^2]}{min_{i}[S_{i}^2]}\n\\]\nAtau rasio antara ragam maksimum dan ragam minimum. Uji ini mengharuskan jumlah ulangan sama. Penduga ragam menyebar chi-kuadrat jika peubah acak tersebut menyebar normal1. Jika jumlah ulangan sama di suatu perlakuan atau kelompok, maka derajat bebas tiap penduga ragam sama. Pembagian dua peubah chi-kuadrat dengan derajat bebasnya menghasilkan peubah yang menyebar F. Karena jumlah ulangan sama, angka tersebut saling terbagi.\nJika ada beberapa perlakuan yang digunakan, atau beberapa kelompok, dapat dilakukan uji untuk tiap perlakuan tersebut. Implementasi uji tersebut di R sebagai berikut:\n\n\nCode\nbartlett.test(Produksi ~ Perlakuan, data = DataRAKL) #uji kehomogenan ragam di tiap perlakuan\n\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  Produksi by Perlakuan\nBartlett's K-squared = 5.7463, df = 8, p-value = 0.6756\n\n\nCode\nbartlett.test(Produksi ~ Kelompok, data = DataRAKL) #uji kehomogenan ragam di tiap kelompok\n\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  Produksi by Kelompok\nBartlett's K-squared = 2.5611, df = 2, p-value = 0.2779\n\n\nSedangkan uji Hartley:\n\n\nCode\nlibrary(PMCMRplus)\nhartleyTest(Produksi~Perlakuan,data=DataRAKL)\n\n\n\n    Hartley's maximum F-ratio test of homogeneity of variances\n\ndata:  Produksi by Perlakuan\nF Max = 22.226, df = 2, k = 9, p-value = 0.6461\n\n\nCode\nhartleyTest(Produksi~Kelompok,data=DataRAKL)\n\n\n\n    Hartley's maximum F-ratio test of homogeneity of variances\n\ndata:  Produksi by Kelompok\nF Max = 3.1755, df = 8, k = 3, p-value = 0.2647\n\n\nKedua uji tersebut tidak menolak \\(H_{0}\\) di \\(\\alpha=5\\%\\). Oleh karena itu, kesimpulan dari dua uji tersebut adalah bahwa ragam homogen. Implementasi uji Bartlett di python menggunakan scipy sebagai berikut:\n\n\nCode\nfrom scipy.stats import bartlett\nkel1 = RAKLpy.query('Kelompok == 1')['Produksi'] #ambil nilai peubah respon di tiap kelompok\nkel2 = RAKLpy.query('Kelompok == 2')['Produksi'] #sintaks: dataframe.query('kondisi')['peubah']\nkel3 = RAKLpy.query('Kelompok == 3')['Produksi']\n\nstat, p = bartlett(kel1, kel2, kel3) #lakukan uji\n\nprint(\"Statistik uji:\", stat, \"| P-value:\", p) #print hasil uji\n\n\nStatistik uji: 2.5610747969217615 | P-value: 0.27788792377685606\n\n\nImplementasi ini cukup membosankan karena harus mengambil data tiap kelompok secara manual. Implementasi menggunakan pingouin tidak memerlukan hal tersebut. Implementasi ini lebih baik jika ada banyak kelompok. Misal, ada tujuh perlakuan berbeda. Pengambilan data untuk tiap perlakuan akan membosankan. Karena itu, gunakan pingouin:\n\n\nCode\nimport pingouin as pg\n\npg.homoscedasticity(RAKLpy, dv='Produksi', \n                    group='Perlakuan',\n                   method='bartlett') #(data, peubah respon (y), faktor, metode)\n\n\n                 T      pval  equal_var\nbartlett  5.746278  0.675628       True\n\n\nKesimpulan uji menggunakan R ataupun python sama. Ragam homogen.\n\n\n\n4.2.3 Uji Levene dan Brown-Forsythe\nUji Bartlett dan Hartley bergantung pada asumsi normalitas. Jika sebaran galat tidak normal, misal menyebar Student-t atau chi-kuadrat, uji tersebut akan cenderung mengambil keputusan yang salah. Uji tersebut dapat secara empiris memiliki \\(\\alpha\\) yang lebih tinggi dari yang diinginkan dan memiliki kuasa uji lebih rendah dari alternatif yang tidak mengasumsikan normalitas.\nAlternatif uji yang tidak mengasumsikan normalitas adalah uji Levene, dengan statistik uji:\n\\[\nW=\\frac{(N-t)}{(t-1)}\\frac{\\sum_{i=1}^t r_{i}\\left(\\bar{Z}_{i.}-\\bar{Z}_{..}\\right)^2}{\\sum_{i=1}^t\\sum_{j=1}^r\\left(Z_{ij}-\\bar{Z}_{i.}\\right)}\n\\]\nUji Levene menghasilkan sekeluarga uji dengan statistik uji yang mirip, hanya dibedakan oleh pilihan \\(Z_{ij}\\). Uji Levene menggunakan rata-rata perlakuan ke-i \\(\\bar{Y}_{i.}\\), sedangkan ada juga uji yang menggunakan rata-rata terpangkas \\(10\\%\\) \\(\\hat{Y}_{i.}\\). Uji Brown-Forsythe menggunakan median \\(\\bar{Y}_{i.}^{'}\\). Jika disimpulkan:\n\\[\n\\begin{align}\n\\text{Levene }&: Z_{ij}=|y_{ij}-\\bar{y}_{i.}| & \\text{ (Mean)}\\\\\n\\text{Levene (trimmed) }&: Z_{ij}=|y_{ij}-\\hat{y}_{i.}| & \\text{ (Mean terpangkas)}\\\\\n\\text{Brown-Forsythe }&: Z_{ij}=|y_{ij}-\\bar{y}_{i.}^{'}| & \\text{ (Median)}\\\\\n\\end{align}\n\\]\nBrown dan Forsythe (1974) membandingkan kuasa uji dan \\(\\alpha\\) empiris beberapa uji homogenitas ragam di berbagai situasi dengan simulasi. Keluarga uji Levene memiliki kuasa uji lebih rendah jika data berdistribusi normal, tetapi di distribusi Student-t dan chi-kuadrat kuasa uji Levene lebih tinggi. Uji Levene tidak kekar pada data dengan penjuluran ekstrim karena memiliki tingkat kesalahan jenis I (tolak \\(H_{0}\\) jika \\(H_{0}\\) benar) lebih tinggi secara empiris daripada yang dispesifikasi peneliti. Uji Brown-Forsythe sangat konservatif, bahkan dengan tingkat kesalahan jenis I (\\(\\alpha\\)) empiris lebih rendah dari yang dispesifikasi. Uji Levene dengan mean terpangkas memiliki \\(\\alpha\\) empiris paling dekat dengan yang diinginkan. Penemuan ini direplikasi di penelitian lainnya dan disimpulkan di Conover et al. (2018).\nOleh karena itu, dalam menentukan uji paling tepat untuk kehomogenan ragam, perlu diteliti sebaran dari sisaan. Jika sebaran normal, uji Bartlett ataupun Hartley paling baik. Jika sebaran tidak normal tetapi tidak menjulur ekstrim, uji Levene memilik kuasa uji paling tinggi daripada uji lainnya. Jika sebaran menjulur ekstrim, uji Levene dengan mean terpangkas atau uji Brown-Forsythe paling kekar.\nImplementasi uji tersebut di R adalah sebagai berikut:\n\n\nCode\nlibrary(car)\n\n\nLoading required package: carData\n\n\nCode\nleveneTest(Produksi~Perlakuan, data=DataRAKL, center = median) #default (Brown Forsythe)\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(>F)\ngroup  8  0.5855 0.7771\n      18               \n\n\nCode\nleveneTest(Produksi~Kelompok, data=DataRAKL, center = mean) # Levene (mean)\n\n\nLevene's Test for Homogeneity of Variance (center = mean)\n      Df F value Pr(>F)\ngroup  2  0.8113 0.4561\n      24               \n\n\nCode\nleveneTest(Produksi~Perlakuan, data=DataRAKL, center = mean,trim=0.1) # Levene (trimmed)\n\n\nLevene's Test for Homogeneity of Variance (center = mean: 0.1)\n      Df F value Pr(>F)\ngroup  8  1.0536 0.4351\n      18               \n\n\nKarena p-value lebih dari \\(\\alpha=5\\%\\), ragam dapat dianggap homogen untuk kelompok dan perlakuan di taraf tersebut. Sedangkan implementasi uji tersebut di Python:\n\n\nCode\nfrom scipy.stats import levene\nstatlev, plev = levene(kel1, kel2, kel3,center=\"median\") #center median\nstatlev_trim, plev_trim = levene(kel1, kel2, kel3,center=\"mean\", proportiontocut=0.1) #center mean, proportion to cut= 10 persen dipangkas\n\nprint(\"Statistik uji (Brown-Forsythe):\", statlev, \"| P-value:\", plev) #print hasil uji\n\n\nStatistik uji (Brown-Forsythe): 0.7589478077456477 | P-value: 0.47906740355022637\n\n\nCode\nprint(\"Statistik uji (Trim):\", statlev_trim, \"| P-value:\", plev_trim) #print hasil uji\n\n\nStatistik uji (Trim): 0.8113082087822503 | P-value: 0.45609278276162774\n\n\nKode python untuk uji ini lebih pendek karena vektor hasil per kelompok sudah diambil sebelumnya untuk uji Bartlett. Jika menggunakan pingouin:\n\n\nCode\nimport pingouin as pg\npg.homoscedasticity(RAKLpy, dv='Produksi', \n                    group='Perlakuan',\n                   method='levene') #(data, peubah respon (y), faktor, metode)\n\n\n               W      pval  equal_var\nlevene  0.585459  0.777083       True\n\n\nSayangnya, hanya dapat dilakukan uji Brown-Forsythe (atau, uji Levene menggunakan median). Walaupun implementasi pingouin lebih sederhana, metode ini kurang fleksibel.\n\n\n4.2.4 Plot vs. uji\nTerlihat bahwa hasil uji formal menyimpulkan bahwa ragam sama, sedangkan plot residual vs. fitted dan scale-location menunjukkan pola heteroskedastis. Mungkin, amatan 6 dan 14 berpengaruh. Coba hilangkan amatan tersebut:\n\n\nCode\nDataRAKL_tanpaoutlier<-DataRAKL[c(-6,-14),]\nbartlett.test(Produksi ~ Perlakuan, data = DataRAKL_tanpaoutlier) #uji kehomogenan ragam di tiap perlakuan\n\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  Produksi by Perlakuan\nBartlett's K-squared = 2.5855, df = 8, p-value = 0.9576\n\n\nCode\nbartlett.test(Produksi ~ Kelompok, data = DataRAKL_tanpaoutlier) #uji kehomogenan ragam di tiap kelompok\n\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  Produksi by Kelompok\nBartlett's K-squared = 2.4855, df = 2, p-value = 0.2886\n\n\nCode\nleveneTest(Produksi ~ Perlakuan, data = DataRAKL_tanpaoutlier) #uji kehomogenan ragam di tiap perlakuan\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(>F)\ngroup  8  0.3319  0.941\n      16               \n\n\nCode\nleveneTest(Produksi ~ Kelompok, data = DataRAKL_tanpaoutlier) #uji kehomogenan ragam di tiap kelompok\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(>F)\ngroup  2  0.8511 0.4405\n      22               \n\n\nUji formal masih menandakan ragam sama. Lalu, bagaimana cara hasil plot residual vs fitted dijelaskan?\nPertama, plot residual per kelompok dan perlakuan relatif sama. Karena uji hanya dapat dilakukan kepada kelompok atau perlakuan, bukan kombinasinya, hasil ini sesuai dengan plot tersebut. Kedua, pola tersebut mungkin muncul karena observasi sedikit di fitted values yang besar sehingga terlihat berpola padahal tidak. Ketiga, pola tersebut mungkin muncul karena interaksi antara kelompok dan perlakuan yang menurut uji Tukey ada. Oleh karena itu, uji yang terpisah di perlakuan atau kelompok tidak dapat mendeteksi hal tersebut, tapi uji yang melihat kombinasi residual dapat mendeteksi hal tersbut. Mungkin dapat dibandingkan dengan uji Bresuch-Pagan (yang menjadi uji standar heteroskedastisitas di regresi):\n\n\nCode\nlibrary(lmtest)\n\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nCode\nbptest(Produksi~Perlakuan+Kelompok,data=DataRAKL)\n\n\n\n    studentized Breusch-Pagan test\n\ndata:  Produksi ~ Perlakuan + Kelompok\nBP = 13.784, df = 10, p-value = 0.1831\n\n\nWalaupun masih taktolak \\(H_{0}\\), hasil uji Breusch-Pagan memiliki p-value lebih rendah dari uji lain. Oleh karena itu, aman untuk mengasumsikan ragam homogen di kasus ini. Selain itu karena jumlah ulangan sama, heterogenitas ragam tak berpengaruh besar, sesuai diskusi sebelumnya."
  },
  {
    "objectID": "04-Bab4.html#galat-percobaan-saling-bebas",
    "href": "04-Bab4.html#galat-percobaan-saling-bebas",
    "title": "4  Uji Asumsi",
    "section": "4.3 Galat percobaan saling bebas",
    "text": "4.3 Galat percobaan saling bebas\nKebebasan galat merupakan asumsi yang paling penting dari ANOVA dan juga yang paling sulit diatasi ketika asumsi tersebut tidak terpenuhi. Asumsi ragam galat konstan merupakan asumsi yang terpenting kedua untuk dipenuhi setelah asumsi kebebasan galat. Akibat dari ragam galat yang tidak konstan akan mempengaruhi kesimpulan yang kita peroleh. Namun, ragam galat yang tidak konstan dapat diatasi pada banyak situasi, misal menggunakan transformasi.\n\\[\ny_{ij} = \\mu+\\tau_{i}+\\varepsilon_{ij}\n\\]\nPada model linier yang kita gunakan pada persamaan di atas, asumsi kenormalan menjadi tidak begitu penting untuk dipenuhi, terutama jika ukuran contoh yang diperoleh besar dan Teorema Limit Pusat dapat dipakai. Namun terdapat model-model tertentu yang sangat bergantung pada normalitas (Nur Hilal A. Syahrir, Statistika Terapan IPB).\nAutokorelasi muncul ketika hasil pada amatan yang berdekatan cenderung terlalu mirip (korelasi positif) atau terlalu berbeda (korelasi negatif). Autokorelasi seringkali menjadi penyebab ketidakbebasan pada galat. Alasan amatan tidak saling bebas adalah:\n\nPengukuran berulang dilakukan ke subjek yang sama\nAmatan berkorelasi dalam waktu\nAmatan berkorelasi dalam tempat\nPengaturan sistematis dari unit percobaan\n\nContoh pengukuran berulang dan amatan yang berkorelasi dalam waktu adalah jika tiga pohon dengan varietas berbeda diamati tingginya. Misal, tiga pohon tersebut diamati tingginya setelah satu, dua, dan tiga tahun. Jika amatan di varietas ke-i di tahun ke-j menjadi baris di data, amatan-amatan tersebut akan tidak bebas, melainkan berkorelasi dengan waktu. Oleh karena itu, amtatan tiap tahun harus dibuat kolom sendiri agar tiap baris (pohon) saling bebas. Namun, jika hanya diamati satu pohon untuk tiap varietas, tidak akan ada derajat bebas bagi ANOVA. Kasus ini menunjukkan salah satu kendala yang muncul saat penanganan amatan tak bebas.\nJika peneliti tersebut menyadari dari awal bahwa amatan suatu pohon di tahun berbeda tidak saling bebas, seharusnya peneliti menyiapkan beberapa pohon dari satu varietas. Jika ada pengaturan tersebut, derajat bebas cukup untuk melakukan ANOVA.\nContoh dari amatan yang berkorelasi dalam tempat adalah perlakuan A yang ditaruh di lereng suatu bukit dan perlakuan lainnya ditaruh di puncak bukit. Oleh karena berada di tempat geografis yang sama, amatan perlakuan A tidak saling bebas satu sama lain.\nPengaturan sistematis muncul ketika pengacakan tidak dilakukan dengan benar. Akan muncul pola dari urutan unit percobaan.\nSebelum melakukan eksplorasi ataupun uji, pastikan urutan dari amatan masuk akal. Dalam studi kasus ini, dianggap urutan amatan dari DataRAKL sesuai dengan suatu urutan waktu. Misal, baris 1 diamati sebelum baris 2, dan seterusnya. Jika urutan tidak memiliki arti, maka data dapat dengan mudah diubah urutannya agar tidak berkorelasi satu sama lain, seperti di [contoh ini] (https://stats.stackexchange.com/questions/326305/i-ran-the-durbinwatsontest-in-r-and-got-p-value-0-for-non-time-series-data-is).\n\n4.3.1 Prosedur Eksploratif\n\n4.3.1.1 Plot residual vs order\nMemeriksa adanya autokorelasi secara eksploratif dilakukan dengan melihat plot antara sisaan dengan urutan waktu (plot of residuals in time sequence). Akan diteliti tren dari plot tersebut - menyebar secara acak atau tidak berpola apapun. Dapat juga melihat pola plot of residual versus order, khususnya apakah plot tersebut stasioner. Implementasi plotting tersebut di R adalah:\n\n\nCode\nresi <- residuals(object = aovRAKL) #ambil residual\n# Plot Sisaan vs Order  \nplot(resi, type = 'o'); abline(h = 0, col = 'red')\n\n\n\n\n\nDari gambar plot sisaan vs order (plot of residual versus order) terlihat membentuk trend yang datar atau hampir datar sehingga asumsi galat percobaan saling bebas terpenuhi. Namun, titik tersebar membangun pola melebar atau menyempit (bentuk terompet) sehingga data mempunyai pola yang tidak stasioner.\n\n\n4.3.1.2 ACF dan PACF\nSelain plot tersebut, dapat dilihat plot autokorelasi (ACF) dan plot autokorelasi parsial (PACF). Lag adalah beda urutan suatu sisaan dengan sisaan sebelumnya. Misal, lag 2 berarti tiap sisaan dibandingkan dengan sisaan dua observasi sebelumnya. Jika garis vertikal di tiap lag lebih tinggi dari garis biru horizontal, maka dianggap terjadi autokorelasi di lag tersebut.\n\n\nCode\nacf(resi)\n\n\n\n\n\nPlot korelasi parsial mengeluarkan pengaruh dari lag-lag lain. Aturan keputuasan dari plot tersebut sama dengan plot ACF:\n\n\nCode\npacf(resi)\n\n\n\n\n\nLag nol di plot ACF dapat diabaikan karena korelasi antara observasi dengan dirinya sendiri pasti satu. Namun, terlihat bahwa di beberapa lag bukan nol garis vertikal melewati garis horizontal sehingga dapat disimpulkan bahwa galat tidak bebas.\n\n\n\n4.3.2 Uji formal untuk galat percobaan saling bebas\nUji formal untuk menentukan kebebasan galat percobaan menggunakan Runs Test (Uji Runtunan) dan Uji Durbin Watson.\n\n4.3.2.1 Uji Durbin-Watson\nUji formal yang sederhana yang biasa digunakan untuk mengecek autokorelasi adalah Uji Durbin Watson. Uji Durbin Watson hanya dapat menguji ketidakbebasan galat percobaan pada lag 1. Dalam uji tersebut, anggap bahwa sisaan ke-t adalah \\(e_{t}=\\rho e_{t-1}+v_{t}\\), di mana \\(v_{t}\\) merupakan komponen sisaan yang memenuhi asumsi kebebasan dan kehomogenan. Oleh karena itu, hipotesis yang diuji adalah:\n\\[\n\\begin{align}\nH_{0}&: \\rho=0\\\\\nH_{1}&: \\rho\\neq0\\\\\n\\end{align}\n\\]\nJika \\(e_{k}\\) adalah residual yang diurut berdasarkan urutan waktu, statistik Durbin-Watson adalah:\n\\[\nDW=\\frac{\\sum_{k=2}^n\\left(e_{k}-e_{k-1}\\right)^2}{\\sum_{k=1}^n e_{k}}\n\\]\nInterpretasi yang tepat dari nilai statistik uji Durbin-Watson, jika dilakukan secara manual, cukup sulit. Sebaran tepat statistik uji Durbin Watson bergantung pada matriks peubah bebas X sehingga tidak ada satu tabel yang mengandung nilai kritis statistik Durbin Watson. Jika tidak ada autokorelasi, DW berada di sekitar 2. Autokorelasi positif akan membuat DW kurang dari 2, dan jika terdapat autokorelasi negatif maka nilai DW akan lebih besar dari 2.\nSebagai perhitungan kasar, autokorelasi terjadi ketika DW berada di luar rentang 1,5 sampai 2,5. Nilai tersebut cukup besar dalam melihat efek yang nyata pada teknik inferensi. Perhatikan bahwa DW sendiri acak dan mungkin di luar jangkauan 1,5 sampai 2,5 bahkan jika residual tidak berkorelasi. Untuk kumpulan data dengan amatan yang panjang dari perlakuan yang sama, ragam dari DW kurang dari 4/N.\nNamun, implementasi uji Durbin-Watson di berbagai software statistika, termasuk R, dapat diinterpretasikan dengan mudah karena software tersebut dapat menghitung sebaran statistik uji Durbin Watson secara eksak. Matriks peubah bebas X dapat menjadi input software dan p-value eksak dapat dikeluarkan oleh software tersebut. Uji Durbin-Watson dapat diimplentasikan melalui package lmtest atau car.\n\n\nCode\nlibrary(lmtest)\nlibrary(car)\nlmtest::dwtest(aovRAKL,alternative=\"two.sided\", iter=15, tol=1e-10) #H1: rho tak sama dengan nol\n\n\n\n    Durbin-Watson test\n\ndata:  aovRAKL\nDW = 1.8764, p-value = 0.04881\nalternative hypothesis: true autocorrelation is not 0\n\n\nCode\n#iter=iterasi algoritma pan, tol=toleransi\ndwtest(aovRAKL,alternative=\"greater\") #H1: rho lebih dari nol\n\n\n\n    Durbin-Watson test\n\ndata:  aovRAKL\nDW = 1.8764, p-value = 0.02441\nalternative hypothesis: true autocorrelation is greater than 0\n\n\nCode\ndwtest(aovRAKL,alternative=\"less\") #H1: rho kurang dari nol\n\n\n\n    Durbin-Watson test\n\ndata:  aovRAKL\nDW = 1.8764, p-value = 0.9756\nalternative hypothesis: true autocorrelation is less than 0\n\n\nCode\ncar::durbinWatsonTest(aovRAKL)\n\n\n lag Autocorrelation D-W Statistic p-value\n   1      0.04019671      1.876365   0.034\n Alternative hypothesis: rho != 0\n\n\nLebih direkomendasikan menggunakan package lmtest karena p-value package lmtest lebih stabil. Ini terjadi karena algoritma “pan” yang digunakan package tersebut untuk mengatur p-value. Pada dasarnya, algoritma tersebut memastikan p-value konvergen (menuju ke) suatu nilai sehingga tidak berubah-ubah. Seperti dilihat di kode, toleransi telah di-set sehingga perubahan p-value dari satu iterasi ke iterasi selanjutnya lebih sedikit dari toleransi yang diinginkan. Dapat disimulasikan sebagai berikut:\n\n\nCode\ncarRes<-rep(0,10)\nlmtestRes<-rep(0,10)\nfor (i in seq(1,10)){\n  carRes[i]<-car::durbinWatsonTest(aovRAKL)$p\n  lmtestRes[i]<-lmtest::dwtest(aovRAKL,alternative=\"two.sided\")$p\n}\nknitr::kable(data.frame(car=carRes,lmtest=lmtestRes))\n\n\n\n\n\ncar\nlmtest\n\n\n\n\n0.058\n0.0488117\n\n\n0.052\n0.0488117\n\n\n0.046\n0.0488117\n\n\n0.036\n0.0488117\n\n\n0.054\n0.0488117\n\n\n0.040\n0.0488117\n\n\n0.054\n0.0488117\n\n\n0.050\n0.0488117\n\n\n0.046\n0.0488117\n\n\n0.038\n0.0488117\n\n\n\n\n\nCode\nmean(carRes)\n\n\n[1] 0.0474\n\n\nSeperti yang dapat dilihat, p-value dari library car sangat tidak stabil, sehingga mungkin saja keputusan uji berubah-ubah. Gunakan lmtest saja. Implementasi di python sebagai berikut:\n\n\nCode\nfrom statsmodels.stats.stattools import durbin_watson\n\n#perform Durbin-Watson test\ndurbin_watson(RAKL_lm.resid)\n\n\n1.8763649943450147\n\n\nImplementasi dari statsmodels tidak dapat memberikan p-value. Oleh karena itu, implementasi dari dwtest, dengan sintaks mirip lmtest dapat menjadi alternatif:\n\n\nCode\nfrom dwtest import dwtest\ndw,pval=dwtest(formula='Produksi~Perlakuan+Kelompok',data=RAKLpy,alternative=\"two_sided\",iterations=15,tol=1e-10)\nprint(\"p-value:\",pval,\"| DW:\",dw)\n\n\np-value: 0.03261757679080751 | DW: 1.8779282884437019\n\n\nNamun, sepertinya implementasi dwtest menghitung nilai statistik uji DW dengan kurang tepat - statistik uji tersebut sedikit berbeda dari keluaran statsmodels atau R. Dari keluaran di atas dapat dilihat bahwa pada uji Durbin Watson ini memiliki nilai p-value \\(< \\alpha = 0.05\\) maka Tolak \\(H_{0}\\), artinya cukup bukti untuk mengatakan bahwa ada autokorelasi. Oleh karena itu, karena autokorelasi seringkali menjadi penyebab ketidakbebasan pada galat maka asumsi galat percobaan saling bebas belum terpenuhi.\nUji Durbin-Watson memiliki beberapa kelemahan:\n\nSeperti yang dijelaskan sebelumnya, uji tersebut mengasumsikan autokorelasi pada lag 1 saja.\nUji tidak dapat digunakan dalam model autoregresif (memiliki peubah tak bebas dari periode sebelumnya)\nUji sensitif terhadap asumsi normalitas.\n\n\n\n4.3.2.2 Runs test\nOleh karena itu, dapat digunakan Runs test. Misal ada 15 data, maka jika nilai data naik dari nilai sebelumnya dinotasikan positif (+), dan sebaliknya dinotasikan negatif (-). Jika proses tersebut menghasilkan + + + + − − − + + + − − + + +, ada 5 run, 3 positif dan 2 negatif. Sebuah run merupakan kumpulan tanda positif atau negatif. Jumlah run tersebut menjadi statistik uji runs test, dengan implementasi di R berupa:\n\n\nCode\n# Run Test\n# H0 (null): The data was produced in a random manner.\n# Ha (alternative): The data was not produced in a random manner.\nlibrary(snpar)\n\n\n\nAttaching package: 'snpar'\n\n\nThe following object is masked from 'package:tseries':\n\n    runs.test\n\n\nCode\nruns.test(aovRAKL$residuals,exact=T,alternative =\"two.sided\") #exact=p-value tepat\n\n\n\n    Exact runs test\n\ndata:  aovRAKL$residuals\nRuns = 13, p-value = 0.6951\nalternative hypothesis: two.sided\n\n\nImplementasi di python dapat dilihat di sini.\nNilai p dari pengujian ini adalah 0.6951. Karena p-value lebih dari taraf nyata 0.05, maka tak tolak hipotesis nol. Hal ini menunjukkan belum cukup bukti untuk mengatakan bahwa data dihasilkan secara tidak acak.\n\n\n4.3.2.3 Autokorelasi dengan lag lebih dari 1: Breusch-Godfrey dan modifikasi Durbin-Watson\nSeperti dijelaskan sebelumnya, uji Durbin Watson hanya dapat menguji autokorelasi lag 1. Namun, terlihat di plot ACF dan PACF bahwa autokorelasi muncul di lag 2 dan 4. Alternatif sederhana untuk menguji hal tersebut adalah menambah order di fungsi uji Durbin Watson car:\n\n\nCode\ndurbinWatsonTest(aovRAKL,max.lag=2)\n\n\n lag Autocorrelation D-W Statistic p-value\n   1      0.04019671      1.876365   0.044\n   2     -0.36296687      2.584265   0.276\n Alternative hypothesis: rho[lag] != 0\n\n\nCode\ndurbinWatsonTest(aovRAKL,max.lag=4)\n\n\n lag Autocorrelation D-W Statistic p-value\n   1      0.04019671      1.876365   0.048\n   2     -0.36296687      2.584265   0.272\n   3     -0.41913635      2.582042   0.192\n   4     -0.06558390      1.720913   0.738\n Alternative hypothesis: rho[lag] != 0\n\n\nAtau, dapat digunakan uji Breusch-Godfrey. Pada dasarnya, dilakukan regresi residual dengan peubah bebas dan residual lag sebelumnya, lalu dihitung \\(R^2\\). Secara asimptotik, \\(nR^2\\sim\\chi^2_{p}\\). Implementasi uji tersebut di R:\n\n\nCode\nbgtest(aovRAKL,order=1)\n\n\n\n    Breusch-Godfrey test for serial correlation of order up to 1\n\ndata:  aovRAKL\nLM test = 0.084631, df = 1, p-value = 0.7711\n\n\nCode\nbgtest(aovRAKL,order=2)\n\n\n\n    Breusch-Godfrey test for serial correlation of order up to 2\n\ndata:  aovRAKL\nLM test = 7.5086, df = 2, p-value = 0.02342\n\n\nCode\nbgtest(aovRAKL,order=4)\n\n\n\n    Breusch-Godfrey test for serial correlation of order up to 4\n\ndata:  aovRAKL\nLM test = 17.379, df = 4, p-value = 0.001631\n\n\nUji tersebut tak menolak \\(H_{0}\\) di lag 1, tapi di lag selanjutnya uji tersebut menolak \\(H_{0}\\). Implementasi di Python:\n\n\nCode\nfrom  statsmodels.stats.diagnostic import acorr_breusch_godfrey\nbgstat,pbg,fstat,pf=acorr_breusch_godfrey(RAKL_lm,nlags=2)\nprint(\"Statistik uji:\", bgstat, \"| P-value:\", pbg)\n\n\nStatistik uji: 7.508563644839594 | P-value: 0.023417262324381103\n\n\nDiskusi mengenai kuasa uji autokorelasi dilakukan di Ulyanto (2020).\n\n\n\n4.3.3 Konsekuensi dari ketidakbebasan pada galat\n\nRagam dari rataan contoh bukan lagi (\\(\\frac{\\sigma^2}{n}\\)) pada data yang tidak saling bebas\n\nKetika galat tidak saling bebas tapi sebaliknya memenuhi asumsi, maka dugaan dari pengaruh perlakuan yang kita peroleh masih tak bias, dan KTG mendekati tak bias untuk menduga \\(\\sigma^2\\) ketika ukuran contah besar. Perbedaannya ialah ragam dari rataan tidak lagi \\(\\sigma^2\\) dibagi dengan ukuran sampel (\\(\\frac{\\sigma^2}{n}\\)). Ini berarti bahwa dugaan standar error untuk rataan perlakuan dan perbandingan perlakuan adalah dugaan yang bias, (apakah penyimpangannya terlalu besar atau kecil tergantung pada pola ketidaksalingbebasan pada galat), sehingga selang kepercayaan dan uji anova tidak akan memiliki laju kesalahan yang dibutuhkan. Uji-F pada ANOVA akan dipengaruhi oleh alasan yang sama.\n\nUji-F pada ANOVA kekar terhadap ketidakbebasan\n\nUji-F pada ANOVA kekar terhadap ketidakbebasan jika dipertimbangkan sebagai uji pengacakan. Artinya bahwa rataan di semua pengacakan yang mungkin, uji-F akan menolak hipotesis nol ketika hipotesis nol benar.Masalah yang lebih berat dapat muncul ketika tidak ada pengacakan pada suluruh ketidakbebasan. Misalnya, perlakuan mungkin diterapkan untuk unit-unit pada pengacakan. Tapi ketika respon-respon peralakuan diukur, diikuti oleh semua perlakuan dua unit, dan seterusnya. Penerapan pengacakan dari perlakuan untuk unit-unit tidak akan membantu, jika terdapat korelasi yang kuat pada pengukuran galat."
  },
  {
    "objectID": "04-Bab4.html#aditivitas",
    "href": "04-Bab4.html#aditivitas",
    "title": "4  Uji Asumsi",
    "section": "4.4 Aditivitas",
    "text": "4.4 Aditivitas\nRancangan-rancangan seperti RAKL dan RBSL mengasumsikan bahwa pengaruh perlakuan dan kelompok aditif - pengaruh tersebut tetap sama di semua kombinasi perlakuan dan kelompok. Sifat tersebut terlihat dari model linear untuk RAKL:\n\\[\ny_{ij}=\\mu+\\tau_{i}+\\beta_{j}+\\varepsilon_{ij}\n\\]\nTerlihat bahwa tidak ada interaksi \\((\\tau_{i}\\beta_{j})\\) antara perlakuan dan kelompok. Dalam kata lain, efek suatu kelompok dianggap sama di semua perlakuan. Jika asumsi tersebut tidak terpenuhi, dapat terlihat bahwa:\n\\[\nv_{ij}=\\lambda_{ij}+\\varepsilon_{ij}=y_{ij}-\\mu-\\tau_{i}-\\beta_{j}\n\\]\nAkan menjadi komponen galat. Ini berarti galat akan heterogen tergantung besaran interaksi di kelompok dan perlakuan tertentu, sehingga ragam galat tidak terduga dengan benar. Oleh karena uji-F menggunakan penduga ragam galat, hasil-hasil uji dapat misleading. Ada beberapa cari menguji asumsi ini.\n\n4.4.1 Plot Interaksi\nPlot interaksi sudah didiskusikan di Bab 2. Jika garis plot interaksi sejajar, asumsi keaditifan dianggap terpenuhi. Jika plot interaksi tidak sejajar, ada bukti untuk menduga bahwa asumsi keaditifan tidak terpenuhi. Sebagai contoh, plot interaksi ini:\n\n\nCode\nlibrary(ggplot2)\nggplot(DataRAKL, aes(x = Perlakuan, y = Produksi, colour = Kelompok)) + \n    geom_point(data = DataRAKL, aes(y = Produksi)) +\n    geom_line(data = DataRAKL, aes(y = Produksi, group = Kelompok)) + \n    theme_bw()\n\n\n\n\n\nMenandakan bahwa mungkin ada interaksi antara perlakuan dan kelompok karena garis plot interaksi tidak sejajar.\n\n\n4.4.2 Uji formal\nAsumsi aditivitas juga dapat diuji secara formal. Ada beberapa uji aditivitas yang dapat digunakan, antara lain uji Tukey, uji Mandel, uji Johnson-Graybill, uji Tussel, dan uji LBI (locally best invariant). Akan diberikan sintaks untuk tiap uji tersebut. Uji Tukey dan uji Tussel akan dijelaskan secara singkat. Filosofi inti dari uji Tukey mirip dengan uji Mandel, sedangkan filosofi uji Johnson-Graybill, Tussel, dan LBI juga saling mirip. Oleh karena itu, hanya akan diberikan penjelasan singkat mengenai uji Tukey dan Tussel. Referensi tambahan mengenai uji aditivitas dapat dilihat di Simeckova et al. (2018)\n\n4.4.2.1 Asumsi bentuk interaksi tertentu: uji Tukey\nJika kita menggunakan rancangan faktorial, di mana kombinasi perlakuan diulang sebanyakan \\(r\\) kali, uji-F untuk efek interaksi merupakan bagian dari ANOVA. Namun, derajat bebas galat di rancangan faktorial adalah \\(ab(n-1)\\), sedangkan \\(n=1\\) di RAKL - satu perlakuan hanya muncul sekali di tiap kelompok. Derajat bebas galat akan nol jika kita menggunakan cara tersebut.\nNamun, Uji Tukey pada dasarnya hanya menambahkan satu parameter \\(\\theta\\). Parameter tersebut hanya mengambil satu derajat bebas sehingga derajat bebas galat tidak menjadi nol. Akan dibandingkan model tanpa interaksi dengan model berbentuk:\n\\[\ny_{ij}=\\mu+\\tau_{i}+\\beta_{j}+\\theta\\tau_{i}\\beta_{j}+\\varepsilon_{ij}\n\\]\nDalam kata lain, penduga interaksi dalam uji Tukey berbentuk \\(\\lambda_{ij}=\\theta\\bar{y}_{i.}\\bar{y}_{.j}\\) - perkalian antara rata-rata perlakuan ke-i dan rata-rata kelompok ke-j, serta suaut konstanta. Oleh karena itu, hipotesis uji Tukey adalah:\n\\[\n\\begin{align}\nH_{0}&: \\theta=0 \\text{ (Model aditif)} \\\\\nH_{1}&: \\theta\\neq0 \\text{ (Model tak aditif)}\n\\end{align}\n\\]\nDengan statistik uji:\n\\[\n\\begin{align}\nS_{T}&=\\frac{KT_{interaksi}}{KTG} \\sim F_{(\\alpha,1,db_{g})}\\\\\nKT_{interaksi}&=JK_{interaksi}=\\frac{\\left[\\sum_{i=1}^t\\sum_{j=1}^r y_{ij}(\\bar{y}_{i.}-\\bar{y}_{..})(\\bar{y}_{.j}-\\bar{y}_{..})\\right]^2}{\\sum_{i=1}^t(\\bar{y}_{i.}-\\bar{y}_{..})^2\\sum_{j=1}^r(\\bar{y}_{.j}-\\bar{y}_{..})^2}\\\\\nJK_{P}&=r\\sum_{i=1}^t(\\bar{y}_{i.}-\\bar{y}_{..})^2\\\\\nJK_{K}&=t\\sum_{j=1}^r(\\bar{y}_{.j}-\\bar{y}_{..})^2\\\\\nJK_{T}&=\\sum_{i=1}^t\\sum_{j=1}^r(\\bar{y}_{ij}-\\bar{y}_{..})^2\\\\\nJK_{G}&=JK_{T}-JK_{P}-JK_{K}-JK_{interaksi}\\\\\nKT_{g}&=\\frac{JK_{G}}{db_{g}}=\\frac{JK_{G}}{(t-1)(r-1)-1}\n\\end{align}\n\\]\nNote, \\(db_{g}=(t-1)(r-1)-1\\) karena derajat bebas galat RAKL biasa berupa \\((t-1)(r-1)\\), tertapi satu derajat bebas diambil \\(\\theta\\). Untuk mengimplementasikan uji di R, data harus berbentuk matriks - dalam kata lain, tiap kelompok merupakan baris, dan tiap kolom merupakan perlakuan. Lalu, kolom kelompok harus tidak ada. Matriks hanya berisi data, dengan tiap baris menandakan kelompok dan kolom menandakan perlakuan.\n\n\nCode\nlibrary(reshape2)\nDataRAKLWide<-dcast(DataRAKL,Kelompok~Perlakuan,value.var=\"Produksi\") # (data, baris~kolom)\nY<-as.matrix(DataRAKLWide[-1]) #keluarkan kolom 1 (nama kelompok)\n\n\nLakukan uji:\n\n\nCode\nlibrary(additivityTests)\ntukey.test(Y,alpha=0.05) #alpha dapat dispesifikasi\n\n\n\nTukey test on 5% alpha-level:\n\nTest statistic: 9.213 \nCritival value: 4.543 \nThe additivity hypothesis was rejected.\n\n\nUji Tukey menolak \\(H_{0}\\), sehingga dapat disimpulkan \\(\\theta\\neq0\\) dan model tak aditif. Bandingkan dengan uji Mandel:\n\n\nCode\nmandel.test(Y,alpha=0.05)\n\n\n\nMandel test on 5% alpha-level:\n\nTest statistic: 4.316 \nCritival value: 3.739 \nThe additivity hypothesis was rejected.\n\n\nUji tersebut juga menolak \\(H_{0}\\).\n\n\n4.4.2.2 Uji dari akar ciri: Tussel, LBI, Johnson-Graybill\nUji Tukey mengasumsikan bentuk interaksi tertentu. Namun, bisa saja bentuk interaksi antara kelompok dan perlakuan lebih kompleks dari yang diberikan uji Tukey. Dalam kasus ini, kuasa uji (probabilitas menolak \\(H_{0}\\) jika \\(H_{1}\\) benar) dari uji Tukey dan Mandel relatif lebih rendah.\nKetiga uji ini muncul dari mengkaji matriks residual \\(R\\), di mana elemen matriks tersebut adalah:\n\\[\nr_{ij}=y_{ij}-\\bar{y}_{i.}-\\bar{y}_{.j}+\\bar{y}_{..}\n\\]\nLalu, matriks tersebut akan dikali dengan transposenya, \\(RR^{T}\\) dan akan dicari akar ciri matriks tersebut. Akar ciri diurutkan sehingga \\(k_{1}\\geq k_{2}\\geq ... \\geq k_{n}\\). Lalu, tiap akar ciri dibagi dengan jumlah total akar ciri, sehingga \\(\\omega_{i}=k_{1}/\\sum_{i=1}^n k_{i}\\). Jika ada interaksi, beberapa \\(\\omega_{i}\\) akan lebih besar dari yang lainnya. Statistik uji Johnson-Graybill merupakan akar ciri terstandarisasi terbesar \\(\\omega_{1}\\). Statistik uji Tussel dan LBI mencari m jumlah akar ciri, di mana jumlah tersebut adalah \\(min(r,t)-1\\). Maka, dicari jumlah yang terkecil dari jumlah perlakuan atau jumlah kelompok. Angka tersebut dikurangi satu dan diambil m akar ciri sebanyak jumlah tersebut. LBI menambahkan akar ciri tersebut sedangkan Tussel mengalikan akar ciri. Johnson Graybill dan LBI menolak \\(H_{0}\\) jika statistik ujinya lebih besar dari nilai kritis. Uji Tussel menolak \\(H_{0}\\) jika statistik ujinya lebih kecil dari nilai kritis. Implementasi uji di R:\n\n\nCode\njohnson.graybill.test(Y)\n\n\n\nJohnson and Graybill test on 5% alpha-level:\n\nTest statistic: 0.7262 \nCritival value: 0.8799 \nThe additivity hypothesis cannot be rejected.\n\n\nCode\nlbi.test(Y)\n\n\n\nLocally Best Invariant test on 5% alpha-level:\n\nTest statistic: 0.6024 \nCritival value: 0.7797 \nThe additivity hypothesis cannot be rejected.\n\n\nCode\ntusell.test(Y)\n\n\n\nTusell test on 5% alpha-level:\n\nTest statistic: 0.1988 \nCritival value: 0.1089 \nThe additivity hypothesis cannot be rejected.\n\n\nDapat dilihat bahwa hasil uji Tukey dan Mandel berbeda dengan uji berdasarkan akar ciri. \\(\\alpha\\) sama - dalam kata lain, probabilitas menolak \\(H_{0}\\) jika \\(H_{0}\\) benar sama. Namun, kuasa uji berbeda. Jika bentuk interaksi sederhana (\\(\\theta\\tau_{i}\\beta_{j}\\)), uji Tukey dan Mandel memiliki kuasa lebih besar dari uji berdasarkan akar ciri. Namun, jika bentuk interaksi lebih kompleks, uji akar ciri memiliki kuasa lebih besar.\nDalam kasus ini, dapat dilihat skenario-skenario tertentu. Jika interaksi kompleks, seharusnya uji Tukey dan Mandel cendurung taktolak \\(H_{0}\\) (karena kuasa uji lebih rendah) dan uji akar ciri cenderung menolak \\(H_{0}\\). Jika interaksi sederhana, seharusnya uji Tukey dan Mandel cenderung tolak \\(H_{0}\\) (karena kuasa uji lebih tinggi) dan uji akar ciri cenderung taktolak \\(H_{0}\\). Jika tidak ada interaksi, \\(\\alpha\\) sudah dibuat sama sehingga seharusnya tidak ada kecenderungan tertentu.\nKasus ini sepertinya sesuai dengan skenario interaksi sederhana. Oleh karena itu, hasil uji Tukey dan Mandel dapat lebih dipercaya. Selain itu, sudah ada plot interaksi yang memperkuat kepercayaan bahwa interaksi benar adanya.\nSebagai tambahan terakhir, implementasi uji Tukey di Python dapat dilihat di notebook Google Colab ini."
  },
  {
    "objectID": "05-Bab5.html",
    "href": "05-Bab5.html",
    "title": "5  Rancangan Faktorial",
    "section": "",
    "text": "Di kebanyakan aplikasi percangan percobaan, ada lebih dari satu faktor yang memengaruhi respon tertentu. Misal, produksi suatu petak tanah ditentukan oleh pemupukan, varietas yang ditanam, irigasi, dan lain-lain. Bahkan, pengujian pengaruh satu faktor belum tentu valid jika level faktor-faktor lain berbeda. Misal, dalam kondisi irigasi yang cukup, varietas yang berbeda akan memiliki produktivitas berbeda. Namun, irigasi yang tidak cukup akan menyebabkan semua varietas mati kekurangan air sehingga produksi semua varietas sama-sama nol. Contoh tersebut cukup ekstrim, tetapi intinya adalah respon merupakan akibat dari berbagai faktor secara simultan, tidak terpisah (interaksi). Belum tentu, misal, tambahan pemumpukan 1 \\(kg\\) selalu menambah produktivitas 1 \\(kg/ha\\) - efek tersebut mungkin lebih besar di kondisi tertentu (varietas yang reseptif pada pupuk, irigasi baik). Oleh karena itu, perlu rancangan percobaan dengan lebih dari satu faktor untuk beberapa aplikasi tertentu. Selain itu, semua kombinasi taraf faktor harus dicobakan, karena pengaruh taraf suatu faktor dapat berbeda-beda jika dipasangkan dengan taraf faktor lain yang berbeda.\nNote, hal ini berarti faktor-faktor harus bersilang, tidak bersarang. Jika level faktor tertentu hanya muncul saat faktor memiliki level tertentu juga, tidak dapat diuji semua kombinasi perlakuan. Jika saat kerapatan tanaman tinggi, misal, varietas tertentu tidak dapat ditanam, tidak mungkin dilakukan rancangan faktorial."
  },
  {
    "objectID": "05-Bab5.html#faktorial-ral",
    "href": "05-Bab5.html#faktorial-ral",
    "title": "5  Rancangan Faktorial",
    "section": "5.1 Faktorial RAL",
    "text": "5.1 Faktorial RAL\n\n5.1.1 Pembuatan bagan percobaan\nKarena perlakuan di suatu percobaan faktorial merupakan semua kombinasi taraf faktor yang diteliti, pembuatan bagan percobaan diawali dengan penjabaran taraf-taraf faktor tersebut. Lalu digunakan fungsi expand.grid dari package data.table untuk mengkombinasikan taraf-taraf faktor:\n\n\nCode\nlibrary(data.table)\ntrt1<-c(\"A\",\"B\",\"C\")\ntrt2<-c(\"D\",\"E\",\"F\")\nperlakuan<-data.frame(expand.grid(trt1,trt2)) #buat kombinasi\ncolnames(perlakuan)<-c(\"Faktor 1\", \"Faktor 2\") #penamaan faktor, berupa kosmetik\nknitr::kable(perlakuan)\n\n\n\n\n\nFaktor 1\nFaktor 2\n\n\n\n\nA\nD\n\n\nB\nD\n\n\nC\nD\n\n\nA\nE\n\n\nB\nE\n\n\nC\nE\n\n\nA\nF\n\n\nB\nF\n\n\nC\nF\n\n\n\n\n\nTerlihat bahwa tiap baris merupakan kombinasi unik dari taraf faktor satu dan dua. Jumlah baris juga tepat, yaitu \\(3 \\times 3=9\\). Lalu, kode bagi tiap kombinasi tersebut dapat diekstraksi dan dibuat. Tiap kombinasi dapat dikodekan dengan angka, atau dengan teks yang merupakan gabungan dari nama taraf faktor pertama dan kedua.\n\n\nCode\nperlakuan$kode<-seq(1,nrow(perlakuan)) #angka\nperlakuan$kode2<-paste(perlakuan$`Faktor 1`,perlakuan$`Faktor 2`,sep=\"\") #gabungan nama taraf; sep=pemisah -> \"\" berarti tak ada pemisah\nknitr::kable(perlakuan)\n\n\n\n\n\nFaktor 1\nFaktor 2\nkode\nkode2\n\n\n\n\nA\nD\n1\nAD\n\n\nB\nD\n2\nBD\n\n\nC\nD\n3\nCD\n\n\nA\nE\n4\nAE\n\n\nB\nE\n5\nBE\n\n\nC\nE\n6\nCE\n\n\nA\nF\n7\nAF\n\n\nB\nF\n8\nBF\n\n\nC\nF\n9\nCF\n\n\n\n\n\nLalu, buat saja bagan tersebut melalui design.crd (RAL) di library agricolae. Masukkan jumlah ulangan yang diinginkan juga. Akan ditunjukkan sepuluh unit percobaan pertama sebagai ilustrasi:\n\n\nCode\nlibrary(agricolae)\nbaganFRAL<-design.crd(trt=perlakuan$kode2,r=4,seed=16,serie=0)\n\n#akses output -> hasil design.crd$book\nknitr::kable(head(baganFRAL$book,n=10))\n\n\n\n\n\nplots\nr\nperlakuan$kode2\n\n\n\n\n1\n1\nAF\n\n\n2\n1\nCD\n\n\n3\n1\nBD\n\n\n4\n1\nCE\n\n\n5\n1\nCF\n\n\n6\n1\nAE\n\n\n7\n2\nAF\n\n\n8\n3\nAF\n\n\n9\n2\nCD\n\n\n10\n2\nCE\n\n\n\n\n\nDapat diverifikasi bahwa jumlah unit percobaan merupakan \\(9 \\times 4=36\\).\n\n\nCode\nnrow(baganFRAL$book)\n\n\n[1] 36\n\n\n\n5.1.1.1 Pengacakan edibble\nKarena rancangan pengendalian lingkungan berupa RAL, hanya ada satu jenis unit. Lalu, ada dua perlakuan di set_trts yang semuanya dialokasikan ke unit secara bersamaan. Oleh karena itu, tulis c(P1.,P2.) untuk menggabungkan kedua perlakuan, lalu allot_trts(c(P1.,P2.)~unit) untuk mengalokasikan semua kombinasi perlakuan tersebut ke unit.\n\n\nCode\nlibrary(edibble)\n\ndesFaktRAL<-design(name=\"Faktorial RAL\") %>%\n  set_units(unit=36) %>%\n  set_trts(P1.=trt1,\n           P2.=trt2) %>%\n  allot_trts(c(P1.,P2.) ~unit) %>%\n  assign_trts(\"random\", seed=420) %>% serve_table\n\nknitr::kable(head(desFaktRAL,n=10))\n\n\n\n\n\nunit\nP1.\nP2.\n\n\n\n\nunit1\nC\nE\n\n\nunit2\nB\nD\n\n\nunit3\nA\nE\n\n\nunit4\nC\nF\n\n\nunit5\nA\nD\n\n\nunit6\nC\nF\n\n\nunit7\nA\nD\n\n\nunit8\nB\nD\n\n\nunit9\nB\nF\n\n\nunit10\nA\nE\n\n\n\n\n\nLalu, plot-kan:\n\n\nCode\ndeggust::autoplot(desFaktRAL)\n\n\n\n\n\nBandingkan dengan default edibble:\n\n\nCode\nfac <- takeout(menu_factorial(trt = c(3, 3), r=4, seed=420))\nexamine_recipe(fac)\n\n\ndesign(\"Factorial Design\") %>%\n  set_units(unit = 36) %>%\n  set_trts(trt1 = 3,\n           trt2 = 3) %>%\n  allot_trts(~unit) %>%\n  assign_trts(\"random\", seed = 420) %>%\n  serve_table()\n\n\nCode\ndeggust::autoplot(fac)\n\n\n\n\n\nCara pembuatan dan plot sama di kedua kasus.\n\n\n\n5.1.2 Model Linear Aditif\nModel bagi faktorial RAL adalah sebagai berikut:\n\\[\ny_{ijk}=\\mu+\\alpha_i+\\beta_j+(\\alpha\\beta)_{ij}+\\varepsilon_{ijk}\n\\]\nDengan:\n\n\\(Y_{ijk}\\) adalah nilai pengamatan pada faktor A taraf ke-i dan faktor B taraf ke-j pada ulangan ke-k.\n\\(\\mu\\) adalah komponen aditif dari rataan umum.\n\\(\\alpha_i\\) adalah komponen aditif dari pengaruh faktor A pada taraf ke-i.\n\\(\\beta_j\\) adalah komponen aditif dari pengaruh faktor B pada taraf ke-j.\n\\((\\alpha\\beta)_{ij}\\) adalah komponen interaksi faktor A dan faktor B.\n\\(\\varepsilon_{ijk}\\sim N(0,\\sigma_\\varepsilon^2)\\) adalah komponen acak pada tiap pengamatan\n\nOleh karena itu, terdapat tiga hipotesis yang diuji, yaitu hipotesis mengenai pengaruh faktor A, pengaruh faktor B, dan pengaruh interaksi:\n$$\n\\[\\begin{aligned}\n&\\textbf{Pengaruh faktor A:}\\\\\nH_0&: \\alpha_1=\\cdots=\\alpha_a=0 \\\\\n&\\text{ (faktor A tidak berpengaruh pada respon yang diamati)}\\\\\nH_1&: \\text{paling sedikit ada satu i di mana }\\alpha_i\\neq0\\\\\n\\\\\n&\\textbf{Pengaruh faktor B:}\\\\\nH_0&: \\beta_1=\\cdots=\\beta_b=0 \\\\\n& \\text{ (faktor B tidak berpengaruh pada respon yang diamati)}\\\\\nH_1&: \\text{paling sedikit ada satu j di mana }\\beta_j\\neq0\\\\\n\\\\\n&\\textbf{Pengaruh interaksi:}\\\\\nH_0&: (\\alpha\\beta)_{11}=(\\alpha\\beta)_{12}=\\cdots=(\\alpha\\beta)_{ab}=0 \\\\\n& \\text{ (Interaksi faktor A dan B tidak berpengaruh pada respon yang diamati)}\\\\\nH_1&: \\text{paling sedikit ada sepasang } (i,j) \\text{ di mana }(\\alpha\\beta)_{ij}\\neq0\n\n\\end{aligned}\\]\n$$\nHipotesis tersebut diuji dengan uji-F, yang disimpulkan di tabel sidik ragam:\n\n\nCode\n  cat('\n  | Sumber Keragaman| db| JK| KT| F-hit|F(dbP,dbG)|\n  |------------:|-----------:|------------:|------------:|------------:|------------:|\n  |         A|         a-1|          JKA| JKP/dbA | KTA/KTG | |\n  |         B|         b-1|          JKB| JKB/dbB | KTB/KTG | |\n  |         A*B|         (a-1)(b-1)|          JKAB| JKAB/dbAB | KTAB/KTG | |\n  |          Galat|         ab(r-1)|         JKG| JKG/dbG | | |\n  |          Total|         abr-1|          JKT| | | |')\n\n\n\n  | Sumber Keragaman| db| JK| KT| F-hit|F(dbP,dbG)|\n  |------------:|-----------:|------------:|------------:|------------:|------------:|\n  |         A|         a-1|          JKA| JKP/dbA | KTA/KTG | |\n  |         B|         b-1|          JKB| JKB/dbB | KTB/KTG | |\n  |         A*B|         (a-1)(b-1)|          JKAB| JKAB/dbAB | KTAB/KTG | |\n  |          Galat|         ab(r-1)|         JKG| JKG/dbG | | |\n  |          Total|         abr-1|          JKT| | | |\n\n\nDi mana jumlah kuadrat tersebut dihitung dengan:\n\\[\n\\begin{align*}\nFK&=\\frac{y^2_{...}}{abr}\\\\\nJKT&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r\\left(y_{ijk}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r y_{ijk}^2-FK\\\\\nJKA&=\\sum_{i=1}^a\\left(\\bar{y}_{i..}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a \\frac{y_{i..}^2}{br}-FK\\\\\nJKB&=\\sum_{j=1}^b\\left(\\bar{y}_{.j.}-\\bar{y}_{...}\\right)^2=\\sum_{j=1}^b \\frac{y_{.j.}^2}{ar}-FK\\\\\nJKP&=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b \\frac{y_{ij.}^2}{r}-FK\\\\\nJKAB&=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{i..}-\\bar{y}_{.j.}+\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{...}\\right)^2-JKA-JKB\\\\\n&=JKP-JKB-JKA\\\\\nJKG&=JKP-JKT\n\\end{align*}\n\\]\n\n\n5.1.3 ANOVA dengan R\nAkan digunakan kasus berikut dari Mattjik dan Sumertajaya:\n\nBalai Karantina ingin mengetahui pengaruh pemberian fumigasi dengan berbagai dosis (0, 16, 32, 48, 64; \\(g/m^3\\)) dengan lama fumigasi yang berbeda (2 dan 4 jam) terhadap daya kecambah benih tomat. Metode perkecambahan yang digunakan adalah Growing on Test. Unit percobaan diasumsikan homogen.\n\nPertama, baca data terlebih dahulu:\n\n\nCode\nlibrary(googlesheets4)\n\nFact<-read_sheet(\"https://docs.google.com/spreadsheets/d/1HuYXEBHlpJCXY2v-XJfmiUoFSN05plULDE1T7E1vnPo/edit?usp=sharing\")\nknitr::kable(Fact)\n\n\n\n\n\nLamaFumigasi\nUlangan\nDosis Fumigan\n…4\n…5\n…6\n…7\n\n\n\n\nNA\nNA\n0\n16\n32\n48\n64\n\n\n2\n1\n96\n92\n92\n74\n50\n\n\n2\n2\n98\n88\n94\n74\n50\n\n\n2\n3\n94\n90\n84\n68\n54\n\n\n4\n1\n90\n88\n78\n0\n0\n\n\n4\n2\n94\n92\n82\n0\n0\n\n\n4\n3\n92\n94\n74\n0\n0\n\n\n\n\n\nTerlihat bahwa baris pertama merupakan taraf-taraf dari faktor dosis. Oleh karena itu, baris tersebut sebaiknya dihilangkan. Selain itu, kolom ketiga sampai terakhir hendak diberi nama sesuai dosis diberikan.\n\n\nCode\nFact<-read_sheet(\"https://docs.google.com/spreadsheets/d/1HuYXEBHlpJCXY2v-XJfmiUoFSN05plULDE1T7E1vnPo/edit?usp=sharing\")[-1,]\ncolnames(Fact)[seq(3,ncol(Fact))]<-seq(0,64,16)\n\n\nLalu, data tersebut dirubah ke format long di mana tiap baris menunjukkan unit percobaan individu, bukan kombinasi nama ulangan dan dosis fumigasi. Seperti biasa, id.vars merupakan pembeda individu di format wide awal (dalam kasus ini, tiap individu adalah kombinasi LamaFumigasi dan Ulangan). Lalu, value.vars merupakan kolom-kolom yang digabung menjadi satu, dalam kasus ini dosis-dosis dari 0 sampai 64.\n\n\nCode\nlibrary(reshape2)\n\nFact2<-melt(Fact,\n               #variabel yang membedakan tiap baris di tabulasi asli:\n               id.vars=c(\"LamaFumigasi\",\"Ulangan\"),\n               value.vars=seq(0,64,16),\n               value.name=\"Perkecambahan\")\ncolnames(Fact2)[3]<-\"Dosis\" #kolom ketiga akan disebut \"variable\"\n\n\nSetelah tabulasi data benar, pastikan tiap faktor sudah dibuat menjadi objek data yang benar; lakukan ANOVA dan lihat hasil:\n\n\nCode\nFact2$LamaFumigasi<-as.factor(Fact2$LamaFumigasi)\nFact2$Dosis<-as.factor(Fact2$Dosis)\naovFact<-aov(Perkecambahan~LamaFumigasi+Dosis+LamaFumigasi:Dosis,Fact2)\nsummary(aovFact)\n\n\n                   Df Sum Sq Mean Sq F value   Pr(>F)    \nLamaFumigasi        1   5713    5713   691.1  < 2e-16 ***\nDosis               4  25459    6365   769.9  < 2e-16 ***\nLamaFumigasi:Dosis  4   6258    1565   189.3 1.37e-15 ***\nResiduals          20    165       8                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nAnalisis di python dapat dilakukan dengan membaca CSV dan mengambil row ke-2 sampai akhir. Note bahwa indeks di Python dimulai dari 0, sehingga baris ke-2 dinotasikan dengan 1.\n\n\nCode\nimport pandas as pd\n\nfum=pd.read_csv(\"https://docs.google.com/spreadsheets/d/1HuYXEBHlpJCXY2v-XJfmiUoFSN05plULDE1T7E1vnPo/export?gid=0&format=csv\")\nfumn=fum.iloc[1:]\n\n\nLalu, ubah nama kolom:\n\n\nCode\nprint(fumn.columns)\n\n\nIndex(['LamaFumigasi', 'Ulangan', 'Dosis Fumigan', 'Unnamed: 3', 'Unnamed: 4',\n       'Unnamed: 5', 'Unnamed: 6'],\n      dtype='object')\n\n\nAmbil elemen pertama dan kedua (0, 1) - indexing di Python dimulai dari 0 dan berakhir di elemen \\(n-1\\) sehingga ambil elemen [0:2]. Elemen tersebut diubah menjadi list. Lalu tambahkan angka 0, 16, 32, 48, 64 kepada list tersebut. Lalu masukkan list tersebut ke kolom-kolom dataset:\n\n\nCode\nfumn.columns=list(fumn.columns[0:2])+[str(x) for x in range(0,80,16)]\nfumn.head()\n\n\n   LamaFumigasi  Ulangan   0  16  32  48  64\n1           2.0      1.0  96  92  92  74  50\n2           2.0      2.0  98  88  94  74  50\n3           2.0      3.0  94  90  84  68  54\n4           4.0      1.0  90  88  78   0   0\n5           4.0      2.0  94  92  82   0   0\n\n\nMelt data:\n\n\nCode\nFaktRALMelt=pd.melt(fumn, id_vars=['LamaFumigasi','Ulangan'], value_vars=[str(x) for x in range(0,80,16)])\n\n\nLakukan ANOVA. Gunakan * untuk mendapat interaksi, dan C() untuk membuat peubah kategorik:\n\n\nCode\nimport statsmodels.api as sm\n\n\nC:\\Users\\Acer\\AppData\\Local\\R\\win-library\\4.2\\reticulate\\python\\rpytools\\loader.py:39: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  module = _import(\nC:\\Users\\Acer\\AppData\\Local\\Programs\\Python\\PYTHON~2\\lib\\site-packages\\statsmodels\\compat\\pandas.py:65: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  from pandas import Int64Index as NumericIndex\n\n\nCode\nfrom statsmodels.formula.api import ols\n\nFaktRALlm= ols('value ~ C(LamaFumigasi)*C(variable)',data=FaktRALMelt)\nfitRAL=FaktRALlm.fit()\n\ntable = sm.stats.anova_lm(fitRAL) \nprint(table)\n\n\n                               df        sum_sq  ...           F        PR(>F)\nC(LamaFumigasi)               1.0   5713.200000  ...  691.112903  5.527620e-17\nC(variable)                   4.0  25459.200000  ...  769.935484  1.367358e-21\nC(LamaFumigasi):C(variable)   4.0   6258.133333  ...  189.258065  1.370943e-15\nResidual                     20.0    165.333333  ...         NaN           NaN\n\n[4 rows x 5 columns]\n\n\n\n\n5.1.4 Tabel dan Plot Interaksi\nSekarang, dapat dicari rata-rata pengaruh perlakuan di tiap kombinasi faktor A dan B. Fungsi yang akan digunakan adalah aggregate dari base R. Argumen pertama merupakan fungsi agregasi yang ingin dilakukan - sintaks ini mirip dengan aov atau lm (respon~perlakuan), argumen kedua merupakan faktor, dan argumen terakhir merupakan fungsi agregasi yang dipakai (dalam kasus ini, mean):\n\n\nCode\nknitr::kable(aggregate(Perkecambahan~Dosis+LamaFumigasi,data=Fact2,FUN=mean))\n\n\n\n\n\nDosis\nLamaFumigasi\nPerkecambahan\n\n\n\n\n0\n2\n96.00000\n\n\n16\n2\n90.00000\n\n\n32\n2\n90.00000\n\n\n48\n2\n72.00000\n\n\n64\n2\n51.33333\n\n\n0\n4\n92.00000\n\n\n16\n4\n91.33333\n\n\n32\n4\n78.00000\n\n\n48\n4\n0.00000\n\n\n64\n4\n0.00000\n\n\n\n\n\nLalu, buat tiap baris menjadi taraf faktor A (Lama Fumigasi), dan tiap kolom menjadi taraf faktor B. Gunakan fungsi dcast, dengan sintaks dcast(tabel, fungsi: baris~kolom, peubah respon).\n\n\nCode\nSumTab<-reshape2::dcast(aggregate(Perkecambahan~Dosis+LamaFumigasi,data=Fact2,FUN=mean),LamaFumigasi~Dosis,value.var=\"Perkecambahan\") #(tabel: agregasi, fungsi: baris~kolom)\nknitr::kable(SumTab)\n\n\n\n\n\nLamaFumigasi\n0\n16\n32\n48\n64\n\n\n\n\n2\n96\n90.00000\n90\n72\n51.33333\n\n\n4\n92\n91.33333\n78\n0\n0.00000\n\n\n\n\n\nLalu, tambahkan rerata tiap baris (rowMeans). Namun, kolom pertama (lama fumigasi) tidak merupakan peubah respon dan tidak diperhitungkan:\n\n\nCode\nSumTab$Rerata<-rowMeans(SumTab[,-1])\nknitr::kable(SumTab)\n\n\n\n\n\nLamaFumigasi\n0\n16\n32\n48\n64\nRerata\n\n\n\n\n2\n96\n90.00000\n90\n72\n51.33333\n79.86667\n\n\n4\n92\n91.33333\n78\n0\n0.00000\n52.26667\n\n\n\n\n\nLalu, tambahkan rerata per kolom:\n\n\nCode\nSumTab<-rbind(SumTab,colMeans(SumTab[,-1]))\n\n\nWarning in rbind(deparse.level, ...): number of columns of result, 7, is not a\nmultiple of vector length 6 of arg 2\n\n\nWarning in `[<-.factor`(`*tmp*`, ri, value = 94): invalid factor level, NA\ngenerated\n\n\nCode\nknitr::kable(SumTab)\n\n\n\n\n\nLamaFumigasi\n0\n16\n32\n48\n64\nRerata\n\n\n\n\n2\n96.00000\n90.00000\n90\n72.00000\n51.33333\n79.86667\n\n\n4\n92.00000\n91.33333\n78\n0.00000\n0.00000\n52.26667\n\n\nNA\n90.66667\n84.00000\n36\n25.66667\n66.06667\n94.00000\n\n\n\n\n\nTabel rata-rata perlakuan telah terbentuk. Tabel ini dapat digunakan untuk pembuatan plot interaksi secara manual. Di R, plot interaksi dibuat dengan:\n\n\nCode\ninteraction.plot(Fact2$Dosis, Fact2$LamaFumigasi, Fact2$Perkecambahan) #(faktor 1, faktor 2, respon)\n\n\n\n\n\nAtau, dapat dibuat plot interaksi melalui library phia. Library phia hanya menerima input berupa lm - ubah olah data menggunakan lm terlebih dahulu. Phia menyediakan tabel rata-rata perlakuan, serta dapat di-plotkan menjadi plot interaksi.\n\n\nCode\nlibrary(phia)\nmod<-lm(Perkecambahan~LamaFumigasi+Dosis+LamaFumigasi:Dosis,data=Fact2)\nim=interactionMeans(mod)\nknitr::kable(im) # tabel\n\n\n\n\n\nLamaFumigasi\nDosis\nadjusted mean\nstd. error\n\n\n\n\n2\n0\n96.00000\n1.659987\n\n\n4\n0\n92.00000\n1.659987\n\n\n2\n16\n90.00000\n1.659987\n\n\n4\n16\n91.33333\n1.659987\n\n\n2\n32\n90.00000\n1.659987\n\n\n4\n32\n78.00000\n1.659987\n\n\n2\n48\n72.00000\n1.659987\n\n\n4\n48\n0.00000\n1.659987\n\n\n2\n64\n51.33333\n1.659987\n\n\n4\n64\n0.00000\n1.659987\n\n\n\n\n\nCode\nplot(im) # plot\n\n\n\n\n\n\n\n5.1.5 Uji lanjut\nUji lanjut dapat dilakukan dengan library emmeans. Pada dasarnya, emmeans menghasilkan output yang mirip dengan uji lanjut seperti TukeyHSD:\n\n\nCode\nlibrary(emmeans)\nmarginal = emmeans(mod,~ LamaFumigasi:Dosis)\nknitr::kable(head(pairs(marginal,adjust=\"Tukey\"),n=5))\n\n\n\n\n\n\n\n\n\n\n\n\n\ncontrast\nestimate\nSE\ndf\nt.ratio\np.value\n\n\n\n\nLamaFumigasi2 Dosis0 - LamaFumigasi4 Dosis0\n4\n2.347576\n20\n1.703885\n0.1038913\n\n\n\n\n\nCode\nknitr::kable(head(TukeyHSD(aovFact, conf.level=.95)$`LamaFumigasi:Dosis`),n=5) #metode tukey, tapi bisa saja cara lain seperti bonferroni\n\n\n\n\n\n\ndiff\nlwr\nupr\np adj\n\n\n\n\n4:0-2:0\n-4.000000\n-12.31302\n4.313018\n0.7813125\n\n\n2:16-2:0\n-6.000000\n-14.31302\n2.313018\n0.2987279\n\n\n4:16-2:0\n-4.666667\n-12.97968\n3.646352\n0.6158480\n\n\n2:32-2:0\n-6.000000\n-14.31302\n2.313018\n0.2987279\n\n\n4:32-2:0\n-18.000000\n-26.31302\n-9.686982\n0.0000082\n\n\n2:48-2:0\n-24.000000\n-32.31302\n-15.686982\n0.0000001\n\n\n\n\n\nUrutan pengurangannya berbeda saja, sehingga hasil emmeans memiliki beda positif dan TukeyHSD memiliki beda negatif. Library multcomp memiliki output yang lebih rapi, yaitu langsung berupa pengelompokan:\n\n\nCode\nlibrary(multcomp)\n\n\nLoading required package: mvtnorm\n\n\nLoading required package: survival\n\n\nLoading required package: TH.data\n\n\nLoading required package: MASS\n\n\n\nAttaching package: 'TH.data'\n\n\nThe following object is masked from 'package:MASS':\n\n    geyser\n\n\nCode\nknitr::kable(cld(marginal,\nalpha=0.05,\nLetters=letters, \nadjust=\"tukey\"))\n\n\nNote: adjust = \"tukey\" was changed to \"sidak\"\nbecause \"tukey\" is only appropriate for one set of pairwise comparisons\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLamaFumigasi\nDosis\nemmean\nSE\ndf\nlower.CL\nupper.CL\n.group\n\n\n\n\n8\n4\n48\n0.00000\n1.659987\n20\n-5.21784\n5.21784\na\n\n\n10\n4\n64\n0.00000\n1.659987\n20\n-5.21784\n5.21784\na\n\n\n9\n2\n64\n51.33333\n1.659987\n20\n46.11549\n56.55117\nb\n\n\n7\n2\n48\n72.00000\n1.659987\n20\n66.78216\n77.21784\nc\n\n\n6\n4\n32\n78.00000\n1.659987\n20\n72.78216\n83.21784\nc\n\n\n3\n2\n16\n90.00000\n1.659987\n20\n84.78216\n95.21784\nd\n\n\n5\n2\n32\n90.00000\n1.659987\n20\n84.78216\n95.21784\nd\n\n\n4\n4\n16\n91.33333\n1.659987\n20\n86.11549\n96.55117\nd\n\n\n2\n4\n0\n92.00000\n1.659987\n20\n86.78216\n97.21784\nd\n\n\n1\n2\n0\n96.00000\n1.659987\n20\n90.78216\n101.21784\nd\n\n\n\n\n\nSelain itu, dapat diuji kontras orthogonal dari data ini. Karena hanya ada dua taraf untuk lama fumigasi, kontras hanya dapat dibuat untuk dosis. Misal dibuat kontras untuk membandingkan pengaruh ada dosis (dosis 0 vs lainnya), dosis rendah vs tinggi (16,32 vs 48,64), serta perbandingan antara dosis 16 vs 32 dan 48 vs 64:\n\n\nCode\nlevels(Fact2$Dosis)\n\n\n[1] \"0\"  \"16\" \"32\" \"48\" \"64\"\n\n\nCode\ncontrasts(Fact2$Dosis)<- cbind(c(1, -1/4, -1/4, -1/4,-1/4), c(0, 1/2,1/2, -1/2, -1/2), \n                              c(0, 1,-1, 0, 0), c(0,0,0,1,-1))\ncontrasts(Fact2$Dosis)\n\n\n    [,1] [,2] [,3] [,4]\n0   1.00  0.0    0    0\n16 -0.25  0.5    1    0\n32 -0.25  0.5   -1    0\n48 -0.25 -0.5    0    1\n64 -0.25 -0.5    0   -1\n\n\nCode\naovFact1<-aov(Perkecambahan~LamaFumigasi+Dosis+LamaFumigasi:Dosis,Fact2)\nsummary.aov(aovFact1,split=list(Dosis=list(\"0 vs ada\"=1,\"16,32 vs 48,64\"=2,\"16 vs 32\"=3,\"48 vs 64\"=4)))\n\n\n                                     Df Sum Sq Mean Sq F value   Pr(>F)    \nLamaFumigasi                          1   5713    5713  691.11  < 2e-16 ***\nDosis                                 4  25459    6365  769.93  < 2e-16 ***\n  Dosis: 0 vs ada                     1   5852    5852  707.91  < 2e-16 ***\n  Dosis: 16,32 vs 48,64               1  19154   19154 2316.96  < 2e-16 ***\n  Dosis: 16 vs 32                     1    133     133   16.13 0.000678 ***\n  Dosis: 48 vs 64                     1    320     320   38.75 4.43e-06 ***\nLamaFumigasi:Dosis                    4   6258    1565  189.26 1.37e-15 ***\n  LamaFumigasi:Dosis: 0 vs ada        1   1044    1044  126.33 4.28e-10 ***\n  LamaFumigasi:Dosis: 16,32 vs 48,64  1   4760    4760  575.83 3.25e-16 ***\n  LamaFumigasi:Dosis: 16 vs 32        1    133     133   16.13 0.000678 ***\n  LamaFumigasi:Dosis: 48 vs 64        1    320     320   38.75 4.43e-06 ***\nResiduals                            20    165       8                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nDapat juga dibuat polinomial orthogonal, dengan koefisien-koefisien sesuai yang ditentukan saat taraf faktor tersebut 4.\n\n\nCode\ncontrasts(Fact2$Dosis) <- cbind(c(-2, -1, 0, 1, 2), c(2, -1, -2, -1, 2),\n                                c(-1, 2, 0, -2, 1), c(1, -4, 6, -4, 1))\ncontrasts(Fact2$Dosis)\n\n\n   [,1] [,2] [,3] [,4]\n0    -2    2   -1    1\n16   -1   -1    2   -4\n32    0   -2    0    6\n48    1   -1   -2   -4\n64    2    2    1    1\n\n\nCode\naovFact2<-aov(Perkecambahan~LamaFumigasi+Dosis+LamaFumigasi:Dosis,Fact2)\nsummary.aov(aovFact2,split=list(Dosis=list(\"Linear\"=1,\"Kuadratik\"=2,\"Kubik\"=3,\"Kuartik\"=4)))\n\n\n                                Df Sum Sq Mean Sq  F value   Pr(>F)    \nLamaFumigasi                     1   5713    5713  691.113  < 2e-16 ***\nDosis                            4  25459    6365  769.935  < 2e-16 ***\n  Dosis: Linear                  1  21965   21965 2657.065  < 2e-16 ***\n  Dosis: Kuadratik               1   1312    1312  158.733 5.72e-11 ***\n  Dosis: Kubik                   1   1009    1009  122.008 5.79e-10 ***\n  Dosis: Kuartik                 1   1173    1173  141.937 1.54e-10 ***\nLamaFumigasi:Dosis               4   6258    1565  189.258 1.37e-15 ***\n  LamaFumigasi:Dosis: Linear     1   4234    4234  512.129 1.01e-15 ***\n  LamaFumigasi:Dosis: Kuadratik  1     27      27    3.318   0.0835 .  \n  LamaFumigasi:Dosis: Kubik      1   1480    1480  179.040 1.94e-11 ***\n  LamaFumigasi:Dosis: Kuartik    1    517     517   62.545 1.39e-07 ***\nResiduals                       20    165       8                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "05-Bab5.html#faktorial-rakl",
    "href": "05-Bab5.html#faktorial-rakl",
    "title": "5  Rancangan Faktorial",
    "section": "5.2 Faktorial RAKL",
    "text": "5.2 Faktorial RAKL\nJika kondisi unit percobaan tidak sepenuhnya homogen, dapat digunakan Faktorial RAKL. Sama seperti RAKL pada kasus satu faktor, tiap perlakuan diacak dan diulang sekali di tiap kelompok.\n\n5.2.1 Pengacakan\nPertama, buat tiap kombinasi perlakuan:\n\n\nCode\nlibrary(data.table)\n\nvari<-c(\"V1\",\"V2\",\"V3\")\npupu<-c(\"N0\",\"N1\",\"N2\",\"N3\")\nKLperlakuan<-expand.grid(vari,pupu) #buat kombinasi\ncolnames(KLperlakuan)<-c(\"Varietas\",\"Pupuk\") #ubah nama kolom\nknitr::kable(KLperlakuan)\n\n\n\n\n\nVarietas\nPupuk\n\n\n\n\nV1\nN0\n\n\nV2\nN0\n\n\nV3\nN0\n\n\nV1\nN1\n\n\nV2\nN1\n\n\nV3\nN1\n\n\nV1\nN2\n\n\nV2\nN2\n\n\nV3\nN2\n\n\nV1\nN3\n\n\nV2\nN3\n\n\nV3\nN3\n\n\n\n\n\nLalu, beri penomoran bagi tiap kombinasi perlakuan tersebut:\n\n\nCode\nKLperlakuan$Nomor<-paste(KLperlakuan$Varietas,KLperlakuan$Pupuk,sep=\"\")\nknitr::kable(KLperlakuan)\n\n\n\n\n\nVarietas\nPupuk\nNomor\n\n\n\n\nV1\nN0\nV1N0\n\n\nV2\nN0\nV2N0\n\n\nV3\nN0\nV3N0\n\n\nV1\nN1\nV1N1\n\n\nV2\nN1\nV2N1\n\n\nV3\nN1\nV3N1\n\n\nV1\nN2\nV1N2\n\n\nV2\nN2\nV2N2\n\n\nV3\nN2\nV3N2\n\n\nV1\nN3\nV1N3\n\n\nV2\nN3\nV2N3\n\n\nV3\nN3\nV3N3\n\n\n\n\n\nDari tiap perlakuan tersebut, lakukan pengacakan di tiap kelompok. Di R, ini dilakukan dengan design.rcbd dari agricolae:\n\n\nCode\nlibrary(agricolae)\n\nbaganFakt_RAKL<-design.rcbd(KLperlakuan$Nomor,3,seed=78) #kombinasi perlakuan, jml kelompok\nknitr::kable(baganFakt_RAKL$sketch)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nV1N3\nV2N3\nV2N2\nV2N0\nV2N1\nV1N1\nV3N0\nV3N2\nV3N1\nV1N0\nV3N3\nV1N2\n\n\nV2N3\nV3N2\nV1N0\nV1N1\nV3N0\nV1N3\nV2N2\nV2N1\nV3N1\nV1N2\nV3N3\nV2N0\n\n\nV3N0\nV3N2\nV2N3\nV2N1\nV2N2\nV1N0\nV2N0\nV1N2\nV3N1\nV1N3\nV3N3\nV1N1\n\n\n\n\n\n\n5.2.1.1 Pengacakan edibble\nPada dasarnya, struktur perlakuan akan sama, tetapi struktur unit dibuat sesuai dengan RAKL, yaitu membuat unit kelompok dan petak yang nested_in(kelompok). Perlakuan masih diacak ke petak (unit):\n\n\nCode\ndesFaktRAKL<-design(name=\"Faktorial RAKL\") %>%\n  set_units(kelompok=3,\n            petak=nested_in(kelompok, 12)) %>%\n  set_trts(varietas=vari,\n           pupuk=pupu) %>%\n  allot_trts(c(varietas,pupuk)~petak) %>%\n  assign_trts(\"random\", seed=420) %>% serve_table\n\nknitr::kable(head(desFaktRAKL,n=10))\n\n\n\n\n\nkelompok\npetak\nvarietas\npupuk\n\n\n\n\nkelompok1\npetak1\nV3\nN0\n\n\nkelompok1\npetak2\nV1\nN1\n\n\nkelompok1\npetak3\nV3\nN3\n\n\nkelompok1\npetak4\nV2\nN0\n\n\nkelompok1\npetak5\nV1\nN0\n\n\nkelompok1\npetak6\nV1\nN2\n\n\nkelompok1\npetak7\nV2\nN2\n\n\nkelompok1\npetak8\nV2\nN3\n\n\nkelompok1\npetak9\nV1\nN3\n\n\nkelompok1\npetak10\nV2\nN1\n\n\n\n\n\nPlot dari rancangan tersebut dapat dilihat:\n\n\nCode\ndeggust::autoplot(desFaktRAKL)\n\n\n\n\n\n\n\n\n5.2.2 Model Linear Aditif\nModel bagi faktorial RAL adalah sebagai berikut:\n\\[\ny_{ijk}=\\mu+\\alpha_i+\\beta_j+(\\alpha\\beta)_{ij}+\\rho_k+\\varepsilon_{ijk}\n\\]\nDengan:\n\n\\(Y_{ijk}\\) adalah nilai pengamatan pada faktor A taraf ke-i dan faktor B taraf ke-j pada ulangan ke-k.\n\\(\\mu\\) adalah komponen aditif dari rataan umum.\n\\(\\alpha_i\\) adalah komponen aditif dari pengaruh faktor A pada taraf ke-i.\n\\(\\beta_j\\) adalah komponen aditif dari pengaruh faktor B pada taraf ke-j.\n\\((\\alpha\\beta)_{ij}\\) adalah komponen interaksi faktor A dan faktor B.\n\\(\\rho_k\\) adalah pengaruh aditif dari kelompok dan diasumsikan tidak berinteraksi dengan perlakuan (bersifat aditif) / pengaruh kelompok ke-k\n\\(\\varepsilon_{ijk}\\sim N(0,\\sigma_\\varepsilon^2)\\) adalah komponen acak pada tiap pengamatan\n\nOleh karena itu, terdapat empat hipotesis yang diuji, yaitu hipotesis mengenai pengaruh faktor A, pengaruh faktor B, pengaruh interaksi, dan pengaruh kelompok:\n$$ \\[\\begin{align*}\n&\\textbf{Pengaruh faktor A:}\\\\\nH_0&: \\alpha_1=\\cdots=\\alpha_a=0 \\\\\n&\\text{ (faktor A tidak berpengaruh pada respon yang diamati)}\\\\\nH_1&: \\text{paling sedikit ada satu i di mana }\\alpha_i\\neq0\\\\\n\\\\\n&\\textbf{Pengaruh faktor B:}\\\\\nH_0&: \\beta_1=\\cdots=\\beta_b=0 \\\\\n&\\text{ (faktor B tidak berpengaruh pada respon yang diamati)}\\\\\nH_1&: \\text{paling sedikit ada satu j di mana }\\beta_j\\neq0\\\\\n\\\\\n&\\textbf{Pengaruh interaksi:}\\\\\nH_0&: (\\alpha\\beta)_{11}=(\\alpha\\beta)_{12}=\\cdots=(\\alpha\\beta)_{ab}=0 \\\\\n&\\text{ (Interaksi faktor A dan B tidak berpengaruh pada respon yang diamati)}\\\\\nH_1&: \\text{paling sedikit ada sepasang } (i,j) \\text{ di mana }(\\alpha\\beta)_{ij}\\neq0\\\\\n\\\\\n&\\textbf{Pengaruh pengelompokan:}\\\\\nH_0&: \\rho_1=\\cdots=\\rho_r=0 \\\\&\n\\text{ (blok tidak berpengaruh pada respon yang diamati)}\\\\\nH_1&: \\text{paling sedikit ada satu k di mana }\\rho_k\\neq0\\\\\n\\\\\n\n\n\\end{align*}\\] $$\nHipotesis tersebut diuji dengan uji-F, yang disimpulkan di tabel sidik ragam:\n\n\n\n\n\n\n\n\n\n\n\nSumber Keragaman\ndb\nJK\nKT\nF-hit\nF(dbP,dbG)\n\n\n\n\nA\na-1\nJKA\nJKP/dbA\nKTA/KTG\n\n\n\nB\nb-1\nJKB\nJKB/dbB\nKTB/KTG\n\n\n\nA*B\n(a-1)(b-1)\nJKAB\nJKAB/dbAB\nKTAB/KTG\n\n\n\nBlok\n(r-1)\nJKK\nJKK/dbK\n\n\n\n\nGalat\n(ab-1)(r-1)\nJKG\nJKG/dbG\n\n\n\n\nTotal\nabr-1\nJKT\n\n\n\n\n\n\nJumlah kuadrat tersebut dihitung dengan:\n\\[\n\\begin{align*}\nFK&=\\frac{y^2_{...}}{abr}\\\\\nJKT&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r\\left(y_{ijk}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r y_{ijk}^2-FK\\\\\nJKA&=\\sum_{i=1}^a\\left(\\bar{y}_{i..}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a \\frac{y_{i..}^2}{br}-FK\\\\\nJKB&=\\sum_{j=1}^b\\left(\\bar{y}_{.j.}-\\bar{y}_{...}\\right)^2=\\sum_{j=1}^b \\frac{y_{.j.}^2}{ar}-FK\\\\\nJKP&=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b \\frac{y_{ij.}^2}{r}-FK\\\\\nJKAB&=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{i..}-\\bar{y}_{.j.}+\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{...}\\right)^2-JKA-JKB\\\\\n&=JKP-JKB-JKA\\\\\nJKK&=\\sum_{k=1}^r \\left(\\bar{y}_{..k}-\\bar{y}_{...}\\right)^2=\\sum_{k=1}^r \\frac{y_{..k}^2}{ab}-FK\\\\\nJKG&=JKP-JKK-JKT\n\\end{align*}\n\\]\n\n\n5.2.3 ANOVA dengan R\n\nSeorang peneliti akan melakukan percobaan pada sebuah tanaman dengan mengamati pertumbuhan tinggi tanaman di sebuah green house. Tanaman diberikan 2 jenis perlakuan yang pertama adalah jenis varietas yang terdiri dari Varietas 1(V1), Varietas 2(V2), dan Varietas 3(V3) dan perlakuan kedua adalah dosis pupuk terdiri dari N1, N2, N3, N4, N5. Percobaan ini dilakukan di 3 spot berbeda. Rancangan apakah yang sebaiknya digunakan peneliti? Bagaimana alur percobaan jika dilakukan sesuai rancangan yang anda sarankan? Lalu uji apakah perlakuan yang dicobakan berpengaruh signifikan, jika didapatkan data seperti dibawah ini?\n\nKarena percobaan dilakukan di tiga spot berebeda, maka rancangan adalah faktorial RAKL. Ambil data:\n\n\nCode\nlibrary(googlesheets4)\n\nFactRAKL<-read_sheet(\"https://docs.google.com/spreadsheets/d/1PqOsMGjb6aBwF-3NsWxsXk3-eevUJBq6sGMGHMLct-A/edit?usp=sharing\")\nknitr::kable(FactRAKL)\n\n\n\n\n\nVarietas\nkelompok\nN1\nN2\nN3\nN4\nN5\n\n\n\n\nV1\n1\n0.9\n1.2\n1.3\n1.8\n1.1\n\n\nV1\n2\n0.9\n1.3\n1.5\n1.9\n1.4\n\n\nV1\n3\n1.0\n1.2\n1.4\n2.1\n1.2\n\n\nV2\n1\n0.9\n1.1\n1.3\n1.6\n1.9\n\n\nV2\n2\n0.8\n0.9\n1.5\n1.3\n1.6\n\n\nV2\n3\n0.8\n0.9\n1.1\n1.1\n1.5\n\n\nV3\n1\n0.9\n1.4\n1.3\n1.4\n1.2\n\n\nV3\n2\n1.0\n1.2\n1.4\n1.5\n1.1\n\n\nV3\n3\n0.7\n1.0\n1.4\n1.4\n1.3\n\n\n\n\n\nLalu, melt data frame tersebut. Seperti biasa, id.vars merupakan pembeda individu di format wide yang menjadi bentuk awal data frame (dalam kasus ini, tiap individu adalah kombinasi Varietas dan Kelompok). Lalu, value.vars merupakan kolom-kolom yang digabung menjadi satu, dalam kasus ini pupuk dari N1 sampai N5.\n\n\nCode\nlibrary(reshape2)\n\nFactRAKL2<-melt(FactRAKL,\n               #variabel yang membedakan tiap baris di tabulasi asli:\n               id.vars=c(\"Varietas\",\"kelompok\"),\n               value.vars=c(\"N1\",\"N2\",\"N3\",\"N4\",\"N5\"),\n               value.name=\"Tinggi\")\ncolnames(FactRAKL2)[3]<-\"Pupuk\" #kolom ketiga akan disebut \"variable\"\nknitr::kable(FactRAKL2)\n\n\n\n\n\nVarietas\nkelompok\nPupuk\nTinggi\n\n\n\n\nV1\n1\nN1\n0.9\n\n\nV1\n2\nN1\n0.9\n\n\nV1\n3\nN1\n1.0\n\n\nV2\n1\nN1\n0.9\n\n\nV2\n2\nN1\n0.8\n\n\nV2\n3\nN1\n0.8\n\n\nV3\n1\nN1\n0.9\n\n\nV3\n2\nN1\n1.0\n\n\nV3\n3\nN1\n0.7\n\n\nV1\n1\nN2\n1.2\n\n\nV1\n2\nN2\n1.3\n\n\nV1\n3\nN2\n1.2\n\n\nV2\n1\nN2\n1.1\n\n\nV2\n2\nN2\n0.9\n\n\nV2\n3\nN2\n0.9\n\n\nV3\n1\nN2\n1.4\n\n\nV3\n2\nN2\n1.2\n\n\nV3\n3\nN2\n1.0\n\n\nV1\n1\nN3\n1.3\n\n\nV1\n2\nN3\n1.5\n\n\nV1\n3\nN3\n1.4\n\n\nV2\n1\nN3\n1.3\n\n\nV2\n2\nN3\n1.5\n\n\nV2\n3\nN3\n1.1\n\n\nV3\n1\nN3\n1.3\n\n\nV3\n2\nN3\n1.4\n\n\nV3\n3\nN3\n1.4\n\n\nV1\n1\nN4\n1.8\n\n\nV1\n2\nN4\n1.9\n\n\nV1\n3\nN4\n2.1\n\n\nV2\n1\nN4\n1.6\n\n\nV2\n2\nN4\n1.3\n\n\nV2\n3\nN4\n1.1\n\n\nV3\n1\nN4\n1.4\n\n\nV3\n2\nN4\n1.5\n\n\nV3\n3\nN4\n1.4\n\n\nV1\n1\nN5\n1.1\n\n\nV1\n2\nN5\n1.4\n\n\nV1\n3\nN5\n1.2\n\n\nV2\n1\nN5\n1.9\n\n\nV2\n2\nN5\n1.6\n\n\nV2\n3\nN5\n1.5\n\n\nV3\n1\nN5\n1.2\n\n\nV3\n2\nN5\n1.1\n\n\nV3\n3\nN5\n1.3\n\n\n\n\n\nSetelah tabulasi data benar, pastikan tiap faktor sudah dibuat menjadi objek data yang benar; lakukan ANOVA dan lihat hasil:\n\n\nCode\nFactRAKL2$Varietas<-as.factor(FactRAKL2$Varietas)\nFactRAKL2$Pupuk<-as.factor(FactRAKL2$Pupuk)\nFactRAKL2$kelompok<-as.factor(FactRAKL2$kelompok)\naovFactRAKL<-aov(Tinggi~Varietas*Pupuk+kelompok,FactRAKL2)\nsummary(aovFactRAKL)\n\n\n               Df Sum Sq Mean Sq F value   Pr(>F)    \nVarietas        2 0.1693  0.0847   4.316   0.0232 *  \nPupuk           4 2.4902  0.6226  31.732 4.95e-10 ***\nkelompok        2 0.0640  0.0320   1.631   0.2138    \nVarietas:Pupuk  8 1.0151  0.1269   6.468 8.98e-05 ***\nResiduals      28 0.5493  0.0196                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nOperasi-operasi lanjutan, seperti uji asumsi, uji lanjut, ataupun pembuatan plot interaksi, dapat diadopsi dari contoh-contoh sebelumnya.\n\n\nCode\nSumTabRAKFakt<-reshape2::dcast(aggregate(Tinggi~Varietas+Pupuk,data=FactRAKL2,FUN=mean),Varietas~Pupuk,value.var=\"Tinggi\") #(tabel: agregasi, fungsi: baris~kolom)\nknitr::kable(SumTabRAKFakt)\n\n\n\n\n\nVarietas\nN1\nN2\nN3\nN4\nN5\n\n\n\n\nV1\n0.9333333\n1.2333333\n1.400000\n1.933333\n1.233333\n\n\nV2\n0.8333333\n0.9666667\n1.300000\n1.333333\n1.666667\n\n\nV3\n0.8666667\n1.2000000\n1.366667\n1.433333\n1.200000\n\n\n\n\n\nDan plot interaksinya:\n\n\nCode\nlibrary(phia)\nmod2<-lm(Tinggi~Varietas*Pupuk+kelompok,data=FactRAKL2)\nim2=interactionMeans(mod2)\nknitr::kable(head(im2),n=5) # tabel\n\n\n\n\n\nVarietas\nPupuk\nkelompok\nadjusted mean\nstd. error\n\n\n\n\nV1\nN1\n1\n0.9600000\n0.0860909\n\n\nV2\nN1\n1\n0.8600000\n0.0860909\n\n\nV3\nN1\n1\n0.8933333\n0.0860909\n\n\nV1\nN2\n1\n1.2600000\n0.0860909\n\n\nV2\nN2\n1\n0.9933333\n0.0860909\n\n\nV3\nN2\n1\n1.2266667\n0.0860909\n\n\n\n\n\nCode\nplot(im2) # plot\n\n\n\n\n\nTerlihat bahwa pengelompokan memenuhi asumsi tak ada interaksi."
  },
  {
    "objectID": "06-Bab6.html",
    "href": "06-Bab6.html",
    "title": "6  Rancangan Petak Terpisah (Split Plot Design)",
    "section": "",
    "text": "Dalam percobaan dua faktor, kombinasi perlakuan belum tentu diacak secara sempurna terhadap unit percobaan. Pengacakan sempurna berarti semua kombinasi perlakuan dibuat dan diacak pada semua unit percobaan (atau pada suatu blok di Split Plot RAKL). Dalam suatu rancangan split plot, pengacakan dilakukan bertahap. Petak utama diacak terlebih dahulu, lalu faktor yang ditempatkan sebagai anak petak diacak di tiap petak utama. Rancangan ini dipilih karena beberapa alasan:"
  },
  {
    "objectID": "06-Bab6.html#split-plot-ral",
    "href": "06-Bab6.html#split-plot-ral",
    "title": "6  Rancangan Petak Terpisah (Split Plot Design)",
    "section": "6.1 Split Plot RAL",
    "text": "6.1 Split Plot RAL\n\n6.1.1 Pengacakan\nPengacakan pada rancangan petak terpisah di R dapat langsung dilakukan menggunakan fungsi design.split dari library agricolae. Akan digunakan studi kasus berikut:\n\nDalam usaha menjaga kesehatan lingkungan dilakukan percobaan dengan menggunakan berbagai jenis tanaman untuk menyerap debu di udara. Jenis tanaman yang digunakan antara lain tanaman berdaun kecil licin (J1 dan J2), berdaun kecil kasar (J3, J4), berdaun lebar licin (J5, J6), berdaun lebar kasar (J7, J8), dan berdaun jarum (J9, J10). Percobaan ini dicobakan pada dua lokasi (Cipedak dan Gatot Subroto). Setiap perlakuan diulang 3 kali dan unit-unit percobaan yang digunakan diasumsikan homogen. Dari percobaan ini ingin diketahui jenis tanaman yang mampu menyerap debu paling efektif dan di lokasi mana? Peubah respons yang dicatat dari percobaan ini adalah konsentrasi debu (ppm) yang melekat pada daun tanaman.\n\nUntuk melakukan pengacakan, bangkitkan taraf kedua faktor terlebih dahulu:\n\n\nCode\nLokasi<-c(\"Cipedak\",\"Gatot S.\")\nJenis<-paste(\"J\",seq(10),sep=\"\")\n\n\nPengacakan secara cepat dapat dilakukan dengan menggunakan design.split dari library agricolae. Pastikan design berupa CRD (completely randomized design) jika menggunakan split plot RAL. Argumen fungsi diurutkan sebagai berikut karena lokasi merupakan petak utama, jenis anak petak, dan ada tiga ulangan.\n\n\nCode\nlibrary(agricolae)\n\nbagan<-design.split(Lokasi , Jenis,r=3, design=\"crd\",serie = 0,\n             seed = 0, kinds = \"Super-Duper\", first=TRUE,randomization=TRUE)$book #(utama, anak, ulangan)\nknitr::kable(head(bagan),n=10)\n\n\n\n\n\nplots\nsplots\nr\nLokasi\nJenis\n\n\n\n\n1\n1\n1\nGatot S.\nJ9\n\n\n1\n2\n1\nGatot S.\nJ4\n\n\n1\n3\n1\nGatot S.\nJ2\n\n\n1\n4\n1\nGatot S.\nJ5\n\n\n1\n5\n1\nGatot S.\nJ8\n\n\n1\n6\n1\nGatot S.\nJ10\n\n\n\n\n\nCode\nnrow(bagan)\n\n\n[1] 60\n\n\nBagan memiliki 60 baris, yang masuk akal karena \\(A\\times B\\times r=2\\times 10\\times 3=60\\), di mana faktor A adalah lokasi, B adalah jenis, dan r ulangan. Jika ingin lebih detail, dapat diperhatikan bahwa pengacakan split plot dapat dilakukan sebagai berikut:\n\nPengacakan RAL untuk plot utama, dengan unit percobaan berjumlah \\(A\\times r\\).\nRAKL dengan \\(A\\times r\\) blok, dengan \\(B\\) unit percobaan di blok tersebut.\n\nImplementasi di agricolae sebagai berikut:\n\n\nCode\nbagan1<-design.crd(Lokasi,r=3,serie=0)\nknitr::kable(bagan1$book)\n\n\n\n\n\nplots\nr\nLokasi\n\n\n\n\n1\n1\nCipedak\n\n\n2\n2\nCipedak\n\n\n3\n1\nGatot S.\n\n\n4\n2\nGatot S.\n\n\n5\n3\nCipedak\n\n\n6\n3\nGatot S.\n\n\n\n\n\nLalu, fase kedua dari pengacakan. Ada \\(2\\times 3=6\\) blok:\n\n\nCode\nbagan2<-design.rcbd(Jenis,r=6)\nknitr::kable(head(bagan2$book),n=10)\n\n\n\n\n\nplots\nblock\nJenis\n\n\n\n\n101\n1\nJ2\n\n\n102\n1\nJ5\n\n\n103\n1\nJ10\n\n\n104\n1\nJ3\n\n\n105\n1\nJ8\n\n\n106\n1\nJ1\n\n\n\n\n\nCode\nnrow(bagan2$book)\n\n\n[1] 60\n\n\nLakukan merge. Note bahwa tiap plot di pengacakan pertama akan menjadi blok, sehingga merge di x menggunakan plot dan di y menggunakan blok:\n\n\nCode\nbaganfin<-merge(bagan1$book,bagan2$book,by.x=\"plots\",by.y=\"block\")\nknitr::kable(head(baganfin),n=10)\n\n\n\n\n\nplots\nr\nLokasi\nplots.y\nJenis\n\n\n\n\n1\n1\nCipedak\n101\nJ2\n\n\n1\n1\nCipedak\n102\nJ5\n\n\n1\n1\nCipedak\n103\nJ10\n\n\n1\n1\nCipedak\n104\nJ3\n\n\n1\n1\nCipedak\n105\nJ8\n\n\n1\n1\nCipedak\n106\nJ1\n\n\n\n\n\nCode\nnrow(baganfin)\n\n\n[1] 60\n\n\nSehingga terbuat bagan final. Bagan tersebut dapat dilihat dengan beberapa format lain, seperti:\n\n\nCode\nbag2<-bagan[,-c(1,2)]\nknitr::kables(list(\n  knitr::kable(reshape2::dcast(bag2,Lokasi~Jenis)), #lokasi vs jenis (berapa jenis tertentu di lokasi tertentu)\n  knitr::kable(reshape2::dcast(bag2,Lokasi+r~Jenis)) #lokasi, ulangan vs jenis (bagan, tapi tabulasi format wide)\n ),\n caption=\"Dua cara menunjukkan bagan percobaan\"\n)\n\n\n\n\n\nDua cara menunjukkan bagan percobaan\n\n\n\n\n\n\n\nLokasi\nJ1\nJ10\nJ2\nJ3\nJ4\nJ5\nJ6\nJ7\nJ8\nJ9\n\n\n\n\nCipedak\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n\nGatot S.\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n\n\n\n\n\n\n\n\nLokasi\nr\nJ1\nJ10\nJ2\nJ3\nJ4\nJ5\nJ6\nJ7\nJ8\nJ9\n\n\n\n\nCipedak\n1\nJ1\nJ10\nJ2\nJ3\nJ4\nJ5\nJ6\nJ7\nJ8\nJ9\n\n\nCipedak\n2\nJ1\nJ10\nJ2\nJ3\nJ4\nJ5\nJ6\nJ7\nJ8\nJ9\n\n\nCipedak\n3\nJ1\nJ10\nJ2\nJ3\nJ4\nJ5\nJ6\nJ7\nJ8\nJ9\n\n\nGatot S.\n1\nJ1\nJ10\nJ2\nJ3\nJ4\nJ5\nJ6\nJ7\nJ8\nJ9\n\n\nGatot S.\n2\nJ1\nJ10\nJ2\nJ3\nJ4\nJ5\nJ6\nJ7\nJ8\nJ9\n\n\nGatot S.\n3\nJ1\nJ10\nJ2\nJ3\nJ4\nJ5\nJ6\nJ7\nJ8\nJ9\n\n\n\n\n\n\n\n\n\n\nHal tersebut dapat juga dilakukan dengan alternatif pengacakan dua fase:\n\n\nCode\nknitr::kable(cbind(bagan1$book,bagan2$sketch))\n\n\n\n\n\nplots\nr\nLokasi\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n\n1\n1\nCipedak\nJ2\nJ5\nJ10\nJ3\nJ8\nJ1\nJ9\nJ6\nJ7\nJ4\n\n\n2\n2\nCipedak\nJ1\nJ3\nJ4\nJ9\nJ2\nJ8\nJ7\nJ10\nJ6\nJ5\n\n\n3\n1\nGatot S.\nJ6\nJ2\nJ1\nJ9\nJ7\nJ10\nJ8\nJ3\nJ4\nJ5\n\n\n4\n2\nGatot S.\nJ10\nJ4\nJ7\nJ2\nJ6\nJ5\nJ9\nJ8\nJ3\nJ1\n\n\n5\n3\nCipedak\nJ6\nJ9\nJ1\nJ5\nJ4\nJ8\nJ3\nJ10\nJ2\nJ7\n\n\n6\n3\nGatot S.\nJ3\nJ4\nJ2\nJ9\nJ7\nJ1\nJ6\nJ5\nJ10\nJ8\n\n\n\n\n\n\n6.1.1.1 Pengacakan edibble\nUntuk split plot RAL, dapat dibuat dua unit di set_units(). Pertama adalah petak utama, dan anak petak berupa unit yang nested_in() petak utama. Taraf lokasi diacak ke petak utama (lokasi~mainplot), dan jenis ke anak petak (jenis~unit):\n\n\nCode\nlibrary(edibble)\n\ndesSPRAL<-design(name=\"Lokasi dan Jenis vs. Penyerapan Debu\") %>%\n  set_units(mainplot=2,\n            unit=nested_in(mainplot, 10)) %>%\n  set_trts(lokasi=Lokasi,\n           jenis=Jenis) %>%\n  allot_trts(lokasi~mainplot,\n             jenis~unit) %>%\n  assign_trts(\"random\", seed=420) %>% serve_table\n\nknitr::kable(head(desSPRAL,n=10))\n\n\n\n\n\nmainplot\nunit\nlokasi\njenis\n\n\n\n\nmainplot1\nunit1\nGatot S.\nJ6\n\n\nmainplot1\nunit2\nGatot S.\nJ8\n\n\nmainplot1\nunit3\nGatot S.\nJ1\n\n\nmainplot1\nunit4\nGatot S.\nJ10\n\n\nmainplot1\nunit5\nGatot S.\nJ3\n\n\nmainplot1\nunit6\nGatot S.\nJ7\n\n\nmainplot1\nunit7\nGatot S.\nJ9\n\n\nmainplot1\nunit8\nGatot S.\nJ2\n\n\nmainplot1\nunit9\nGatot S.\nJ4\n\n\nmainplot1\nunit10\nGatot S.\nJ5\n\n\n\n\n\nPlot dari rancangan tersebut dapat dilihat:\n\n\nCode\ndeggust::autoplot(desSPRAL)\n\n\n\n\n\nEdibble juga dapat membuat rancangan split plot secara default:\n\n\nCode\nspd<-takeout(menu_split(t1 = 2, t2 = 10, r = 1, seed=420))\nexamine_recipe(spd)\n\n\ndesign(\"Split-Plot Design | Split-Unit Design\") %>%\n  set_units(mainplot = 2,\n             subplot = nested_in(mainplot, 10)) %>%\n  set_trts(trt1 = 2,\n           trt2 = 10) %>%\n  allot_trts(trt1 ~ mainplot,\n             trt2 ~ subplot) %>%\n  assign_trts(\"random\", seed = 420) %>%\n  serve_table()\n\n\nDapat dilihat bahwa cara pembuatan rancangan sama dengan yang dibuat sebelumnya. Plot juga sama:\n\n\nCode\ndeggust::autoplot(spd)\n\n\n\n\n\n\n\n\n6.1.2 ANOVA\nModel linear aditif bagi split plot RAL adalah:\n\\[\ny_{ijk} = \\mu + \\alpha_i + \\delta_{k(i)} + \\beta_j + (\\alpha\\beta)_{ij} + \\epsilon_{ijk}\n\\]\nDengan:\n\n\\(y_{ijk}\\) adalah nilai pengamatan pada faktor A taraf ke-i dan faktor B taraf ke-j pada ulangan ke-k.\n\\(\\mu\\) komponen aditif dari rataan umum.\n\\(\\alpha_i\\) pengaruh utama faktor A. Diasumsikan \\(\\sum_{i=1}^a \\alpha_i=0\\) bagi model tetap dan \\(\\alpha\\sim N(0,\\sigma_a^2)\\) bagi model acak.\n\\(\\beta_{j}\\) pengaruh utama faktor B. Diasumsikan \\(\\sum_{j=1}^b \\beta_j=0\\) bagi model tetap dan \\(\\beta\\sim N(0,\\sigma_b^2)\\) bagi model acak.\n\\((\\alpha\\beta)_{ij}\\) komponen interaksi faktor A dan faktor B. Diasumsikan \\(\\sum_{i=1}^p\\sum_{i=1}^t (\\alpha\\beta)_{ij}=0\\) bagi model tetap dan \\((\\alpha\\beta)_{ij}\\sim N(0,\\sigma_{ab}^2)\\) bagi model acak.\n\\(\\delta_{k(i)}\\sim N(0,\\sigma_{\\delta}^2)\\) komponen acak dari petak utama.\n\\(\\epsilon_{ijk}\\sim N(0,\\sigma^2)\\) komponen acak anak petak.\n\nDan hipotesis pengaruh petak utama, anak petak, dan interaksi.\n\\[\n\\begin{aligned}\n&\\text{Pengaruh petak utama (Faktor A)}:\\\\\nH_{0}&:\\alpha_{1}=\\ldots=\\alpha_{a}=0\\\\\n&\\text{ faktor A tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada satu i di mana }\\alpha_{i}\\neq 0\\\\\n\\\\\n&\\text{Pengaruh anak petak (Faktor B)}:\\\\\nH_{0}&:\\beta_{1}=\\ldots=\\beta_{b}=0\\\\\n&\\text{ faktor B tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada satu j di mana }\\beta_{j}\\neq 0\\\\\n\\\\\n&\\text{Pengaruh interaksi }:\\\\\nH_{0}&:(\\alpha\\beta)_{11}=(\\alpha\\beta)_{12}=\\ldots=(\\alpha\\beta)_{ab}=0\\\\\n& \\text{ interaksi tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada sepasang ij di mana }(\\alpha\\beta)_{ij}\\neq 0\\\\\n\\end{aligned}\n\\]\nDan tabel ANOVA:\n\n\n\n\n\n\n\n\n\n\n\nSumber Keragaman\ndb\nJK\nKT\nF-hit\nF(dbP,dbG)\n\n\n\n\nA\na-1\nJKA\nJKA/dbA\nKTA/KTGA\n\n\n\nGalat (a)\na(r-1)\nJKGA\nJKGA/dbGA\n\n\n\n\nB\n(b-1)\nJKB\nJKB/dbB\nKTB/KTGB\n\n\n\nAB\n(a-1)(b-1)\nJKAB\nJKAB/dbAB\nKTAB/KTGB\n\n\n\nGalat (b)\na(b-1)(r-1)\nJKGB\nJKGB/dbGB\n\n\n\n\nTotal\nabr-1\nJKT\n\n\n\n\n\n\nJumlah kuadrat tersebut dihitung dengan:\n\\[\n\\begin{aligned}\nFK&=\\frac{y^2_{...}}{abr}\\\\\nJKT&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r\\left(y_{ijk}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r y_{ijk}^2-FK\\\\\nJKST&=\\sum_{i=1}^a\\sum_{k=1}^r\\left(\\bar{y}_{i.K}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{k=1}^r \\frac{y_{i.k}^2}{b}-FK\\\\\nJKA&=\\sum_{i=1}^a\\left(\\bar{y}_{i..}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a \\frac{y_{i..}^2}{br}-FK\\\\\nJKG_{a}&=JKST-JKA\\\\\nJKB&=\\sum_{j=1}^b\\left(\\bar{y}_{.j.}-\\bar{y}_{...}\\right)^2=\\sum_{j=1}^b \\frac{y_{.j.}^2}{ar}-FK\\\\\nJKP&=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b \\frac{y_{ij.}^2}{r}-FK\\\\\nJKAB&=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{i..}-\\bar{y}_{.j.}+\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{...}\\right)^2-JKA-JKB\\\\\n&=JKP-JKB-JKA\\\\\nJKG_{b}&=JKT-JKP-JKG_{a}\n\\end{aligned}\n\\]\n\n\n6.1.3 Analisis menggunakan R\nAkses data:\n\n\nCode\nlibrary(googlesheets4)\nSPlot<-read_sheet(\"https://docs.google.com/spreadsheets/d/1CL0DZ8Ub_sTvDcj-jy_UR3P3KKY1vptEz1SapQ_yMpY/edit?usp=sharing\")\n\n\n! Using an auto-discovered, cached token.\n\n\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n\n\n  See gargle's \"Non-interactive auth\" vignette for more details:\n\n\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n\n\nℹ The googlesheets4 package is using a cached token for\n  'muh.ammarsahab@apps.ipb.ac.id'.\n\n\n✔ Reading from \"SplitPlots\".\n\n\n✔ Range 'Sheet1'.\n\n\nCode\nknitr::kable(head(SPlot),n=10)\n\n\n\n\n\nNo\nLokasi\nJenis\nUlangan\nKonsentrasi debu\n\n\n\n\n1\nCipedak\nJ1\n1\n0.0312\n\n\n2\nCipedak\nJ1\n2\n0.0317\n\n\n3\nCipedak\nJ1\n3\n0.0321\n\n\n4\nCipedak\nJ2\n1\n0.0270\n\n\n5\nCipedak\nJ2\n2\n0.0272\n\n\n6\nCipedak\nJ2\n3\n0.0277\n\n\n\n\n\nAkan dilakukan dua hal untuk membersihkan data. Pertama, satuan respon akan dikalikan 1000 karena satuan awalnya relatif kecil. Jika dikalikan 1000 jumlah kuadrat dan kuadrat tengah akan terlihat lebih jelas:\n\n\nCode\nSPlot$`Konsentrasi debu`<-SPlot$`Konsentrasi debu`*1000\n\n\nLalu, pastikan semua faktor telah menjadi… faktor:\n\n\nCode\nSPlot$Ulangan<-as.factor(SPlot$Ulangan)\nSPlot$Jenis<-as.factor(SPlot$Jenis)\nSPlot$Lokasi<-as.factor(SPlot$Lokasi)\n\n\nLakukan ANOVA. Seperti di percobaan faktorial, sintaks \\(a*b\\) akan menghasilkan pengaruh faktor dan interaksi secara bersamaan. Oleh karena itu, tulis saja sintaks tersebut tanpa harus menspesifikasi pengaruh tiap faktor. Terdapat sintaks yang berbeda, yaitu di Error(Ulangan:Lokasi). Pada dasarnya sintaks ini memerintahkan R untuk menghitung ANOVA bagi plot utama. Dihitung \\(JKG_{Lokasi}\\) dan pengaruh lokasi diuji menggunakan kuantitas tersebut. Tabel ANOVA akan terbagi dua menjadi Error: Ulangan:Lokasi - di plot utama, dan Error: Within - di dalam plot utama, dalam kata lain di anak petak. Pastikan ulangan sudah merupakan faktor (jika belum, derajat bebas akan beda).\n\n\nCode\naovSPlot1<-aov(`Konsentrasi debu`~Lokasi*Jenis+Error(Ulangan:Lokasi),data=SPlot)\n\n\nWarning in aov(`Konsentrasi debu` ~ Lokasi * Jenis + Error(Ulangan:Lokasi), :\nError() model is singular\n\n\nCode\nsummary(aovSPlot1)\n\n\n\nError: Ulangan:Lokasi\n          Df Sum Sq Mean Sq F value   Pr(>F)    \nLokasi     1 105404  105404   45587 2.89e-09 ***\nResiduals  4      9       2                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nError: Within\n             Df Sum Sq Mean Sq F value Pr(>F)    \nJenis         9 160762   17862  343631 <2e-16 ***\nLokasi:Jenis  9  20732    2304   44314 <2e-16 ***\nResiduals    36      2       0                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nTerbentuk tabel ANOVA yang mirip dengan Excel, dengan kesimpulan sama yaitu tolak \\(H_{0}\\) bagi tiap pengaruh. Ini berarti lokasi, jenis, dan interaksi lokasi dengan jenis berpengaruh pada respon. ANOVA Split Plot RAL dapat juga dianalisis melalui package lme4:\n\n\nCode\nlibrary(lme4)\n\n\nLoading required package: Matrix\n\n\nCode\naovSPlot2<-lmer(`Konsentrasi debu`~Lokasi*Jenis+(1|Ulangan:Lokasi),data=SPlot)\nknitr::kable(anova(aovSPlot2))\n\n\n\n\n\n\nnpar\nSum Sq\nMean Sq\nF value\n\n\n\n\nLokasi\n1\n2369.655\n2369.655\n45586.53\n\n\nJenis\n9\n160762.103\n17862.456\n343631.14\n\n\nLokasi:Jenis\n9\n20731.646\n2303.516\n44314.17\n\n\n\n\n\nNilai F dari ANOVA tersebut sama dengan sebelumnya. Karena setidaknya salah satu pengaruh jenis dan lokasi beda dari nol, dapat dibuat kontras sebagai uji lanjut:\n\n\nCode\ncontrasts(SPlot$Jenis)<-cbind(c(1, -4, 1, 1, 1, 1, 1, 1, 1,-4), c(0, 1, 0, 0, 0, 0, 0, 0, 0, -1),\n                              c(1, 0, 1, 1, 1, -1, -1, -1, -1, 0), c(1, 0, 1, -1, -1, 0, 0, 0, 0, 0),\n                              c(1, 0, -1, 0, 0, 0, 0, 0, 0, 0), c(0, 0, 0, 1, -1, 0, 0, 0, 0, 0),\n                              c(0, 0, 0, 0, 0, 1, 1, -1, -1, 0), c(0, 0, 0, 0, 0, 1, -1, 0, 0, 0),\n                              c(0, 0, 0, 0, 0, 0, 0, 1, -1, 0))\nsummary(aovSPlot1,split=list(Jenis=list(\"Jarum vs Lainnya\"=1, \"J9 vs J10\"=2, \"Kecil vs Lebar\"=3, \"Licin vs Kasar (kecil)\"=4,\n           \"J1 vs J2 (kecil licin)\"=5, \"J3 vs J4 (kecil kasar)\"=6, \"licin vs kasar (lebar)\"=7,\n           \"J5 vs J6 (lebar licin)\"=8, \"J7 vs J8 (lebar kasar)\"=9)))\n\n\n\nError: Ulangan:Lokasi\n          Df Sum Sq Mean Sq F value   Pr(>F)    \nLokasi     1 105404  105404   45587 2.89e-09 ***\nResiduals  4      9       2                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nError: Within\n                                       Df Sum Sq Mean Sq F value Pr(>F)    \nJenis                                   9 160762   17862  343631 <2e-16 ***\n  Jenis: Jarum vs Lainnya               1  24359   24359  468603 <2e-16 ***\n  Jenis: J9 vs J10                      1  29839   29839  574023 <2e-16 ***\n  Jenis: Kecil vs Lebar                 1   1048    1048   20168 <2e-16 ***\n  Jenis: Licin vs Kasar (kecil)         1   8740    8740  168142 <2e-16 ***\n  Jenis: J1 vs J2 (kecil licin)         1  25855   25855  497393 <2e-16 ***\n  Jenis: J3 vs J4 (kecil kasar)         1  11248   11248  216388 <2e-16 ***\n  Jenis: licin vs kasar (lebar)         1   9842    9842  189338 <2e-16 ***\n  Jenis: J5 vs J6 (lebar licin)         1  11025   11025  212095 <2e-16 ***\n  Jenis: J7 vs J8 (lebar kasar)         1  38806   38806  746532 <2e-16 ***\nLokasi:Jenis                            9  20732    2304   44314 <2e-16 ***\n  Lokasi:Jenis: Jarum vs Lainnya        1   3456    3456   66495 <2e-16 ***\n  Lokasi:Jenis: J9 vs J10               1   3680    3680   70799 <2e-16 ***\n  Lokasi:Jenis: Kecil vs Lebar          1     84      84    1618 <2e-16 ***\n  Lokasi:Jenis: Licin vs Kasar (kecil)  1   1301    1301   25021 <2e-16 ***\n  Lokasi:Jenis: J1 vs J2 (kecil licin)  1   3374    3374   64907 <2e-16 ***\n  Lokasi:Jenis: J3 vs J4 (kecil kasar)  1   1325    1325   25496 <2e-16 ***\n  Lokasi:Jenis: licin vs kasar (lebar)  1   1606    1606   30887 <2e-16 ***\n  Lokasi:Jenis: J5 vs J6 (lebar licin)  1   1960    1960   37697 <2e-16 ***\n  Lokasi:Jenis: J7 vs J8 (lebar kasar)  1   3946    3946   75908 <2e-16 ***\nResiduals                              36      2       0                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSemua kontras menolak \\(H_{0}\\). Ini berarti jenis berbeda yang hendak dibandingkan benar-benar beda dalam hal konsentrasi debu. Lalu, dapat dibuat plot interaksi:\n\n\nCode\nlibrary(ggplot2)\nggplot2::ggplot(aes(x = Jenis, y = `Konsentrasi debu`, group = Lokasi, colour = Lokasi), data = SPlot) + geom_line()+ theme_bw()\n\n\n\n\n\nDapat dilihat bahwa garis tak sepenuhnya sejajar walaupun tak pernah berpotongan. Misal, ada kenaikan konsentrasi debu yang lebih besar di Gatot Subroto daripada Cipedak antara jenis tanaman yang sama (misal J5 vs. J6). Untuk memastikan bahwa RAL tepat, dapat dibuat facet per ulangan yang memisahkan plot menjadi per ulangan:\n\n\nCode\nggplot2::ggplot(aes(x = Jenis, y = `Konsentrasi debu`, group = Lokasi, colour = Lokasi), data = SPlot) + geom_line() + \n  facet_wrap(~ Ulangan) + theme_bw()\n\n\n\n\n\nTerlihat bahwa pola interaksi relatif sama antara ulangan, sehingga dapat dianggap bahwa unit percobaan benar-benar homogen."
  },
  {
    "objectID": "06-Bab6.html#split-plot-rak",
    "href": "06-Bab6.html#split-plot-rak",
    "title": "6  Rancangan Petak Terpisah (Split Plot Design)",
    "section": "6.2 Split Plot RAK",
    "text": "6.2 Split Plot RAK\nKondisi unit percobaan split plot belum tentu homogen. Oleh karena itu, dapat digunakan Split Plot RAK untuk mengatasi pengaruh keragaman yang muncul dari satu arah. Pengelompokan menjadi blok dilakukan di petak utama, dengan pengacakan anak petak relatif sama. Dalam pembahasan Split Plot RAK, akan digunakan kasus oats:\n\nProduksi oat dari sebuah percobaan split-plot menggunakan tiga varietas dan empat taraf penggunaaan nitrogen. Percobaan dilaksanakan di enam blok yang berisi tiga petak utama yang dibagi menjadi empat anak petak. Varietas diaplikasikan di petak utama dan pemumupukan nitrogen diaplikasikan ke anak petak.\n\nPeubah-peubah dalam dataset oats adalah:\n\nB: Blok, dengan taraf I, II, III, IV, V dan VI.\nV: Varietas, 3 taraf.\nN: Perlakuan pupuk nitrogen. Taraf \\(0.0cwt\\), \\(0.2cwt\\), \\(0.4cwt\\), dan \\(0.6cwt\\).\nY: Produksi di \\(1/4\\) pound per sub-plot. Tiap sub-plot sebesar \\(1/80\\) acre.\n\nData tersebut ada dalam package MASS:\n\n\nCode\ndata(oats, package = \"MASS\")\nstr(oats)\n\n\n'data.frame':   72 obs. of  4 variables:\n $ B: Factor w/ 6 levels \"I\",\"II\",\"III\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ V: Factor w/ 3 levels \"Golden.rain\",..: 3 3 3 3 1 1 1 1 2 2 ...\n $ N: Factor w/ 4 levels \"0.0cwt\",\"0.2cwt\",..: 1 2 3 4 1 2 3 4 1 2 ...\n $ Y: int  111 130 157 174 117 114 161 141 105 140 ...\n\n\n\n6.2.1 Pengacakan\nPertama, ambil taraf-taraf dari varietas dan konsentrasi pupuk nitrogen:\n\n\nCode\nV<-levels(oats$V)\nN<-levels(oats$N)\n\n\nPengacakan secara cepat dapat dilakukan dengan menggunakan design.split dari library agricolae. Dalam kasus ini, design berupa RCBD (randomized complete block design) jika menggunakan split plot RAK. Argumen fungsi diurutkan sebagai berikut karena varietas merupakan petak utama, nitrogen anak petak, dan ada tiga blok.\n\n\nCode\nlibrary(agricolae)\n\nbagan2<-design.split(V, N,r=6, design=\"rcbd\",serie = 0,\n                     seed = 0, kinds = \"Super-Duper\",\n                     first=TRUE,randomization=TRUE) \n        #(utama, anak, ulangan)\nknitr::kable(head(bagan2$book),n=10)\n\n\n\n\n\nplots\nsplots\nblock\nV\nN\n\n\n\n\n1\n1\n1\nGolden.rain\n0.2cwt\n\n\n1\n2\n1\nGolden.rain\n0.0cwt\n\n\n1\n3\n1\nGolden.rain\n0.4cwt\n\n\n1\n4\n1\nGolden.rain\n0.6cwt\n\n\n2\n1\n1\nMarvellous\n0.4cwt\n\n\n2\n2\n1\nMarvellous\n0.2cwt\n\n\n\n\n\nCode\nnrow(bagan2$book)\n\n\n[1] 72\n\n\nCode\nnrow(oats)\n\n\n[1] 72\n\n\nJumlah baris di bagan sama dengan jumlah baris di data oats, yaitu \\(3\\times 4\\times 6=72\\). Mirip dengan Split Plot RAL, pengacakan dapat dilakukan dengan algoritma:\n\nPengacakan RAKL untuk plot utama.\nRAKL dengan \\(A\\times r\\) blok, dengan \\(B\\) unit percobaan di blok tersebut.\n\n\\(A\\) adalah jumlah taraf faktor di plot utama dan \\(B\\) adalah jumlah taraf faktor di anak petak.\n\n6.2.1.1 Pengacakan edibble\nUntuk split plot RAKL, dapat dibuat tiga unit di set_units(). Pertama adalah blok, lalu petak utama yang nested_in(blok), dan anak petak yang nested_in() petak utama. Taraf varietas diacak ke petak utama (V~mainplot), dan nitrogen ke anak petak (jenis~subplot):\n\n\nCode\nlibrary(edibble)\n\ndesSPRAKL<-design(name=\"Oats\") %>%\n  set_units(blok=6,\n            mainplot=nested_in(blok,3),\n            subplot=nested_in(mainplot, 4)) %>%\n  set_trts(nitrogen=N,\n           varietas=V) %>%\n  allot_trts(varietas~mainplot,\n             nitrogen~subplot) %>%\n  assign_trts(\"random\", seed=420) %>% serve_table\n\nknitr::kable(head(desSPRAKL,n=10))\n\n\n\n\n\nblok\nmainplot\nsubplot\nnitrogen\nvarietas\n\n\n\n\nblok1\nmainplot1\nsubplot1\n0.0cwt\nGolden.rain\n\n\nblok1\nmainplot1\nsubplot2\n0.6cwt\nGolden.rain\n\n\nblok1\nmainplot1\nsubplot3\n0.2cwt\nGolden.rain\n\n\nblok1\nmainplot1\nsubplot4\n0.4cwt\nGolden.rain\n\n\nblok1\nmainplot2\nsubplot5\n0.2cwt\nMarvellous\n\n\nblok1\nmainplot2\nsubplot6\n0.6cwt\nMarvellous\n\n\nblok1\nmainplot2\nsubplot7\n0.0cwt\nMarvellous\n\n\nblok1\nmainplot2\nsubplot8\n0.4cwt\nMarvellous\n\n\nblok1\nmainplot3\nsubplot9\n0.4cwt\nVictory\n\n\nblok1\nmainplot3\nsubplot10\n0.2cwt\nVictory\n\n\n\n\n\nPlot dari rancangan tersebut dapat dilihat:\n\n\nCode\ndeggust::autoplot(desSPRAKL)\n\n\n\n\n\nAgar plot tersebut terlihat lebih rapih, dapat digunakan facet_wrap() untuk memisahkan plot tersebut per blok atau per plot utama:\n\n\nCode\ndeggust::autoplot(desSPRAKL)+facet_wrap(~blok)\n\n\n\n\n\nCode\ndeggust::autoplot(desSPRAKL)+facet_wrap(~mainplot)\n\n\n\n\n\n\n\n\n6.2.2 ANOVA\nModel linear aditif bagi split plot RAL adalah:\n\\[\ny_{ijk} = \\mu + \\alpha_i + K_{k}+ \\delta_{k(i)} + \\beta_j + (\\alpha\\beta)_{ij} + \\epsilon_{ijk}\n\\]\nDengan:\n\n\\(y_{ijk}\\) adalah nilai pengamatan pada faktor A taraf ke-i dan faktor B taraf ke-j pada blok ke-k.\n\\(\\mu\\) komponen aditif dari rataan umum.\n\\(\\alpha_i\\) pengaruh utama faktor A. Diasumsikan \\(\\sum_{i=1}^a \\alpha_i=0\\) bagi model tetap dan \\(\\alpha\\sim N(0,\\sigma_a^2)\\) bagi model acak.\n\\(\\beta_{j}\\) pengaruh utama faktor B. Diasumsikan \\(\\sum_{j=1}^b \\beta_j=0\\) bagi model tetap dan \\(\\beta\\sim N(0,\\sigma_b^2)\\) bagi model acak.\n\\(K_{k}\\) pengaruh utama kelompok.\n\\((\\alpha\\beta)_{ij}\\) komponen interaksi faktor A dan faktor B. Diasumsikan \\(\\sum_{i=1}^p\\sum_{i=1}^t (\\alpha\\beta)_{ij}=0\\) bagi model tetap dan \\((\\alpha\\beta)_{ij}\\sim N(0,\\sigma_{ab}^2)\\) bagi model acak.\n\\(\\delta_{k(i)}\\sim N(0,\\sigma_{\\delta}^2)\\) komponen acak dari petak utama.\n\\(\\epsilon_{ijk}\\sim N(0,\\sigma^2)\\) komponen acak anak petak.\n\nDan hipotesis pengaruh petak utama, anak petak, dan interaksi.\n$$\n\\[\\begin{aligned}\n&\\text{Pengaruh petak utama (Faktor A)}:\\\\\nH_{0}&:\\alpha_{1}=\\ldots=\\alpha_{a}=0\\\\\n&\\text{ faktor A tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada satu i di mana }\\alpha_{i}\\neq 0\\\\\n\\\\\n&\\text{Pengaruh anak petak (Faktor B)}:\\\\\nH_{0}&:\\beta_{1}=\\ldots=\\beta_{b}=0\\\\\n&\\text{ faktor B tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada satu j di mana }\\beta_{j}\\neq 0\\\\\n\\\\\n&\\text{Pengaruh interaksi }:\\\\\nH_{0}&:(\\alpha\\beta)_{11}=(\\alpha\\beta)_{12}=\\ldots=(\\alpha\\beta)_{ab}=0\\\\\n&\\text{ interaksi tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada sepasang ij di mana }(\\alpha\\beta)_{ij}\\neq 0\\\\\n\\\\\n&\\text{Pengaruh kelompok}:\\\\\nH_{0}&:K_{1}=\\ldots=K_{k}=0\\\\\n&\\text{ Kelompok tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada satu k di mana }K_{k}\\neq 0\\\\\n\n\\end{aligned}\\]\n$$\nDan tabel ANOVA:\n\n\n\n\n\n\n\n\n\n\n\nSumber Keragaman\ndb\nJK\nKT\nF-hit\nF(dbP,dbG)\n\n\n\n\nBlok\nr-1\nJKK\nJKK/dbA\nKTK/KTGA\n\n\n\nA\na-1\nJKA\nJKA/dbA\nKTA/KTGA\n\n\n\nGalat (a)\n(a-1)(r-1)\nJKGA\nJKGA/dbGA\n\n\n\n\nB\n(b-1)\nJKB\nJKB/dbB\nKTB/KTGB\n\n\n\nAB\n(a-1)(b-1)\nJKAB\nJKAB/dbAB\nKTAB/KTGB\n\n\n\nGalat (b)\n(a-1)(b-1)(r-1)\nJKGB\nJKGB/dbGB\n\n\n\n\nTotal\nabr-1\nJKT\n\n\n\n\n\n\nJumlah kuadrat tersebut dihitung dengan:\n\\[\n\\begin{aligned}\nFK&=\\frac{y^2_{...}}{abr}\\\\\nJKT&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r\\left(y_{ijk}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r y_{ijk}^2-FK\\\\\nJKST&=\\sum_{i=1}^a\\sum_{k=1}^r\\left(\\bar{y}_{i.k}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{k=1}^r \\frac{y_{i.k}^2}{b}-FK\\\\\nJKA&=\\sum_{i=1}^a\\left(\\bar{y}_{i..}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a \\frac{y_{i..}^2}{br}-FK\\\\\nJKK&=\\sum_{k=1}^r \\left(\\bar{y}_{..k}-\\bar{y}_{...}\\right)^2=\\sum_{k=1}^r \\frac{y_{..k}^2}{ab}-FK\\\\\nJKG_{a}&=JKST-JKA-JKK\\\\\nJKB&=\\sum_{j=1}^b\\left(\\bar{y}_{.j.}-\\bar{y}_{...}\\right)^2=\\sum_{j=1}^b \\frac{y_{.j.}^2}{ar}-FK\\\\\nJKP&=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b \\frac{y_{ij.}^2}{r}-FK\\\\\nJKAB&=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{i..}-\\bar{y}_{.j.}+\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\left(\\bar{y}_{ij.}-\\bar{y}_{...}\\right)^2-JKA-JKB\\\\\n&=JKP-JKB-JKA\\\\\nJKG_{b}&=JKT-JKP-JKG_{a}\n\\end{aligned}\n\\]\n\n\n6.2.3 Analisis menggunakan R\nSama seperti Split Plot RAL, perlu ditambah sintaks Error(Blok:Utama) di aov:\n\n\nCode\naovSPlotRAK1<-aov(Y~V*N+B+Error(B:V),data=oats)\n\n\nWarning in aov(Y ~ V * N + B + Error(B:V), data = oats): Error() model is\nsingular\n\n\nCode\nsummary(aovSPlotRAK1)\n\n\n\nError: B:V\n          Df Sum Sq Mean Sq F value Pr(>F)  \nV          2   1786     893   1.485 0.2724  \nB          5  15875    3175   5.280 0.0124 *\nResiduals 10   6013     601                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nError: Within\n          Df Sum Sq Mean Sq F value   Pr(>F)    \nN          3  20020    6673  37.686 2.46e-12 ***\nV:N        6    322      54   0.303    0.932    \nResiduals 45   7969     177                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nDapat juga digunakan lme4:\n\n\nCode\nlibrary(lme4)\nfit.oats <- lmer(Y ~ B + V * N + (1 | B:V), data = oats)\nknitr::kable(anova(fit.oats))\n\n\n\n\n\n\nnpar\nSum Sq\nMean Sq\nF value\n\n\n\n\nB\n5\n4675.0427\n935.0085\n5.2800486\n\n\nV\n2\n526.0578\n263.0289\n1.4853399\n\n\nN\n3\n20020.5000\n6673.5000\n37.6856497\n\n\nV:N\n6\n321.7500\n53.6250\n0.3028236\n\n\n\n\n\nNilai F dan derajat bebas dari kedua tabel ANOVA sama, tetapi jumlah kuadrat berbeda. Fungsi sp.plot dari library agricolae juga dapat digunakan untuk menghitung tabel ANOVA tersebut. Sintaks metode tersebut adalah with(data, sp.plot(blok, petak utama, anak petak, Y)).\n\n\nCode\nwith(oats,sp.plot(block=B, pplot=V, splot=N, Y=Y))\n\n\n\nANALYSIS SPLIT PLOT:  Y \nClass level information\n\nV   :  Victory Golden.rain Marvellous \nN   :  0.0cwt 0.2cwt 0.4cwt 0.6cwt \nB   :  I II III IV V VI \n\nNumber of observations:  72 \n\nAnalysis of Variance Table\n\nResponse: Y\n    Df  Sum Sq Mean Sq F value    Pr(>F)    \nB    5 15875.3  3175.1     NaN       NaN    \nV    2  1786.4   893.2  1.4853    0.2724    \nEa  10  6013.3   601.3     NaN       NaN    \nN    3 20020.5  6673.5 37.6856 2.458e-12 ***\nV:N  6   321.8    53.6  0.3028    0.9322    \nEb  45  7968.7   177.1     NaN       NaN    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\ncv(a) = 23.6 %, cv(b) = 12.8 %, Mean = 103.9722 \n\n\nJumlah kuadrat dan kuadrat tengah galat sama, tetapi metode tersebut tidak dapat menguji pengaruh blok.\nKarena setidaknya salah satu pengaruh konsentrasi pupuk nitrogen beda dari nol dan taraf faktor tersebut kuantitatif dengan jarak sama, dapat digunakan polinomial orthogonal sebagai uji lanjut. Polinomial orthogonal dapat dimasukkan dengan manual atau dengan contr.poly:\n\n\nCode\n#contr.poly:\ncontrasts(oats$N)<-contr.poly(levels(oats$N))\naovSPlotRAK1<-aov(Y~V*N+B+Error(B:V),data=oats)\n\n\nWarning in aov(Y ~ V * N + B + Error(B:V), data = oats): Error() model is\nsingular\n\n\nCode\nsummary(aovSPlotRAK1,split=list(N=list(\"Linear\"=1, \"Kuadratik\"=2,\n                                    \"Kubik\"=3)))\n\n\n\nError: B:V\n          Df Sum Sq Mean Sq F value Pr(>F)  \nV          2   1786     893   1.485 0.2724  \nB          5  15875    3175   5.280 0.0124 *\nResiduals 10   6013     601                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nError: Within\n                 Df Sum Sq Mean Sq F value   Pr(>F)    \nN                 3  20020    6674  37.686 2.46e-12 ***\n  N: Linear       1  19536   19536 110.323 1.09e-13 ***\n  N: Kuadratik    1    480     480   2.713    0.106    \n  N: Kubik        1      4       4   0.020    0.887    \nV:N               6    322      54   0.303    0.932    \n  V:N: Linear     2    168      84   0.475    0.625    \n  V:N: Kuadratik  2     11       6   0.031    0.969    \n  V:N: Kubik      2    142      71   0.402    0.671    \nResiduals        45   7969     177                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nTerlihat bahwa pengaruh konsentrasi pupuk nitrogen linear setelah diuji melalui polinomial orthogonal."
  },
  {
    "objectID": "06-Bab6.html#latihan-soal",
    "href": "06-Bab6.html#latihan-soal",
    "title": "6  Rancangan Petak Terpisah (Split Plot Design)",
    "section": "6.3 Latihan Soal",
    "text": "6.3 Latihan Soal\n\nPetani John. Sumber: ANOVA and Mixed Models: A Short Intro Using R (Lukas Meier, 2018)\n\nPetani John memiliki delapan petal tanah yang berbeda. Dia mengacak dan menerapkan dua “skema” pemupukan (“kontrol” dan “baru”) dengan cara yang seimbang ke delapan plot. Selain itu, setiap plot dibagi menjadi empat subplot. Di setiap plot, empat varietas stroberi yang berbeda diacak ke subplot. John tertarik pada efek skema pemupukan dan varietas stroberi pada massa buah. Per subplot, ia mencatat massa buah setelah jangka waktu tertentu. Buat bagan percobaan dan analisis datanya!\nData dapat diakses dengan sintaks R berikut:\n\n\nCode\nbook.url <- \"http://stat.ethz.ch/~meier/teaching/book-anova\"\njohn <- readRDS(url(file.path(book.url, \"data/john.rds\")))\nsummary(john)\n\n\n      plot     fertilizer variety      mass      \n 1      :4   control:16   A:8     Min.   : 7.70  \n 2      :4   new    :16   B:8     1st Qu.:11.57  \n 3      :4                C:8     Median :14.30  \n 4      :4                D:8     Mean   :13.94  \n 5      :4                        3rd Qu.:16.75  \n 6      :4                        Max.   :20.60  \n (Other):8                                       \n\n\n\nBenih\n\nDalam suatu percobaan tanaman, seorang petani menggunakan percobaan 2 faktor untuk melihat bagaimana kedua faktor tersebut mempunyai pengaruh terhadap pertumbuhan serta hasil tanaman, Untuk faktor pertama petani menggunakan (Takaran pupuk kandang: K1, K2, K3) diletakkan sebagai petak utama, sedangkan untuk faktor kedua (Jumlah benih per lubang: J1, J2, J3) dianggap sebagai anak petak. Setiap perlakuan diulang sebanyak 3 kali, dan unit-unit percobaan diasumsikan homogen.\nBuat bagan dan analisis datanya!\n\nBuat plot interaksi untuk data oats! Pisahkan plot tersebut menjadi facet untuk tiap blok."
  },
  {
    "objectID": "07-Bab7.html",
    "href": "07-Bab7.html",
    "title": "7  Rancangan Split Blok",
    "section": "",
    "text": "Filosofi dasar rancangan split blok mirip dengan strip plot - ada petak utama dan anak petak. Anak petak tersebut mengandung suatu aspek dari percobaan yang ingin ditekankan (diketahui pengaruhnya dengan ketepatan lebih tinggi). Dalam split blok kasus ini yang ditekankan bukan satu faktor, melainkan interaksi antara faktor. Oleh karena itu, faktor menjadi petak utama.\nRancangan split blok hanya dapat diterapkan dalam RAKL, tidak di RAL. Unit percobaan harus dipisahkan menjadi blok, lalu petak utama diacak di lajur dan baris blok tersebut. Pengacakan semua faktor di lajur dan baris tidak mungkin terjadi di satu unit percobaan yang hanya mengandung satu perlakuan atau satu kombinasi faktor sehingga dibutuhkan blok agar pengacakan semua kombinasi tersebut dapat dilakukan."
  },
  {
    "objectID": "07-Bab7.html#pengacakan",
    "href": "07-Bab7.html#pengacakan",
    "title": "7  Rancangan Split Blok",
    "section": "7.1 Pengacakan",
    "text": "7.1 Pengacakan\nLangkah pengacakannya adalah sebagai berikut:\n\nPilihlah kelompok unit percobaan secara acak\nTempatkan taraf-taraf faktor A secara acak pada setiap kelompok mengikuti plot lajur\nTempatkan taraf-taraf faktor B secara acak pada setiap kelompok mengikuti plot baris.\n\n\n7.1.1 Pengacakan di agricolae\nSebelum langkah-langkah pengacakan di atas diikuti, akan didefinisikan faktor yang akan dicobakan dan tarafnya. Hendak dicobakan pupuk dengan taraf “Kontrol”, “PK”, “N”, “NP”, “NK”, dan “NPK” serta genotipe beras dengan taraf IR-64 dan S-969.\n\n\nCode\nP<-c(\"Kontrol\", \"PK\", \"N\", \"NP\", \"NK\",\"NPK\")\nG<-c(\"IR-64\",\"S-969\")\n\n\nPengacakan split blok di agricolae cukup sederhana. Nama lain dari split blok adalah strip-plot, dan ada fungsi design.strip(faktor1, faktor2, nblok) di package tersebut:\n\n\nCode\nbaganSplitB<-agricolae::design.strip(P,G,r=4,serie=1)\n\n\nPerlihatkan bagan percobaan:\n\n\nCode\nknitr::kable(head(baganSplitB$book, n=10),\n             col.names= c(\"Petak\", \"Blok\",\n                          \"Pupuk\", \"Genotipe\"))\n\n\n\n\n\nPetak\nBlok\nPupuk\nGenotipe\n\n\n\n\n11\n1\nNPK\nIR-64\n\n\n12\n1\nNPK\nS-969\n\n\n13\n1\nN\nIR-64\n\n\n14\n1\nN\nS-969\n\n\n15\n1\nNK\nIR-64\n\n\n16\n1\nNK\nS-969\n\n\n17\n1\nKontrol\nIR-64\n\n\n18\n1\nKontrol\nS-969\n\n\n19\n1\nNP\nIR-64\n\n\n20\n1\nNP\nS-969\n\n\n\n\n\n\n\n7.1.2 Pengacakan di edibble\nDalam rancangan strip plot, ada empat unit percobaan. Pengaruh blok tentu diaplikasikan ke blok, lalu pengaruh faktor ditaruh di lajur dan baris, serta interaksi di tiap unit. Maka, di edibble buat empat unit. Blok, lalu kolom dan baris yang nested_in(blok), dan petak yang di dalam blok - nested_in(blok) dan crossed_by(baris, kolom) - tiap petak merupakan gabungan dari baris dan kolom. Cara mendefinisikan kasus ini adalah dengan menyatakan bahwa petak crossed_by() terlebih dahulu, lalu nested_in() - di tiap blok, petak merupakan gabungan baris dan kolom. Karena operasi dalam kurung dilaksanakan terlebih dahulu, bentuknya menjadi nested_in(blok, crossed_by()).\nLalu, pengacakan dilakukan ke baris dan kolom.\n\n\nCode\nlibrary(edibble)\n\ndesSBlok<-design(name=\"Padi\") %>%\n  set_units(blok=4,\n            baris=nested_in(blok,2),\n            kolom=nested_in(blok,6),\n            petak=nested_in(blok,crossed_by(baris,kolom))) %>%\n  set_trts(Genotipe=G,\n           Pupuk=P) %>%\n  allot_trts(Genotipe~baris,\n             Pupuk~kolom) %>%\n  assign_trts(\"random\", seed=420) %>% serve_table\n\nknitr::kable(head(desSBlok,n=10))\n\n\n\n\n\nblok\nbaris\nkolom\npetak\nGenotipe\nPupuk\n\n\n\n\nblok1\nbaris1\nkolom1\npetak1\nS-969\nNPK\n\n\nblok1\nbaris2\nkolom1\npetak2\nIR-64\nNPK\n\n\nblok1\nbaris1\nkolom2\npetak3\nS-969\nKontrol\n\n\nblok1\nbaris2\nkolom2\npetak4\nIR-64\nKontrol\n\n\nblok1\nbaris1\nkolom3\npetak5\nS-969\nPK\n\n\nblok1\nbaris2\nkolom3\npetak6\nIR-64\nPK\n\n\nblok1\nbaris1\nkolom4\npetak7\nS-969\nNP\n\n\nblok1\nbaris2\nkolom4\npetak8\nIR-64\nNP\n\n\nblok1\nbaris1\nkolom5\npetak9\nS-969\nN\n\n\nblok1\nbaris2\nkolom5\npetak10\nIR-64\nN\n\n\n\n\n\nPlot rancangan tersebut:\n\n\nCode\ndeggust::autoplot(desSBlok)\n\n\n\n\n\nBandingkan dengan default edibble:\n\n\nCode\nstrip <- takeout(menu_strip(t1 = 2, t2 = 6, r = 4, seed=420))\nexamine_recipe(strip)\n\n\ndesign(\"Strip-Plot Design | Strip-Unit Design\") %>%\n  set_units(block = 4,\n            row = nested_in(block, 2),\n            col = nested_in(block, 6),\n            unit = nested_in(block, crossed_by(row, col))) %>%\n  set_trts(trt1 = 2,\n           trt2 = 6) %>%\n  allot_trts(trt1 ~ row,\n             trt2 ~ col) %>%\n  assign_trts(\"random\", seed = 420) %>%\n  serve_table()\n\n\nPlotnya akan relatif sama:\n\n\nCode\ndeggust::autoplot(strip)"
  },
  {
    "objectID": "07-Bab7.html#anova",
    "href": "07-Bab7.html#anova",
    "title": "7  Rancangan Split Blok",
    "section": "7.2 ANOVA",
    "text": "7.2 ANOVA\n\n7.2.1 Teori\nModel linear aditif bagi split plot RAL adalah:\n\\[\ny_{ijk} = \\mu + \\alpha_i + K_{k}+ \\delta_{ik} + \\beta_j + \\gamma_{jk}+(\\alpha\\beta)_{ij} + \\epsilon_{ijk}\n\\]\nDengan:\n\n\\(y_{ijk}\\) adalah nilai pengamatan pada faktor A taraf ke-i dan faktor B taraf ke-j pada blok ke-k.\n\\(\\mu\\) komponen aditif dari rataan umum.\n\\(\\alpha_i\\) pengaruh utama faktor A. Diasumsikan \\(\\sum_{i=1}^a \\alpha_i=0\\) bagi model tetap dan \\(\\alpha\\sim N(0,\\sigma_a^2)\\) bagi model acak.\n\\(\\beta_{j}\\) pengaruh utama faktor B. Diasumsikan \\(\\sum_{j=1}^b \\beta_j=0\\) bagi model tetap dan \\(\\beta\\sim N(0,\\sigma_b^2)\\) bagi model acak.\n\\(K_{k}\\) pengaruh utama kelompok.\n\\((\\alpha\\beta)_{ij}\\) komponen interaksi faktor A dan faktor B. Diasumsikan \\(\\sum_{i=1}^p(\\alpha\\beta)_{ij}=\\sum_{i=1}^t (\\alpha\\beta)_{ij}=0\\) bagi model tetap dan \\((\\alpha\\beta)_{ij}\\sim N(0,\\sigma_{ab}^2)\\) bagi model acak.\n\\(\\delta_{ik}\\sim N(0,\\sigma_{\\delta}^2)\\) komponen acak dari faktor A.\n\\(\\gamma_{jk}\\sim N(0,\\sigma_{\\ga,,a}^2)\\) komponen acak dari faktor B.\n\\(\\epsilon_{ijk}\\sim N(0,\\sigma^2)\\) komponen acak interaksi dari faktor A dan B.\n\nDan hipotesis pengaruh petak utama, anak petak, dan interaksi.\n$$\n\\[\\begin{aligned}\n\\text{Pengaruh petak utama (Faktor A)}&:\\\\\nH_{0}&:\\alpha_{1}=\\ldots=\\alpha_{a}=0 \\text{ faktor A tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada satu i di mana }\\alpha_{i}\\neq 0\\\\\n\\\\\n\\text{Pengaruh anak petak (Faktor B)}&:\\\\\nH_{0}&:\\beta_{1}=\\ldots=\\beta_{b}=0 \\text{ faktor B tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada satu j di mana }\\beta_{j}\\neq 0\\\\\n\\\\\n\\text{Pengaruh interaksi }&:\\\\\nH_{0}&:(\\alpha\\beta)_{11}=(\\alpha\\beta)_{12}=\\ldots=(\\alpha\\beta)_{ab}=0 \\text{ interaksi tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada sepasang ij di mana }(\\alpha\\beta)_{ij}\\neq 0\\\\\n\\\\\n\\text{Pengaruh kelompok}&:\\\\\nH_{0}&:K_{1}=\\ldots=K_{k}=0 \\text{ Kelompok tidak berpengaruh pada respon}\\\\\nH_{1}&: \\text{Paling sedikit ada satu k di mana }K_{k}\\neq 0\\\\\n\n\\end{aligned}\\]\n$$\nDan tabel ANOVA:\n\n\n\n\n\n\n\n\n\n\n\nSumber Keragaman\ndb\nJK\nKT\nF-hit\nF(dbP,dbG)\n\n\n\n\nBlok\nr-1\nJKK\nJKK/dbA\nKTK/KTGA\n\n\n\nA\na-1\nJKA\nJKA/dbA\nKTA/KTGA\n\n\n\nGalat (a)\n(a-1)(r-1)\nJKGA\nJKGA/dbGA\n\n\n\n\nB\n(b-1)\nJKB\nJKB/dbB\nKTB/KTGB\n\n\n\nGalat (b)\n(b-1)(r-1)\nJKGA\nJKGA/dbGB\n\n\n\n\nAB\n(a-1)(b-1)\nJKAB\nJKAB/dbAB\nKTAB/KTGC\n\n\n\nGalat (c)\n(a-1)(b-1)(r-1)\nJKGC\nJKGC/dbGC\n\n\n\n\nTotal\nabr-1\nJKT\n\n\n\n\n\n\nUntuk bagian pertama tabel, jumlah kuadrat dihitung dengan:\n$$\n\\[\\begin{aligned}\nFK&=\\frac{y^2_{...}}{abr}\\\\\n\nJKT&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r\\left(y_{ijk}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r y_{ijk}^2-FK\\\\\n\nJKST_a&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r\\left(\\bar{y}_{i.k}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{k=1}^r \\frac{y_{i.k}^2}{b}-FK\\\\\n\nJKA&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r\\left(\\bar{y}_{i..}-\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a \\frac{y_{i..}^2}{br}-FK\\\\\n\nJKK&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r \\left(\\bar{y}_{..k}-\\bar{y}_{...}\\right)^2=\\sum_{k=1}^r \\frac{y_{..k}^2}{ab}-FK\\\\\n\nJKG_{a}&=JKST_a-JKA-JKK\\\\\n\\end{aligned}\\]\n$$\nUntuk bagian kedua tabel:\n\\[\n\\begin{aligned}\nJKB&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r\\left(\\bar{y}_{.j.}-\\bar{y}_{...}\\right)^2=\\sum_{j=1}^b \\frac{y_{.j.}^2}{ar}-FK\\\\\nJKST_{b}&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k=1}^r\\left(\\bar{y}_{ij.}-\\bar{y}_{...}\\right)^2=\\sum_{k=1}^r\\sum_{j=1}^b \\frac{y_{.jk}^2}{a}-FK\\\\\nJKG_{b}&=JKST_{b}-JKB\\\\\n\\end{aligned}\n\\]\nDan untuk bagian terakhir tabel:\n\\[\n\\begin{aligned}\nJKP&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k-1}^r\\left(\\bar{y}_{ij}-\\bar{y}_{..}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\frac{y_{ij.}^2}{r}-FK\\\\\nJKAB&=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k-1}^r\\left(\\bar{y}_{ij.}-\\bar{y}_{i..}-\\bar{y}_{.j.}+\\bar{y}_{...}\\right)^2=\\sum_{i=1}^a\\sum_{j=1}^b\\sum_{k-1}^r\\left(\\bar{y}_{ij.}-\\bar{y}_{...}\\right)^2-JKA-JKB\\\\\n&=JKP-JKB-JKA\\\\\nJKG_{c}&=JKT-JKP-JKK-JKG_{a}-JKG_{b}\n\\end{aligned}\n\\]\n\n\n7.2.2 Analisis dengan R\nLoad data:\n\n\nCode\nlibrary(googlesheets4)\nlibrary(data.table)\n\nData.SB<-as.data.table(read_sheet(\"https://docs.google.com/spreadsheets/d/1meWerIyAv1X8jtHXoFCTysvzPy91ptQL6F9sO_-RUNs/edit?usp=sharing\"))\n\n\n! Using an auto-discovered, cached token.\n\n\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n\n\n  See gargle's \"Non-interactive auth\" vignette for more details:\n\n\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n\n\nℹ The googlesheets4 package is using a cached token for\n  'muh.ammarsahab@apps.ipb.ac.id'.\n\n\n✓ Reading from \"Data P10 STA1222\".\n\n\n✓ Range 'Sheet1'.\n\n\nCode\nknitr::kable(Data.SB)\n\n\n\n\n\nP\nG\nB1\nB2\nB3\nB4\n\n\n\n\nKontrol\nIR-64\n20.7\n32.1\n29.5\n37.7\n\n\nKontrol\nS-969\n27.7\n33.0\n26.3\n37.7\n\n\nPK\nIR-64\n30.0\n30.7\n25.5\n36.9\n\n\nPK\nS-969\n36.6\n33.8\n27.0\n39.0\n\n\nN\nIR-64\n39.9\n41.5\n46.4\n44.5\n\n\nN\nS-969\n37.4\n41.2\n45.4\n44.6\n\n\nNP\nIR-64\n40.8\n43.5\n43.3\n43.4\n\n\nNP\nS-969\n42.2\n46.0\n45.9\n46.2\n\n\nNK\nIR-64\n42.4\n45.6\n44.8\n47.0\n\n\nNK\nS-969\n39.8\n39.5\n40.9\n44.0\n\n\nNPK\nIR-64\n48.6\n49.8\n42.6\n46.6\n\n\nNPK\nS-969\n42.9\n45.9\n43.9\n45.6\n\n\n\n\n\nKarena data belum berbentuk long - satu baris adalah satu observasi, melt data tersebut. Tiap baris dalam data awal diidentifikasi oleh kombinasi pupuk dan genotipe, sehingga id.vars adalag c(\"P\",\"G\"):\n\n\nCode\nData.SB<-melt(\n  Data.SB,\n  id.vars=c(\"P\",\"G\"),\n  value.name = \"H\"\n)\n\nknitr::kable(head(Data.SB,10))\n\n\n\n\n\nP\nG\nvariable\nH\n\n\n\n\nKontrol\nIR-64\nB1\n20.7\n\n\nKontrol\nS-969\nB1\n27.7\n\n\nPK\nIR-64\nB1\n30.0\n\n\nPK\nS-969\nB1\n36.6\n\n\nN\nIR-64\nB1\n39.9\n\n\nN\nS-969\nB1\n37.4\n\n\nNP\nIR-64\nB1\n40.8\n\n\nNP\nS-969\nB1\n42.2\n\n\nNK\nIR-64\nB1\n42.4\n\n\nNK\nS-969\nB1\n39.8\n\n\n\n\n\nUbah kolom variable menjadi blok:\n\n\nCode\nsetnames(Data.SB,\"variable\", \"B\")\n\n\nUntuk melakukan ANOVA, perlu ada struktur error yang khusus. Pada dasarnya, akan ada error khusus untuk faktor serta interaksinya, sehingga tulis Error(B:(P*G)) - akan dihitung Error(B:P), Error(B:G), dan Error(B:(G:P)), atau error tiap faktor dan interaksinya di tiap ulangan (blok). Spesifikasi lain adalah:\n\n\nCode\naov.SB<-aov(H~P*G+B+Error(B:(P*G)),Data.SB)\n\n\nWarning in aov(H ~ P * G + B + Error(B:(P * G)), Data.SB): Error() model is\nsingular\n\n\nCode\nsummary(aov.SB)\n\n\n\nError: B:P\n          Df Sum Sq Mean Sq F value   Pr(>F)    \nP          5 1674.8   335.0  18.767 5.62e-06 ***\nB          3  197.1    65.7   3.681   0.0362 *  \nResiduals 15  267.7    17.8                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nError: B:G\n          Df Sum Sq Mean Sq F value Pr(>F)\nG          1  0.035  0.0352   0.032   0.87\nResiduals  3  3.329  1.1097               \n\nError: B:P:G\n          Df Sum Sq Mean Sq F value Pr(>F)  \nP:G        5  78.59   15.72   4.504 0.0105 *\nResiduals 15  52.35    3.49                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\naov.SB1<-aov(H~P*G+B+Error(B:P*B:G),Data.SB)\n\n\nWarning in aov(H ~ P * G + B + Error(B:P * B:G), Data.SB): Error() model is\nsingular\n\n\nCode\nsummary(aov.SB1)\n\n\n\nError: B:P\n          Df Sum Sq Mean Sq F value   Pr(>F)    \nP          5 1674.8   335.0  18.767 5.62e-06 ***\nB          3  197.1    65.7   3.681   0.0362 *  \nResiduals 15  267.7    17.8                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nError: B:G\n          Df Sum Sq Mean Sq F value Pr(>F)\nG          1  0.035  0.0352   0.032   0.87\nResiduals  3  3.329  1.1097               \n\nError: B:P:G\n          Df Sum Sq Mean Sq F value Pr(>F)  \nP:G        5  78.59   15.72   4.504 0.0105 *\nResiduals 15  52.35    3.49                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nPastikan ada kurung, karena anova akan salah tanpa kurung:\n\n\nCode\naov.SB1<-aov(H~P*G+B+Error(B:P*G),Data.SB)\n\n\nWarning in aov(H ~ P * G + B + Error(B:P * G), Data.SB): Error() model is\nsingular\n\n\nCode\nsummary(aov.SB1)\n\n\n\nError: G\n  Df  Sum Sq Mean Sq\nG  1 0.03521 0.03521\n\nError: B:P\n          Df Sum Sq Mean Sq F value   Pr(>F)    \nP          5 1674.8   335.0  18.767 5.62e-06 ***\nB          3  197.1    65.7   3.681   0.0362 *  \nResiduals 15  267.7    17.8                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nError: B:P:G\n          Df Sum Sq Mean Sq F value  Pr(>F)   \nP:G        5  78.59  15.718   5.081 0.00444 **\nResiduals 18  55.68   3.093                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nAtau, dapat digunakan fungsi strip.plot(blok, faktor 1, faktor 2, respon) dari agricolae:\n\n\nCode\nlibrary(agricolae)\n\nout1<-with(Data.SB,strip.plot(B,P,G,H))\n\n\n\nANALYSIS STRIP PLOT:  H \nClass level information\n\nP   :  Kontrol PK N NP NK NPK \nG   :  IR-64 S-969 \nB   :  B1 B2 B3 B4 \n\nNumber of observations:  48 \n\nmodel Y: H ~ B + P + Ea + G + Eb + G:P + Ec \n\nAnalysis of Variance Table\n\nResponse: H\n    Df  Sum Sq Mean Sq F value    Pr(>F)    \nB    3  197.11   65.70                      \nP    5 1674.80  334.96 18.7668 5.616e-06 ***\nEa  15  267.73   17.85                      \nG    1    0.04    0.04  0.0317   0.86997    \nEb   3    3.33    1.11                      \nG:P  5   78.59   15.72  4.5038   0.01047 *  \nEc  15   52.35    3.49                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\ncv(a) = 10.6 %, cv(b) = 2.7 %, cv(c) = 4.7 %, Mean = 39.71458 \n\n\nUji lanjut untuk tiap faktor dapat mudah dilakukan. gl.a adalah derajat bebas galat a, dan Ea galat A.\n\n\nCode\ntest1<-agricolae::LSD.test(Data.SB$H, Data.SB$P, out1$gl.a, out1$Ea)\ntest1$statistics\n\n\n   MSerror Df     Mean       CV t.value      LSD\n  17.84854 15 39.71458 10.63779 2.13145 4.502424\n\n\nCode\nplot(test1)\n\n\n\n\n\nNamun, tampaknya tidak dilakukan penyesuaian pada KTG sehingga perlu dilakukan perhitungan manual jika ingin ada penyesuaian tersebut:\n\n\n7.2.3 Latihan: Huasahuasi\nSedang diteliti ambang batas curah hujan sebagai dukungan untuk aplikasi fungisida waktu dalam pengendalian penyakit busuk daun kentang di Peru menggunakan strip plot.\n\n\nCode\nlibrary(agricolae)\n\ndata(huasahuasi)\nstr(huasahuasi)\n\n\nList of 2\n $ AUDPC:'data.frame':  450 obs. of  13 variables:\n  ..$ block: Factor w/ 3 levels \"I\",\"II\",\"III\": 1 1 1 1 1 1 1 1 1 1 ...\n  ..$ trt  : Factor w/ 3 levels \"40mm\",\"7-days\",..: 1 1 1 1 1 1 1 1 1 1 ...\n  ..$ clon : Factor w/ 5 levels \"C386209.10\",\"C387164.4\",..: 2 2 2 2 2 2 2 2 2 2 ...\n  ..$ plant: num [1:450] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ d44  : num [1:450] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ d51  : num [1:450] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ d58  : num [1:450] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ d65  : num [1:450] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ d72  : num [1:450] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ d79  : num [1:450] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ d86  : num [1:450] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ d93  : num [1:450] 0 0 0 1 1 0 0 0 0 0 ...\n  ..$ d100 : num [1:450] 0 0 0 1 1 0 0 0 0 0 ...\n $ YIELD:'data.frame':  45 obs. of  6 variables:\n  ..$ block: Factor w/ 3 levels \"I\",\"II\",\"III\": 1 1 1 1 1 1 1 1 1 1 ...\n  ..$ trt  : Factor w/ 3 levels \"40mm\",\"7-days\",..: 1 1 1 1 1 2 2 2 2 2 ...\n  ..$ clon : Factor w/ 5 levels \"C386209.10\",\"C387164.4\",..: 2 1 3 5 4 2 1 3 5 4 ...\n  ..$ y1da : num [1:45] 22.8 10.8 1.6 10.9 3.5 ...\n  ..$ y2da : num [1:45] 5.5 8 11.7 9.9 5.1 7 12.5 9.15 8.8 4.6 ...\n  ..$ y3da : num [1:45] 4.14 6.1 4.15 5.2 2.4 7.6 3.6 4.9 5.9 3.5 ...\n\n\nKarena ada dua data.frame, ambil data.frame YIELD:\n\n\nCode\nYIELD<-huasahuasi$YIELD\nstr(YIELD)\n\n\n'data.frame':   45 obs. of  6 variables:\n $ block: Factor w/ 3 levels \"I\",\"II\",\"III\": 1 1 1 1 1 1 1 1 1 1 ...\n $ trt  : Factor w/ 3 levels \"40mm\",\"7-days\",..: 1 1 1 1 1 2 2 2 2 2 ...\n $ clon : Factor w/ 5 levels \"C386209.10\",\"C387164.4\",..: 2 1 3 5 4 2 1 3 5 4 ...\n $ y1da : num  22.8 10.8 1.6 10.9 3.5 ...\n $ y2da : num  5.5 8 11.7 9.9 5.1 7 12.5 9.15 8.8 4.6 ...\n $ y3da : num  4.14 6.1 4.15 5.2 2.4 7.6 3.6 4.9 5.9 3.5 ...\n\n\nAda y1da, y2da, dan y3da. Respon yield merupakan penjumlahan dari ketiga respon tersebut - YIELD$yield<- y1da+y2da+y3da, dan perlakuan ada di trt dan clon.\nBuat bagan percobaan dengan edibble dan lakukan ANOVA!"
  }
]